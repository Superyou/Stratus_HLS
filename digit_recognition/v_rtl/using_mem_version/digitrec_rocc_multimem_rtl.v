// Generated by stratus_vlg 15.21-p100  (11111646)
// Tue Aug  2 13:41:12 2016
// from bdw_work/wrappers/digitrec_rocc_multimem_wrap.cc

`timescale 1ps / 1ps

      
// Generated by stratus_hls 15.21-p100  (11111647)
// Tue Aug  2 13:40:55 2016
// from digitrec_rocc_multimem.cc
/* Include declarations of instantiated parts. */
/* Declaration of the synthesized module. */
module digitrec(clk, rst, cc_busy_o, cc_interrupt_o, cc_status_i, cc_exception_i, cc_host_id_i, core_cmd_ready_o, core_cmd_valid_i, core_cmd_inst_funct_i, core_cmd_inst_rs1_i, core_cmd_inst_rs2_i, core_cmd_inst_xd_i, core_cmd_inst_xs1_i, core_cmd_inst_xs2_i, core_cmd_inst_rd_i, core_cmd_inst_opcode_i, core_cmd_rs1_i, core_cmd_rs2_i, core_resp_ready_i, core_resp_valid_o, core_resp_rd_o, core_resp_data_o
          , mem_req_ready_i, mem_req_valid_o, mem_req_addr_o, mem_req_tag_o, mem_req_cmd_o, mem_req_typ_o, mem_req_phys_o, mem_req_data_o, mem_resp_valid_i, mem_resp_addr_i, mem_resp_tag_i, mem_resp_cmd_i, mem_resp_typ_i, mem_resp_data_i, mem_resp_has_data_i, mem_resp_data_word_bypass_i, mem_resp_store_data_i, mem_resp_nack_i, mem_resp_replay_i);

      input clk;
      input rst;
      input cc_status_i;
      input cc_exception_i;
      input cc_host_id_i;
      input core_cmd_valid_i;
      input [6:0] core_cmd_inst_funct_i;
      input [4:0] core_cmd_inst_rs1_i;
      input [4:0] core_cmd_inst_rs2_i;
      input core_cmd_inst_xd_i;
      input core_cmd_inst_xs1_i;
      input core_cmd_inst_xs2_i;
      input [4:0] core_cmd_inst_rd_i;
      input [6:0] core_cmd_inst_opcode_i;
      input [63:0] core_cmd_rs1_i;
      input [63:0] core_cmd_rs2_i;
      input core_resp_ready_i;
      input mem_req_ready_i;
      input mem_resp_valid_i;
      input [39:0] mem_resp_addr_i;
      input [9:0] mem_resp_tag_i;
      input [4:0] mem_resp_cmd_i;
      input [2:0] mem_resp_typ_i;
      input [63:0] mem_resp_data_i;
      input mem_resp_has_data_i;
      input [63:0] mem_resp_data_word_bypass_i;
      input [63:0] mem_resp_store_data_i;
      input mem_resp_nack_i;
      input mem_resp_replay_i;
      output cc_busy_o;
      reg cc_busy_o;
      output cc_interrupt_o;
      output core_cmd_ready_o;
      reg core_cmd_ready_o;
      output core_resp_valid_o;
      reg core_resp_valid_o;
      output [4:0] core_resp_rd_o;
      reg [4:0] core_resp_rd_o;
      output [63:0] core_resp_data_o;
      output mem_req_valid_o;
      reg mem_req_valid_o;
      output [39:0] mem_req_addr_o;
      reg [39:0] mem_req_addr_o;
      output [9:0] mem_req_tag_o;
      output [4:0] mem_req_cmd_o;
      output [2:0] mem_req_typ_o;
      output mem_req_phys_o;
      output [63:0] mem_req_data_o;
      wire[4:0] s_reg_60;
      wire[3:0] s_reg_61;
      /*signed*/wire[31:0] digitrec_Add2i1s32_4_78_out1;
      wire digitrec_Lti10s5_4_57_out1;
      wire digitrec_Equal_1U_24_4_51_out1;
      wire digitrec_Equal_1U_24_4_49_out1;
      wire digitrec_gen000001_4_37_in1;
      wire digitrec_gen000001_4_37_in2;
      wire digitrec_gen000001_4_37_in3;
      wire digitrec_gen000001_4_37_in4;
      wire digitrec_gen000001_4_37_in5;
      wire digitrec_gen000001_4_37_in6;
      wire digitrec_gen000001_4_37_in7;
      wire digitrec_gen000001_4_37_in8;
      wire digitrec_gen000001_4_37_in9;
      wire digitrec_gen000001_4_37_in10;
      wire digitrec_gen000001_4_37_in11;
      wire digitrec_gen000001_4_37_in12;
      wire digitrec_gen000001_4_37_in13;
      wire digitrec_gen000001_4_37_in14;
      wire digitrec_gen000001_4_37_in15;
      wire digitrec_gen000001_4_37_in16;
      wire digitrec_gen000001_4_37_in17;
      wire digitrec_gen000001_4_37_in18;
      wire digitrec_gen000001_4_37_in19;
      wire digitrec_gen000001_4_37_in20;
      wire digitrec_gen000001_4_37_in21;
      wire digitrec_gen000001_4_37_in22;
      wire digitrec_gen000001_4_37_in23;
      wire digitrec_gen000001_4_37_in24;
      wire digitrec_gen000001_4_37_in25;
      wire digitrec_gen000001_4_37_in26;
      wire digitrec_gen000001_4_37_in27;
      wire digitrec_gen000001_4_37_in28;
      wire digitrec_gen000001_4_37_in29;
      wire digitrec_gen000001_4_37_in30;
      wire digitrec_gen000001_4_37_in31;
      wire digitrec_gen000001_4_37_in32;
      wire digitrec_gen000001_4_37_in33;
      wire digitrec_gen000001_4_37_in34;
      wire digitrec_gen000001_4_37_in35;
      wire digitrec_gen000001_4_37_in36;
      wire digitrec_gen000001_4_37_in37;
      wire digitrec_gen000001_4_37_in38;
      wire digitrec_gen000001_4_37_in39;
      wire digitrec_gen000001_4_37_in40;
      wire digitrec_gen000001_4_37_in41;
      wire digitrec_gen000001_4_37_in42;
      wire digitrec_gen000001_4_37_in43;
      wire digitrec_gen000001_4_37_in44;
      wire digitrec_gen000001_4_37_in45;
      wire digitrec_gen000001_4_37_in46;
      wire digitrec_gen000001_4_37_in47;
      wire digitrec_gen000001_4_37_in48;
      wire digitrec_gen000001_4_36_in1;
      wire digitrec_gen000001_4_36_in2;
      wire digitrec_gen000001_4_36_in3;
      wire digitrec_gen000001_4_36_in4;
      wire digitrec_gen000001_4_36_in5;
      wire digitrec_gen000001_4_36_in6;
      wire digitrec_gen000001_4_36_in7;
      wire digitrec_gen000001_4_36_in8;
      wire digitrec_gen000001_4_36_in9;
      wire digitrec_gen000001_4_36_in10;
      wire digitrec_gen000001_4_36_in11;
      wire digitrec_gen000001_4_36_in12;
      wire digitrec_gen000001_4_36_in13;
      wire digitrec_gen000001_4_36_in14;
      wire digitrec_gen000001_4_36_in15;
      wire digitrec_gen000001_4_36_in16;
      wire digitrec_gen000001_4_36_in17;
      wire digitrec_gen000001_4_36_in18;
      wire digitrec_gen000001_4_36_in19;
      wire digitrec_gen000001_4_36_in20;
      wire digitrec_gen000001_4_36_in21;
      wire digitrec_gen000001_4_36_in22;
      wire digitrec_gen000001_4_36_in23;
      wire digitrec_gen000001_4_36_in24;
      wire digitrec_gen000001_4_36_in25;
      wire digitrec_gen000001_4_36_in26;
      wire digitrec_gen000001_4_36_in27;
      wire digitrec_gen000001_4_36_in28;
      wire digitrec_gen000001_4_36_in29;
      wire digitrec_gen000001_4_36_in30;
      wire digitrec_gen000001_4_36_in31;
      wire digitrec_gen000001_4_36_in32;
      wire digitrec_gen000001_4_36_in33;
      wire digitrec_gen000001_4_36_in34;
      wire digitrec_gen000001_4_36_in35;
      wire digitrec_gen000001_4_36_in36;
      wire digitrec_gen000001_4_36_in37;
      wire digitrec_gen000001_4_36_in38;
      wire digitrec_gen000001_4_36_in39;
      wire digitrec_gen000001_4_36_in40;
      wire digitrec_gen000001_4_36_in41;
      wire digitrec_gen000001_4_36_in42;
      wire digitrec_gen000001_4_36_in43;
      wire digitrec_gen000001_4_36_in44;
      wire digitrec_gen000001_4_36_in45;
      wire digitrec_gen000001_4_36_in46;
      wire digitrec_gen000001_4_36_in47;
      wire digitrec_gen000001_4_36_in48;
      wire digitrec_gen000001_4_35_in1;
      wire digitrec_gen000001_4_35_in2;
      wire digitrec_gen000001_4_35_in3;
      wire digitrec_gen000001_4_35_in4;
      wire digitrec_gen000001_4_35_in5;
      wire digitrec_gen000001_4_35_in6;
      wire digitrec_gen000001_4_35_in7;
      wire digitrec_gen000001_4_35_in8;
      wire digitrec_gen000001_4_35_in9;
      wire digitrec_gen000001_4_35_in10;
      wire digitrec_gen000001_4_35_in11;
      wire digitrec_gen000001_4_35_in12;
      wire digitrec_gen000001_4_35_in13;
      wire digitrec_gen000001_4_35_in14;
      wire digitrec_gen000001_4_35_in15;
      wire digitrec_gen000001_4_35_in16;
      wire digitrec_gen000001_4_35_in17;
      wire digitrec_gen000001_4_35_in18;
      wire digitrec_gen000001_4_35_in19;
      wire digitrec_gen000001_4_35_in20;
      wire digitrec_gen000001_4_35_in21;
      wire digitrec_gen000001_4_35_in22;
      wire digitrec_gen000001_4_35_in23;
      wire digitrec_gen000001_4_35_in24;
      wire digitrec_gen000001_4_35_in25;
      wire digitrec_gen000001_4_35_in26;
      wire digitrec_gen000001_4_35_in27;
      wire digitrec_gen000001_4_35_in28;
      wire digitrec_gen000001_4_35_in29;
      wire digitrec_gen000001_4_35_in30;
      wire digitrec_gen000001_4_35_in31;
      wire digitrec_gen000001_4_35_in32;
      wire digitrec_gen000001_4_35_in33;
      wire digitrec_gen000001_4_35_in34;
      wire digitrec_gen000001_4_35_in35;
      wire digitrec_gen000001_4_35_in36;
      wire digitrec_gen000001_4_35_in37;
      wire digitrec_gen000001_4_35_in38;
      wire digitrec_gen000001_4_35_in39;
      wire digitrec_gen000001_4_35_in40;
      wire digitrec_gen000001_4_35_in41;
      wire digitrec_gen000001_4_35_in42;
      wire digitrec_gen000001_4_35_in43;
      wire digitrec_gen000001_4_35_in44;
      wire digitrec_gen000001_4_35_in45;
      wire digitrec_gen000001_4_35_in46;
      wire digitrec_gen000001_4_35_in47;
      wire digitrec_gen000001_4_35_in48;
      wire digitrec_gen000001_4_34_in1;
      wire digitrec_gen000001_4_34_in2;
      wire digitrec_gen000001_4_34_in3;
      wire digitrec_gen000001_4_34_in4;
      wire digitrec_gen000001_4_34_in5;
      wire digitrec_gen000001_4_34_in6;
      wire digitrec_gen000001_4_34_in7;
      wire digitrec_gen000001_4_34_in8;
      wire digitrec_gen000001_4_34_in9;
      wire digitrec_gen000001_4_34_in10;
      wire digitrec_gen000001_4_34_in11;
      wire digitrec_gen000001_4_34_in12;
      wire digitrec_gen000001_4_34_in13;
      wire digitrec_gen000001_4_34_in14;
      wire digitrec_gen000001_4_34_in15;
      wire digitrec_gen000001_4_34_in16;
      wire digitrec_gen000001_4_34_in17;
      wire digitrec_gen000001_4_34_in18;
      wire digitrec_gen000001_4_34_in19;
      wire digitrec_gen000001_4_34_in20;
      wire digitrec_gen000001_4_34_in21;
      wire digitrec_gen000001_4_34_in22;
      wire digitrec_gen000001_4_34_in23;
      wire digitrec_gen000001_4_34_in24;
      wire digitrec_gen000001_4_34_in25;
      wire digitrec_gen000001_4_34_in26;
      wire digitrec_gen000001_4_34_in27;
      wire digitrec_gen000001_4_34_in28;
      wire digitrec_gen000001_4_34_in29;
      wire digitrec_gen000001_4_34_in30;
      wire digitrec_gen000001_4_34_in31;
      wire digitrec_gen000001_4_34_in32;
      wire digitrec_gen000001_4_34_in33;
      wire digitrec_gen000001_4_34_in34;
      wire digitrec_gen000001_4_34_in35;
      wire digitrec_gen000001_4_34_in36;
      wire digitrec_gen000001_4_34_in37;
      wire digitrec_gen000001_4_34_in38;
      wire digitrec_gen000001_4_34_in39;
      wire digitrec_gen000001_4_34_in40;
      wire digitrec_gen000001_4_34_in41;
      wire digitrec_gen000001_4_34_in42;
      wire digitrec_gen000001_4_34_in43;
      wire digitrec_gen000001_4_34_in44;
      wire digitrec_gen000001_4_34_in45;
      wire digitrec_gen000001_4_34_in46;
      wire digitrec_gen000001_4_34_in47;
      wire digitrec_gen000001_4_34_in48;
      wire digitrec_gen000001_4_33_in1;
      wire digitrec_gen000001_4_33_in2;
      wire digitrec_gen000001_4_33_in3;
      wire digitrec_gen000001_4_33_in4;
      wire digitrec_gen000001_4_33_in5;
      wire digitrec_gen000001_4_33_in6;
      wire digitrec_gen000001_4_33_in7;
      wire digitrec_gen000001_4_33_in8;
      wire digitrec_gen000001_4_33_in9;
      wire digitrec_gen000001_4_33_in10;
      wire digitrec_gen000001_4_33_in11;
      wire digitrec_gen000001_4_33_in12;
      wire digitrec_gen000001_4_33_in13;
      wire digitrec_gen000001_4_33_in14;
      wire digitrec_gen000001_4_33_in15;
      wire digitrec_gen000001_4_33_in16;
      wire digitrec_gen000001_4_33_in17;
      wire digitrec_gen000001_4_33_in18;
      wire digitrec_gen000001_4_33_in19;
      wire digitrec_gen000001_4_33_in20;
      wire digitrec_gen000001_4_33_in21;
      wire digitrec_gen000001_4_33_in22;
      wire digitrec_gen000001_4_33_in23;
      wire digitrec_gen000001_4_33_in24;
      wire digitrec_gen000001_4_33_in25;
      wire digitrec_gen000001_4_33_in26;
      wire digitrec_gen000001_4_33_in27;
      wire digitrec_gen000001_4_33_in28;
      wire digitrec_gen000001_4_33_in29;
      wire digitrec_gen000001_4_33_in30;
      wire digitrec_gen000001_4_33_in31;
      wire digitrec_gen000001_4_33_in32;
      wire digitrec_gen000001_4_33_in33;
      wire digitrec_gen000001_4_33_in34;
      wire digitrec_gen000001_4_33_in35;
      wire digitrec_gen000001_4_33_in36;
      wire digitrec_gen000001_4_33_in37;
      wire digitrec_gen000001_4_33_in38;
      wire digitrec_gen000001_4_33_in39;
      wire digitrec_gen000001_4_33_in40;
      wire digitrec_gen000001_4_33_in41;
      wire digitrec_gen000001_4_33_in42;
      wire digitrec_gen000001_4_33_in43;
      wire digitrec_gen000001_4_33_in44;
      wire digitrec_gen000001_4_33_in45;
      wire digitrec_gen000001_4_33_in46;
      wire digitrec_gen000001_4_33_in47;
      wire digitrec_gen000001_4_33_in48;
      wire digitrec_gen000001_4_32_in1;
      wire digitrec_gen000001_4_32_in2;
      wire digitrec_gen000001_4_32_in3;
      wire digitrec_gen000001_4_32_in4;
      wire digitrec_gen000001_4_32_in5;
      wire digitrec_gen000001_4_32_in6;
      wire digitrec_gen000001_4_32_in7;
      wire digitrec_gen000001_4_32_in8;
      wire digitrec_gen000001_4_32_in9;
      wire digitrec_gen000001_4_32_in10;
      wire digitrec_gen000001_4_32_in11;
      wire digitrec_gen000001_4_32_in12;
      wire digitrec_gen000001_4_32_in13;
      wire digitrec_gen000001_4_32_in14;
      wire digitrec_gen000001_4_32_in15;
      wire digitrec_gen000001_4_32_in16;
      wire digitrec_gen000001_4_32_in17;
      wire digitrec_gen000001_4_32_in18;
      wire digitrec_gen000001_4_32_in19;
      wire digitrec_gen000001_4_32_in20;
      wire digitrec_gen000001_4_32_in21;
      wire digitrec_gen000001_4_32_in22;
      wire digitrec_gen000001_4_32_in23;
      wire digitrec_gen000001_4_32_in24;
      wire digitrec_gen000001_4_32_in25;
      wire digitrec_gen000001_4_32_in26;
      wire digitrec_gen000001_4_32_in27;
      wire digitrec_gen000001_4_32_in28;
      wire digitrec_gen000001_4_32_in29;
      wire digitrec_gen000001_4_32_in30;
      wire digitrec_gen000001_4_32_in31;
      wire digitrec_gen000001_4_32_in32;
      wire digitrec_gen000001_4_32_in33;
      wire digitrec_gen000001_4_32_in34;
      wire digitrec_gen000001_4_32_in35;
      wire digitrec_gen000001_4_32_in36;
      wire digitrec_gen000001_4_32_in37;
      wire digitrec_gen000001_4_32_in38;
      wire digitrec_gen000001_4_32_in39;
      wire digitrec_gen000001_4_32_in40;
      wire digitrec_gen000001_4_32_in41;
      wire digitrec_gen000001_4_32_in42;
      wire digitrec_gen000001_4_32_in43;
      wire digitrec_gen000001_4_32_in44;
      wire digitrec_gen000001_4_32_in45;
      wire digitrec_gen000001_4_32_in46;
      wire digitrec_gen000001_4_32_in47;
      wire digitrec_gen000001_4_32_in48;
      wire digitrec_gen000001_4_31_in1;
      wire digitrec_gen000001_4_31_in2;
      wire digitrec_gen000001_4_31_in3;
      wire digitrec_gen000001_4_31_in4;
      wire digitrec_gen000001_4_31_in5;
      wire digitrec_gen000001_4_31_in6;
      wire digitrec_gen000001_4_31_in7;
      wire digitrec_gen000001_4_31_in8;
      wire digitrec_gen000001_4_31_in9;
      wire digitrec_gen000001_4_31_in10;
      wire digitrec_gen000001_4_31_in11;
      wire digitrec_gen000001_4_31_in12;
      wire digitrec_gen000001_4_31_in13;
      wire digitrec_gen000001_4_31_in14;
      wire digitrec_gen000001_4_31_in15;
      wire digitrec_gen000001_4_31_in16;
      wire digitrec_gen000001_4_31_in17;
      wire digitrec_gen000001_4_31_in18;
      wire digitrec_gen000001_4_31_in19;
      wire digitrec_gen000001_4_31_in20;
      wire digitrec_gen000001_4_31_in21;
      wire digitrec_gen000001_4_31_in22;
      wire digitrec_gen000001_4_31_in23;
      wire digitrec_gen000001_4_31_in24;
      wire digitrec_gen000001_4_31_in25;
      wire digitrec_gen000001_4_31_in26;
      wire digitrec_gen000001_4_31_in27;
      wire digitrec_gen000001_4_31_in28;
      wire digitrec_gen000001_4_31_in29;
      wire digitrec_gen000001_4_31_in30;
      wire digitrec_gen000001_4_31_in31;
      wire digitrec_gen000001_4_31_in32;
      wire digitrec_gen000001_4_31_in33;
      wire digitrec_gen000001_4_31_in34;
      wire digitrec_gen000001_4_31_in35;
      wire digitrec_gen000001_4_31_in36;
      wire digitrec_gen000001_4_31_in37;
      wire digitrec_gen000001_4_31_in38;
      wire digitrec_gen000001_4_31_in39;
      wire digitrec_gen000001_4_31_in40;
      wire digitrec_gen000001_4_31_in41;
      wire digitrec_gen000001_4_31_in42;
      wire digitrec_gen000001_4_31_in43;
      wire digitrec_gen000001_4_31_in44;
      wire digitrec_gen000001_4_31_in45;
      wire digitrec_gen000001_4_31_in46;
      wire digitrec_gen000001_4_31_in47;
      wire digitrec_gen000001_4_31_in48;
      wire digitrec_gen000001_4_30_in1;
      wire digitrec_gen000001_4_30_in2;
      wire digitrec_gen000001_4_30_in3;
      wire digitrec_gen000001_4_30_in4;
      wire digitrec_gen000001_4_30_in5;
      wire digitrec_gen000001_4_30_in6;
      wire digitrec_gen000001_4_30_in7;
      wire digitrec_gen000001_4_30_in8;
      wire digitrec_gen000001_4_30_in9;
      wire digitrec_gen000001_4_30_in10;
      wire digitrec_gen000001_4_30_in11;
      wire digitrec_gen000001_4_30_in12;
      wire digitrec_gen000001_4_30_in13;
      wire digitrec_gen000001_4_30_in14;
      wire digitrec_gen000001_4_30_in15;
      wire digitrec_gen000001_4_30_in16;
      wire digitrec_gen000001_4_30_in17;
      wire digitrec_gen000001_4_30_in18;
      wire digitrec_gen000001_4_30_in19;
      wire digitrec_gen000001_4_30_in20;
      wire digitrec_gen000001_4_30_in21;
      wire digitrec_gen000001_4_30_in22;
      wire digitrec_gen000001_4_30_in23;
      wire digitrec_gen000001_4_30_in24;
      wire digitrec_gen000001_4_30_in25;
      wire digitrec_gen000001_4_30_in26;
      wire digitrec_gen000001_4_30_in27;
      wire digitrec_gen000001_4_30_in28;
      wire digitrec_gen000001_4_30_in29;
      wire digitrec_gen000001_4_30_in30;
      wire digitrec_gen000001_4_30_in31;
      wire digitrec_gen000001_4_30_in32;
      wire digitrec_gen000001_4_30_in33;
      wire digitrec_gen000001_4_30_in34;
      wire digitrec_gen000001_4_30_in35;
      wire digitrec_gen000001_4_30_in36;
      wire digitrec_gen000001_4_30_in37;
      wire digitrec_gen000001_4_30_in38;
      wire digitrec_gen000001_4_30_in39;
      wire digitrec_gen000001_4_30_in40;
      wire digitrec_gen000001_4_30_in41;
      wire digitrec_gen000001_4_30_in42;
      wire digitrec_gen000001_4_30_in43;
      wire digitrec_gen000001_4_30_in44;
      wire digitrec_gen000001_4_30_in45;
      wire digitrec_gen000001_4_30_in46;
      wire digitrec_gen000001_4_30_in47;
      wire digitrec_gen000001_4_30_in48;
      wire digitrec_gen000001_4_29_in1;
      wire digitrec_gen000001_4_29_in2;
      wire digitrec_gen000001_4_29_in3;
      wire digitrec_gen000001_4_29_in4;
      wire digitrec_gen000001_4_29_in5;
      wire digitrec_gen000001_4_29_in6;
      wire digitrec_gen000001_4_29_in7;
      wire digitrec_gen000001_4_29_in8;
      wire digitrec_gen000001_4_29_in9;
      wire digitrec_gen000001_4_29_in10;
      wire digitrec_gen000001_4_29_in11;
      wire digitrec_gen000001_4_29_in12;
      wire digitrec_gen000001_4_29_in13;
      wire digitrec_gen000001_4_29_in14;
      wire digitrec_gen000001_4_29_in15;
      wire digitrec_gen000001_4_29_in16;
      wire digitrec_gen000001_4_29_in17;
      wire digitrec_gen000001_4_29_in18;
      wire digitrec_gen000001_4_29_in19;
      wire digitrec_gen000001_4_29_in20;
      wire digitrec_gen000001_4_29_in21;
      wire digitrec_gen000001_4_29_in22;
      wire digitrec_gen000001_4_29_in23;
      wire digitrec_gen000001_4_29_in24;
      wire digitrec_gen000001_4_29_in25;
      wire digitrec_gen000001_4_29_in26;
      wire digitrec_gen000001_4_29_in27;
      wire digitrec_gen000001_4_29_in28;
      wire digitrec_gen000001_4_29_in29;
      wire digitrec_gen000001_4_29_in30;
      wire digitrec_gen000001_4_29_in31;
      wire digitrec_gen000001_4_29_in32;
      wire digitrec_gen000001_4_29_in33;
      wire digitrec_gen000001_4_29_in34;
      wire digitrec_gen000001_4_29_in35;
      wire digitrec_gen000001_4_29_in36;
      wire digitrec_gen000001_4_29_in37;
      wire digitrec_gen000001_4_29_in38;
      wire digitrec_gen000001_4_29_in39;
      wire digitrec_gen000001_4_29_in40;
      wire digitrec_gen000001_4_29_in41;
      wire digitrec_gen000001_4_29_in42;
      wire digitrec_gen000001_4_29_in43;
      wire digitrec_gen000001_4_29_in44;
      wire digitrec_gen000001_4_29_in45;
      wire digitrec_gen000001_4_29_in46;
      wire digitrec_gen000001_4_29_in47;
      wire digitrec_gen000001_4_29_in48;
      wire digitrec_gen000001_4_28_in1;
      wire digitrec_gen000001_4_28_in2;
      wire digitrec_gen000001_4_28_in3;
      wire digitrec_gen000001_4_28_in4;
      wire digitrec_gen000001_4_28_in5;
      wire digitrec_gen000001_4_28_in6;
      wire digitrec_gen000001_4_28_in7;
      wire digitrec_gen000001_4_28_in8;
      wire digitrec_gen000001_4_28_in9;
      wire digitrec_gen000001_4_28_in10;
      wire digitrec_gen000001_4_28_in11;
      wire digitrec_gen000001_4_28_in12;
      wire digitrec_gen000001_4_28_in13;
      wire digitrec_gen000001_4_28_in14;
      wire digitrec_gen000001_4_28_in15;
      wire digitrec_gen000001_4_28_in16;
      wire digitrec_gen000001_4_28_in17;
      wire digitrec_gen000001_4_28_in18;
      wire digitrec_gen000001_4_28_in19;
      wire digitrec_gen000001_4_28_in20;
      wire digitrec_gen000001_4_28_in21;
      wire digitrec_gen000001_4_28_in22;
      wire digitrec_gen000001_4_28_in23;
      wire digitrec_gen000001_4_28_in24;
      wire digitrec_gen000001_4_28_in25;
      wire digitrec_gen000001_4_28_in26;
      wire digitrec_gen000001_4_28_in27;
      wire digitrec_gen000001_4_28_in28;
      wire digitrec_gen000001_4_28_in29;
      wire digitrec_gen000001_4_28_in30;
      wire digitrec_gen000001_4_28_in31;
      wire digitrec_gen000001_4_28_in32;
      wire digitrec_gen000001_4_28_in33;
      wire digitrec_gen000001_4_28_in34;
      wire digitrec_gen000001_4_28_in35;
      wire digitrec_gen000001_4_28_in36;
      wire digitrec_gen000001_4_28_in37;
      wire digitrec_gen000001_4_28_in38;
      wire digitrec_gen000001_4_28_in39;
      wire digitrec_gen000001_4_28_in40;
      wire digitrec_gen000001_4_28_in41;
      wire digitrec_gen000001_4_28_in42;
      wire digitrec_gen000001_4_28_in43;
      wire digitrec_gen000001_4_28_in44;
      wire digitrec_gen000001_4_28_in45;
      wire digitrec_gen000001_4_28_in46;
      wire digitrec_gen000001_4_28_in47;
      wire digitrec_gen000001_4_28_in48;
      wire[48:0] digitrec_Xor_49U_35_4_27_out1;
      wire[48:0] digitrec_Xor_49U_35_4_26_out1;
      wire[48:0] digitrec_Xor_49U_35_4_25_out1;
      wire[48:0] digitrec_Xor_49U_35_4_24_out1;
      wire[48:0] digitrec_Xor_49U_35_4_23_out1;
      wire[48:0] digitrec_Xor_49U_35_4_22_out1;
      wire[48:0] digitrec_Xor_49U_35_4_21_out1;
      wire[48:0] digitrec_Xor_49U_35_4_20_out1;
      wire[48:0] digitrec_Xor_49U_35_4_19_out1;
      wire[48:0] digitrec_Xor_49U_35_4_18_out1;
      wire digitrec_LtiLLs12_4_48_out1;
      wire[39:0] digitrec_Add_40U_33_4_16_out1;
      /*signed*/wire[16:0] digitrec_Mul_12Sx5S_17S_4_15_out1;
      wire digitrec_OrReduction_1U_1_4_3_out1;
      wire digitrec_GreaterThan_1U_32_4_80_out1;
      /*signed*/wire[4:0] digitrec_Add2i1s5_4_79_out1;
      wire digitrec_OrReduction_1U_1_4_64_out1;
      wire digitrec_LessThan_1U_26_4_62_out1;
      wire digitrec_Lti10s5_4_60_out1;
      /*signed*/wire[4:0] digitrec_Add2i1s5_4_59_out1;
      /*signed*/wire[4:0] digitrec_Add2i1s5_4_55_out1;
      /*signed*/wire[4:0] digitrec_Add2i1s5_4_53_out1;
      /*signed*/wire[11:0] digitrec_Add2i1s12_4_56_out1;
      /*signed*/wire[4:0] digitrec_Add2i1s5_4_1_out1;
      /*signed*/wire[11:0] digitrec_Add2i1s12_4_14_out1;
      wire digitrec_Lti10s5_4_2_out1;
      wire digitrec_And_1U_3_4_50_out1;
      wire digitrec_And_1U_3_4_52_out1;
      wire[5:0] digitrec_gen000001_4_37_out1;
      wire digitrec_LessThan_1U_26_4_47_out1;
      wire digitrec_Eqi9u4_4_12_out1;
      wire[5:0] digitrec_gen000001_4_36_out1;
      wire digitrec_LessThan_1U_26_4_46_out1;
      wire digitrec_Eqi8u4_4_11_out1;
      wire[5:0] digitrec_gen000001_4_35_out1;
      wire digitrec_LessThan_1U_26_4_45_out1;
      wire digitrec_Eqi7u4_4_10_out1;
      wire[5:0] digitrec_gen000001_4_34_out1;
      wire digitrec_LessThan_1U_26_4_44_out1;
      wire digitrec_Eqi6u4_4_9_out1;
      wire[5:0] digitrec_gen000001_4_33_out1;
      wire digitrec_LessThan_1U_26_4_43_out1;
      wire digitrec_Eqi5u4_4_8_out1;
      wire[5:0] digitrec_gen000001_4_32_out1;
      wire digitrec_LessThan_1U_26_4_42_out1;
      wire digitrec_Eqi4u4_4_7_out1;
      wire[5:0] digitrec_gen000001_4_31_out1;
      wire digitrec_LessThan_1U_26_4_41_out1;
      wire digitrec_Eqi3u4_4_6_out1;
      wire[5:0] digitrec_gen000001_4_30_out1;
      wire digitrec_LessThan_1U_26_4_40_out1;
      wire digitrec_Eqi2u4_4_5_out1;
      wire[5:0] digitrec_gen000001_4_29_out1;
      wire digitrec_LessThan_1U_26_4_39_out1;
      wire digitrec_Eqi1u4_4_4_out1;
      wire[5:0] digitrec_gen000001_4_28_out1;
      wire digitrec_LessThan_1U_26_4_38_out1;
      wire digitrec_Not_1U_2_4_13_out1;
      wire digitrec_Lti10s5_4_82_out1;
      wire[39:0] digitrec_Add_40U_33_4_17_out1;
      wire digitrec_LtiLLs12_4_58_out1;
      wire digitrec_Lti10s5_4_54_out1;
      wire[48:0] digitrec_RAM_1800X49_1_kscore_63_DIN;
      wire[10:0] digitrec_RAM_1800X49_1_kscore_63_in1;
      wire[48:0] digitrec_RAM_1800X49_1_kscore_63_out1;
      wire[48:0] digitrec_RAM_1800X49_1_training_set_0_22_out1;
      wire[48:0] digitrec_RAM_1800X49_1_training_set_1_23_out1;
      wire[48:0] digitrec_RAM_1800X49_1_training_set_2_24_out1;
      wire[48:0] digitrec_RAM_1800X49_1_training_set_3_25_out1;
      wire[48:0] digitrec_RAM_1800X49_1_training_set_4_26_out1;
      wire[48:0] digitrec_RAM_1800X49_1_training_set_5_27_out1;
      wire[48:0] digitrec_RAM_1800X49_1_training_set_6_28_out1;
      wire[48:0] digitrec_RAM_1800X49_1_training_set_7_29_out1;
      wire[48:0] digitrec_RAM_1800X49_1_training_set_8_30_out1;
      wire[48:0] digitrec_RAM_1800X49_1_training_set_9_31_out1;
      wire[5:0] in1_din_wire;
      wire[5:0] knn_set_0_if_2_dout_wire;
      wire[5:0] in1_din_wire_0;
      wire[5:0] knn_set_1_if_2_dout_wire;
      wire[5:0] in1_din_wire_1;
      wire[5:0] knn_set_2_if_2_dout_wire;
      wire[5:0] in1_din_wire_2;
      wire[5:0] knn_set_3_if_2_dout_wire;
      wire[5:0] in1_din_wire_3;
      wire[5:0] knn_set_4_if_2_dout_wire;
      wire[5:0] in1_din_wire_4;
      wire[5:0] knn_set_5_if_2_dout_wire;
      wire[5:0] in1_din_wire_5;
      wire[5:0] knn_set_6_if_2_dout_wire;
      wire[5:0] in1_din_wire_6;
      wire[5:0] knn_set_7_if_2_dout_wire;
      wire[5:0] in1_din_wire_7;
      wire[5:0] knn_set_8_if_2_dout_wire;
      wire[5:0] in1_din_wire_8;
      wire[5:0] knn_set_9_if_2_dout_wire;
      wire[48:0] in1_din_wire_9;
      wire[3:0] in2_waddr_wire_9;
      wire[48:0] tmp_if_2_dout_wire;
      wire[48:0] tmp_if_3_dout_wire;
      wire[48:0] tmp_if_4_dout_wire;
      wire[48:0] tmp_if_5_dout_wire;
      wire[48:0] tmp_if_6_dout_wire;
      wire[48:0] tmp_if_7_dout_wire;
      wire[48:0] tmp_if_8_dout_wire;
      wire[48:0] tmp_if_9_dout_wire;
      wire[48:0] tmp_if_10_dout_wire;
      wire[48:0] tmp_if_11_dout_wire;
      reg[4:0] global_state_next;
      /*signed*/reg[4:0] sreg_1;
      reg[5:0] digitrec_N_Mux_6_9_37_4_66_out1;
      reg[5:0] digitrec_N_Mux_6_9_37_4_61_out1;
      /*signed*/reg[4:0] digitrec_Add2i1s5_4_59_in1;
      reg[1:0] gs_ctrl82;
      reg[2:0] gs_ctrl81;
      /*signed*/reg[31:0] digitrec_RAM_1800X49_1_kscore_63_DIN_slice;
      reg[3:0] digitrec_RAM_1800X49_1_kscore_63_in1_slice;
      reg[2:0] gs_ctrl79;
      /*signed*/reg[4:0] digitrec_Add2i1s5_4_55_in1;
      reg gs_ctrl78;
      reg[2:0] gs_ctrl49;
      reg[1:0] gs_ctrl48;
      /*signed*/reg[11:0] digitrec_Add_40U_33_4_17_in1_slice;
      reg[1:0] gs_ctrl47;
      reg[39:0] digitrec_Add_40U_33_4_16_in1;
      reg gs_ctrl46;
      /*signed*/reg[4:0] digitrec_Mul_12Sx5S_17S_4_15_in1;
      reg gs_ctrl45;
      /*signed*/reg[11:0] digitrec_Add2i1s12_4_14_in1;
      reg gs_ctrl44;
      reg digitrec_Not_1U_2_4_13_in1;
      reg gs_ctrl43;
      reg[3:0] digitrec_OrReduction_1U_1_4_3_in1;
      /*signed*/reg[4:0] digitrec_Add2i1s5_4_1_in1;
      reg gs_ctrl32;
      reg s_reg_72;
      reg[4:0] s_reg_71;
      reg[4:0] s_reg_70;
      reg[31:0] digitrec_N_Mux_32_2_34_4_83_out1;
      reg[31:0] s_reg_69;
      reg[3:0] s_reg_73;
      reg[3:0] s_reg_68;
      reg s_reg_67;
      reg[3:0] digitrec_N_Mux_4_2_29_4_63_out1;
      reg s_reg_65;
      reg[3:0] s_reg_64;
      reg s_reg_63;
      reg[4:0] s_reg_62;
      reg[3:0] s_reg_66;
      reg[3:0] s_reg_58;
      reg[5:0] digitrec_N_Mux_6_2_30_4_67_out1;
      reg[5:0] s_reg_57;
      reg[4:0] s_reg_56;
      /*signed*/reg[4:0] s_reg_54_slice;
      reg[4:0] s_reg_50;
      reg[11:0] s_reg_52;
      reg[11:0] s_reg_49;
      reg[39:0] s_reg_48;
      reg[48:0] s_reg_47;
      reg[48:0] s_reg_44;
      reg[11:0] s_reg_42;
      reg[3:0] s_reg_74;
      reg[3:0] digitrec_N_Mux_4_2_29_4_81_out1;
      reg[4:0] s_reg_53;
      reg[1:0] gs_ctrl31;
      reg[1:0] gs_ctrl30;
      reg gs_ctrl2;
      reg[1:0] gs_ctrl1;
      reg gs_ctrl0;
      reg[4:0] s_reg_46;
      reg[3:0] s_reg_41;
      reg s_reg_45;
      reg[3:0] core_resp_data_o_slice2;
      reg[4:0] s_reg_55;
      /*signed*/reg[4:0] mem_req_tag_o_slice;
      reg[6:0] s_reg_43;
      reg[4:0] global_state;
      reg mem_req_typ_o_slice;
      reg digitrec_RAM_1800X49_1_kscore_63_CE;
      reg digitrec_RAM_1800X49_1_kscore_63_RW;
      reg digitrec_RAM_1800X49_1_training_set_0_22_CE;
      reg digitrec_RAM_1800X49_1_training_set_0_22_RW;
      reg[10:0] digitrec_RAM_1800X49_1_training_set_0_22_in1;
      reg knn_set_0_if_1_wen0_wire;
      reg knn_set_0_if_3_wen0_wire;
      reg[5:0] knn_set_0_inst_digitrec_knn_set_0_regbank_r0;
      reg knn_set_1_if_1_wen0_wire;
      reg knn_set_1_if_3_wen0_wire;
      reg[5:0] knn_set_1_inst_digitrec_knn_set_1_regbank_r0;
      reg knn_set_2_if_1_wen0_wire;
      reg knn_set_2_if_3_wen0_wire;
      reg[5:0] knn_set_2_inst_digitrec_knn_set_2_regbank_r0;
      reg knn_set_3_if_1_wen0_wire;
      reg knn_set_3_if_3_wen0_wire;
      reg[5:0] knn_set_3_inst_digitrec_knn_set_3_regbank_r0;
      reg knn_set_4_if_1_wen0_wire;
      reg knn_set_4_if_3_wen0_wire;
      reg[5:0] knn_set_4_inst_digitrec_knn_set_4_regbank_r0;
      reg knn_set_5_if_1_wen0_wire;
      reg knn_set_5_if_3_wen0_wire;
      reg[5:0] knn_set_5_inst_digitrec_knn_set_5_regbank_r0;
      reg knn_set_6_if_1_wen0_wire;
      reg knn_set_6_if_3_wen0_wire;
      reg[5:0] knn_set_6_inst_digitrec_knn_set_6_regbank_r0;
      reg knn_set_7_if_1_wen0_wire;
      reg knn_set_7_if_3_wen0_wire;
      reg[5:0] knn_set_7_inst_digitrec_knn_set_7_regbank_r0;
      reg knn_set_8_if_1_wen0_wire;
      reg knn_set_8_if_3_wen0_wire;
      reg[5:0] knn_set_8_inst_digitrec_knn_set_8_regbank_r0;
      reg knn_set_0_if_0_wen0_wire;
      reg knn_set_9_if_1_wen0_wire;
      reg knn_set_9_if_3_wen0_wire;
      reg[5:0] knn_set_9_inst_digitrec_knn_set_9_regbank_r0;
      reg tmp_if_0_wen9_wire;
      reg tmp_if_1_wen0_wire;
      reg[48:0] tmp_inst_digitrec_tmp_regbank_r0;
      reg[48:0] tmp_inst_digitrec_tmp_regbank_r1;
      reg[48:0] tmp_inst_digitrec_tmp_regbank_r2;
      reg[48:0] tmp_inst_digitrec_tmp_regbank_r3;
      reg[48:0] tmp_inst_digitrec_tmp_regbank_r4;
      reg[48:0] tmp_inst_digitrec_tmp_regbank_r5;
      reg[48:0] tmp_inst_digitrec_tmp_regbank_r6;
      reg[48:0] tmp_inst_digitrec_tmp_regbank_r7;
      reg[48:0] tmp_inst_digitrec_tmp_regbank_r8;
      reg[48:0] tmp_inst_digitrec_tmp_regbank_r9;

         // Generated by stratus_hls 15.21-p100  (11111647)
         // Tue Aug  2 13:40:55 2016
         // from digitrec_rocc_multimem.cc
         digitrec_RAM_1800X49_1 digitrec_RAM_1800X49_1_training_set_9_31(
                                  .DIN( tmp_if_11_dout_wire ),
                                  .CE( digitrec_RAM_1800X49_1_training_set_0_22_CE ),
                                  .RW( digitrec_RAM_1800X49_1_training_set_0_22_RW ),
                                  .in1( digitrec_RAM_1800X49_1_training_set_0_22_in1 ),
                                  .out1( digitrec_RAM_1800X49_1_training_set_9_31_out1 ),
                                  .clk( clk )
                                );

         digitrec_RAM_1800X49_1 digitrec_RAM_1800X49_1_training_set_8_30(
                                  .DIN( tmp_if_10_dout_wire ),
                                  .CE( digitrec_RAM_1800X49_1_training_set_0_22_CE ),
                                  .RW( digitrec_RAM_1800X49_1_training_set_0_22_RW ),
                                  .in1( digitrec_RAM_1800X49_1_training_set_0_22_in1 ),
                                  .out1( digitrec_RAM_1800X49_1_training_set_8_30_out1 ),
                                  .clk( clk )
                                );

         digitrec_RAM_1800X49_1 digitrec_RAM_1800X49_1_training_set_7_29(
                                  .DIN( tmp_if_9_dout_wire ),
                                  .CE( digitrec_RAM_1800X49_1_training_set_0_22_CE ),
                                  .RW( digitrec_RAM_1800X49_1_training_set_0_22_RW ),
                                  .in1( digitrec_RAM_1800X49_1_training_set_0_22_in1 ),
                                  .out1( digitrec_RAM_1800X49_1_training_set_7_29_out1 ),
                                  .clk( clk )
                                );

         digitrec_RAM_1800X49_1 digitrec_RAM_1800X49_1_training_set_6_28(
                                  .DIN( tmp_if_8_dout_wire ),
                                  .CE( digitrec_RAM_1800X49_1_training_set_0_22_CE ),
                                  .RW( digitrec_RAM_1800X49_1_training_set_0_22_RW ),
                                  .in1( digitrec_RAM_1800X49_1_training_set_0_22_in1 ),
                                  .out1( digitrec_RAM_1800X49_1_training_set_6_28_out1 ),
                                  .clk( clk )
                                );

         digitrec_RAM_1800X49_1 digitrec_RAM_1800X49_1_training_set_5_27(
                                  .DIN( tmp_if_7_dout_wire ),
                                  .CE( digitrec_RAM_1800X49_1_training_set_0_22_CE ),
                                  .RW( digitrec_RAM_1800X49_1_training_set_0_22_RW ),
                                  .in1( digitrec_RAM_1800X49_1_training_set_0_22_in1 ),
                                  .out1( digitrec_RAM_1800X49_1_training_set_5_27_out1 ),
                                  .clk( clk )
                                );

         digitrec_RAM_1800X49_1 digitrec_RAM_1800X49_1_training_set_4_26(
                                  .DIN( tmp_if_6_dout_wire ),
                                  .CE( digitrec_RAM_1800X49_1_training_set_0_22_CE ),
                                  .RW( digitrec_RAM_1800X49_1_training_set_0_22_RW ),
                                  .in1( digitrec_RAM_1800X49_1_training_set_0_22_in1 ),
                                  .out1( digitrec_RAM_1800X49_1_training_set_4_26_out1 ),
                                  .clk( clk )
                                );

         digitrec_RAM_1800X49_1 digitrec_RAM_1800X49_1_training_set_3_25(
                                  .DIN( tmp_if_5_dout_wire ),
                                  .CE( digitrec_RAM_1800X49_1_training_set_0_22_CE ),
                                  .RW( digitrec_RAM_1800X49_1_training_set_0_22_RW ),
                                  .in1( digitrec_RAM_1800X49_1_training_set_0_22_in1 ),
                                  .out1( digitrec_RAM_1800X49_1_training_set_3_25_out1 ),
                                  .clk( clk )
                                );

         digitrec_RAM_1800X49_1 digitrec_RAM_1800X49_1_training_set_2_24(
                                  .DIN( tmp_if_4_dout_wire ),
                                  .CE( digitrec_RAM_1800X49_1_training_set_0_22_CE ),
                                  .RW( digitrec_RAM_1800X49_1_training_set_0_22_RW ),
                                  .in1( digitrec_RAM_1800X49_1_training_set_0_22_in1 ),
                                  .out1( digitrec_RAM_1800X49_1_training_set_2_24_out1 ),
                                  .clk( clk )
                                );

         digitrec_RAM_1800X49_1 digitrec_RAM_1800X49_1_training_set_1_23(
                                  .DIN( tmp_if_3_dout_wire ),
                                  .CE( digitrec_RAM_1800X49_1_training_set_0_22_CE ),
                                  .RW( digitrec_RAM_1800X49_1_training_set_0_22_RW ),
                                  .in1( digitrec_RAM_1800X49_1_training_set_0_22_in1 ),
                                  .out1( digitrec_RAM_1800X49_1_training_set_1_23_out1 ),
                                  .clk( clk )
                                );

         digitrec_RAM_1800X49_1 digitrec_RAM_1800X49_1_training_set_0_22(
                                  .DIN( tmp_if_2_dout_wire ),
                                  .CE( digitrec_RAM_1800X49_1_training_set_0_22_CE ),
                                  .RW( digitrec_RAM_1800X49_1_training_set_0_22_RW ),
                                  .in1( digitrec_RAM_1800X49_1_training_set_0_22_in1 ),
                                  .out1( digitrec_RAM_1800X49_1_training_set_0_22_out1 ),
                                  .clk( clk )
                                );

         digitrec_RAM_1800X49_1 digitrec_RAM_1800X49_1_kscore_63(
                                  .DIN( digitrec_RAM_1800X49_1_kscore_63_DIN ),
                                  .CE( digitrec_RAM_1800X49_1_kscore_63_CE ),
                                  .RW( digitrec_RAM_1800X49_1_kscore_63_RW ),
                                  .in1( digitrec_RAM_1800X49_1_kscore_63_in1 ),
                                  .out1( digitrec_RAM_1800X49_1_kscore_63_out1 ),
                                  .clk( clk )
                                );

         // resource: tmp  instance: tmp_inst
         assign tmp_if_11_dout_wire = tmp_inst_digitrec_tmp_regbank_r9;

         // resource: tmp  instance: tmp_inst
         assign tmp_if_10_dout_wire = tmp_inst_digitrec_tmp_regbank_r8;

         // resource: tmp  instance: tmp_inst
         assign tmp_if_9_dout_wire = tmp_inst_digitrec_tmp_regbank_r7;

         // resource: tmp  instance: tmp_inst
         assign tmp_if_8_dout_wire = tmp_inst_digitrec_tmp_regbank_r6;

         // resource: tmp  instance: tmp_inst
         assign tmp_if_7_dout_wire = tmp_inst_digitrec_tmp_regbank_r5;

         // resource: tmp  instance: tmp_inst
         assign tmp_if_6_dout_wire = tmp_inst_digitrec_tmp_regbank_r4;

         // resource: tmp  instance: tmp_inst
         assign tmp_if_5_dout_wire = tmp_inst_digitrec_tmp_regbank_r3;

         // resource: tmp  instance: tmp_inst
         assign tmp_if_4_dout_wire = tmp_inst_digitrec_tmp_regbank_r2;

         // resource: tmp  instance: tmp_inst
         assign tmp_if_3_dout_wire = tmp_inst_digitrec_tmp_regbank_r1;

         // resource: tmp  instance: tmp_inst
         assign tmp_if_2_dout_wire = tmp_inst_digitrec_tmp_regbank_r0;

         // resource: tmp  instance: tmp_inst
         always @(posedge clk)
          begin :write_digitrec_tmp_regbank_r9
            if (tmp_if_1_wen0_wire == 1'b1 && in2_waddr_wire_9 == 4'd09) begin
               tmp_inst_digitrec_tmp_regbank_r9 <= in1_din_wire_9;
            end
            else begin
               if (tmp_if_0_wen9_wire == 1'b1) begin
                  tmp_inst_digitrec_tmp_regbank_r9 <= 49'd000000000000000;
               end
            end
         end

         // resource: tmp  instance: tmp_inst
         always @(posedge clk)
          begin :write_digitrec_tmp_regbank_r8
            if (tmp_if_1_wen0_wire == 1'b1 && in2_waddr_wire_9 == 4'd08) begin
               tmp_inst_digitrec_tmp_regbank_r8 <= in1_din_wire_9;
            end
            else begin
               if (tmp_if_0_wen9_wire == 1'b1) begin
                  tmp_inst_digitrec_tmp_regbank_r8 <= 49'd000000000000000;
               end
            end
         end

         // resource: tmp  instance: tmp_inst
         always @(posedge clk)
          begin :write_digitrec_tmp_regbank_r7
            if (tmp_if_1_wen0_wire == 1'b1 && in2_waddr_wire_9 == 4'd07) begin
               tmp_inst_digitrec_tmp_regbank_r7 <= in1_din_wire_9;
            end
            else begin
               if (tmp_if_0_wen9_wire == 1'b1) begin
                  tmp_inst_digitrec_tmp_regbank_r7 <= 49'd000000000000000;
               end
            end
         end

         // resource: tmp  instance: tmp_inst
         always @(posedge clk)
          begin :write_digitrec_tmp_regbank_r6
            if (tmp_if_1_wen0_wire == 1'b1 && in2_waddr_wire_9 == 4'd06) begin
               tmp_inst_digitrec_tmp_regbank_r6 <= in1_din_wire_9;
            end
            else begin
               if (tmp_if_0_wen9_wire == 1'b1) begin
                  tmp_inst_digitrec_tmp_regbank_r6 <= 49'd000000000000000;
               end
            end
         end

         // resource: tmp  instance: tmp_inst
         always @(posedge clk)
          begin :write_digitrec_tmp_regbank_r5
            if (tmp_if_1_wen0_wire == 1'b1 && in2_waddr_wire_9 == 4'd05) begin
               tmp_inst_digitrec_tmp_regbank_r5 <= in1_din_wire_9;
            end
            else begin
               if (tmp_if_0_wen9_wire == 1'b1) begin
                  tmp_inst_digitrec_tmp_regbank_r5 <= 49'd000000000000000;
               end
            end
         end

         // resource: tmp  instance: tmp_inst
         always @(posedge clk)
          begin :write_digitrec_tmp_regbank_r4
            if (tmp_if_1_wen0_wire == 1'b1 && in2_waddr_wire_9 == 4'd04) begin
               tmp_inst_digitrec_tmp_regbank_r4 <= in1_din_wire_9;
            end
            else begin
               if (tmp_if_0_wen9_wire == 1'b1) begin
                  tmp_inst_digitrec_tmp_regbank_r4 <= 49'd000000000000000;
               end
            end
         end

         // resource: tmp  instance: tmp_inst
         always @(posedge clk)
          begin :write_digitrec_tmp_regbank_r3
            if (tmp_if_1_wen0_wire == 1'b1 && in2_waddr_wire_9 == 4'd03) begin
               tmp_inst_digitrec_tmp_regbank_r3 <= in1_din_wire_9;
            end
            else begin
               if (tmp_if_0_wen9_wire == 1'b1) begin
                  tmp_inst_digitrec_tmp_regbank_r3 <= 49'd000000000000000;
               end
            end
         end

         // resource: tmp  instance: tmp_inst
         always @(posedge clk)
          begin :write_digitrec_tmp_regbank_r2
            if (tmp_if_1_wen0_wire == 1'b1 && in2_waddr_wire_9 == 4'd02) begin
               tmp_inst_digitrec_tmp_regbank_r2 <= in1_din_wire_9;
            end
            else begin
               if (tmp_if_0_wen9_wire == 1'b1) begin
                  tmp_inst_digitrec_tmp_regbank_r2 <= 49'd000000000000000;
               end
            end
         end

         // resource: tmp  instance: tmp_inst
         always @(posedge clk)
          begin :write_digitrec_tmp_regbank_r1
            if (tmp_if_1_wen0_wire == 1'b1 && in2_waddr_wire_9 == 4'd01) begin
               tmp_inst_digitrec_tmp_regbank_r1 <= in1_din_wire_9;
            end
            else begin
               if (tmp_if_0_wen9_wire == 1'b1) begin
                  tmp_inst_digitrec_tmp_regbank_r1 <= 49'd000000000000000;
               end
            end
         end

         // resource: tmp  instance: tmp_inst
         always @(posedge clk)
          begin :write_digitrec_tmp_regbank_r0
            if (tmp_if_1_wen0_wire == 1'b1 && !(|in2_waddr_wire_9)) begin
               tmp_inst_digitrec_tmp_regbank_r0 <= in1_din_wire_9;
            end
            else begin
               if (tmp_if_0_wen9_wire == 1'b1) begin
                  tmp_inst_digitrec_tmp_regbank_r0 <= 49'd000000000000000;
               end
            end
         end

         // resource: knn_set[9]  instance: knn_set_9_inst
         assign knn_set_9_if_2_dout_wire = knn_set_9_inst_digitrec_knn_set_9_regbank_r0;

         // resource: knn_set[9]  instance: knn_set_9_inst
         always @(posedge clk)
          begin :write_digitrec_knn_set_9_regbank_r0
            if (knn_set_9_if_3_wen0_wire == 1'b1) begin
               knn_set_9_inst_digitrec_knn_set_9_regbank_r0 <= in1_din_wire_8;
            end
            else begin
               if (knn_set_9_if_1_wen0_wire == 1'b1) begin
                  knn_set_9_inst_digitrec_knn_set_9_regbank_r0 <= 6'd50;
               end
               else begin
                  if (knn_set_0_if_0_wen0_wire == 1'b1) begin
                     knn_set_9_inst_digitrec_knn_set_9_regbank_r0 <= 6'd00;
                  end
               end
            end
         end

         // resource: knn_set[8]  instance: knn_set_8_inst
         assign knn_set_8_if_2_dout_wire = knn_set_8_inst_digitrec_knn_set_8_regbank_r0;

         // resource: knn_set[8]  instance: knn_set_8_inst
         always @(posedge clk)
          begin :write_digitrec_knn_set_8_regbank_r0
            if (knn_set_8_if_3_wen0_wire == 1'b1) begin
               knn_set_8_inst_digitrec_knn_set_8_regbank_r0 <= in1_din_wire_7;
            end
            else begin
               if (knn_set_8_if_1_wen0_wire == 1'b1) begin
                  knn_set_8_inst_digitrec_knn_set_8_regbank_r0 <= 6'd50;
               end
               else begin
                  if (knn_set_0_if_0_wen0_wire == 1'b1) begin
                     knn_set_8_inst_digitrec_knn_set_8_regbank_r0 <= 6'd00;
                  end
               end
            end
         end

         // resource: knn_set[7]  instance: knn_set_7_inst
         assign knn_set_7_if_2_dout_wire = knn_set_7_inst_digitrec_knn_set_7_regbank_r0;

         // resource: knn_set[7]  instance: knn_set_7_inst
         always @(posedge clk)
          begin :write_digitrec_knn_set_7_regbank_r0
            if (knn_set_7_if_3_wen0_wire == 1'b1) begin
               knn_set_7_inst_digitrec_knn_set_7_regbank_r0 <= in1_din_wire_6;
            end
            else begin
               if (knn_set_7_if_1_wen0_wire == 1'b1) begin
                  knn_set_7_inst_digitrec_knn_set_7_regbank_r0 <= 6'd50;
               end
               else begin
                  if (knn_set_0_if_0_wen0_wire == 1'b1) begin
                     knn_set_7_inst_digitrec_knn_set_7_regbank_r0 <= 6'd00;
                  end
               end
            end
         end

         // resource: knn_set[6]  instance: knn_set_6_inst
         assign knn_set_6_if_2_dout_wire = knn_set_6_inst_digitrec_knn_set_6_regbank_r0;

         // resource: knn_set[6]  instance: knn_set_6_inst
         always @(posedge clk)
          begin :write_digitrec_knn_set_6_regbank_r0
            if (knn_set_6_if_3_wen0_wire == 1'b1) begin
               knn_set_6_inst_digitrec_knn_set_6_regbank_r0 <= in1_din_wire_5;
            end
            else begin
               if (knn_set_6_if_1_wen0_wire == 1'b1) begin
                  knn_set_6_inst_digitrec_knn_set_6_regbank_r0 <= 6'd50;
               end
               else begin
                  if (knn_set_0_if_0_wen0_wire == 1'b1) begin
                     knn_set_6_inst_digitrec_knn_set_6_regbank_r0 <= 6'd00;
                  end
               end
            end
         end

         // resource: knn_set[5]  instance: knn_set_5_inst
         assign knn_set_5_if_2_dout_wire = knn_set_5_inst_digitrec_knn_set_5_regbank_r0;

         // resource: knn_set[5]  instance: knn_set_5_inst
         always @(posedge clk)
          begin :write_digitrec_knn_set_5_regbank_r0
            if (knn_set_5_if_3_wen0_wire == 1'b1) begin
               knn_set_5_inst_digitrec_knn_set_5_regbank_r0 <= in1_din_wire_4;
            end
            else begin
               if (knn_set_5_if_1_wen0_wire == 1'b1) begin
                  knn_set_5_inst_digitrec_knn_set_5_regbank_r0 <= 6'd50;
               end
               else begin
                  if (knn_set_0_if_0_wen0_wire == 1'b1) begin
                     knn_set_5_inst_digitrec_knn_set_5_regbank_r0 <= 6'd00;
                  end
               end
            end
         end

         // resource: knn_set[4]  instance: knn_set_4_inst
         assign knn_set_4_if_2_dout_wire = knn_set_4_inst_digitrec_knn_set_4_regbank_r0;

         // resource: knn_set[4]  instance: knn_set_4_inst
         always @(posedge clk)
          begin :write_digitrec_knn_set_4_regbank_r0
            if (knn_set_4_if_3_wen0_wire == 1'b1) begin
               knn_set_4_inst_digitrec_knn_set_4_regbank_r0 <= in1_din_wire_3;
            end
            else begin
               if (knn_set_4_if_1_wen0_wire == 1'b1) begin
                  knn_set_4_inst_digitrec_knn_set_4_regbank_r0 <= 6'd50;
               end
               else begin
                  if (knn_set_0_if_0_wen0_wire == 1'b1) begin
                     knn_set_4_inst_digitrec_knn_set_4_regbank_r0 <= 6'd00;
                  end
               end
            end
         end

         // resource: knn_set[3]  instance: knn_set_3_inst
         assign knn_set_3_if_2_dout_wire = knn_set_3_inst_digitrec_knn_set_3_regbank_r0;

         // resource: knn_set[3]  instance: knn_set_3_inst
         always @(posedge clk)
          begin :write_digitrec_knn_set_3_regbank_r0
            if (knn_set_3_if_3_wen0_wire == 1'b1) begin
               knn_set_3_inst_digitrec_knn_set_3_regbank_r0 <= in1_din_wire_2;
            end
            else begin
               if (knn_set_3_if_1_wen0_wire == 1'b1) begin
                  knn_set_3_inst_digitrec_knn_set_3_regbank_r0 <= 6'd50;
               end
               else begin
                  if (knn_set_0_if_0_wen0_wire == 1'b1) begin
                     knn_set_3_inst_digitrec_knn_set_3_regbank_r0 <= 6'd00;
                  end
               end
            end
         end

         // resource: knn_set[2]  instance: knn_set_2_inst
         assign knn_set_2_if_2_dout_wire = knn_set_2_inst_digitrec_knn_set_2_regbank_r0;

         // resource: knn_set[2]  instance: knn_set_2_inst
         always @(posedge clk)
          begin :write_digitrec_knn_set_2_regbank_r0
            if (knn_set_2_if_3_wen0_wire == 1'b1) begin
               knn_set_2_inst_digitrec_knn_set_2_regbank_r0 <= in1_din_wire_1;
            end
            else begin
               if (knn_set_2_if_1_wen0_wire == 1'b1) begin
                  knn_set_2_inst_digitrec_knn_set_2_regbank_r0 <= 6'd50;
               end
               else begin
                  if (knn_set_0_if_0_wen0_wire == 1'b1) begin
                     knn_set_2_inst_digitrec_knn_set_2_regbank_r0 <= 6'd00;
                  end
               end
            end
         end

         // resource: knn_set[1]  instance: knn_set_1_inst
         assign knn_set_1_if_2_dout_wire = knn_set_1_inst_digitrec_knn_set_1_regbank_r0;

         // resource: knn_set[1]  instance: knn_set_1_inst
         always @(posedge clk)
          begin :write_digitrec_knn_set_1_regbank_r0
            if (knn_set_1_if_3_wen0_wire == 1'b1) begin
               knn_set_1_inst_digitrec_knn_set_1_regbank_r0 <= in1_din_wire_0;
            end
            else begin
               if (knn_set_1_if_1_wen0_wire == 1'b1) begin
                  knn_set_1_inst_digitrec_knn_set_1_regbank_r0 <= 6'd50;
               end
               else begin
                  if (knn_set_0_if_0_wen0_wire == 1'b1) begin
                     knn_set_1_inst_digitrec_knn_set_1_regbank_r0 <= 6'd00;
                  end
               end
            end
         end

         // resource: knn_set[0]  instance: knn_set_0_inst
         assign knn_set_0_if_2_dout_wire = knn_set_0_inst_digitrec_knn_set_0_regbank_r0;

         // resource: knn_set[0]  instance: knn_set_0_inst
         always @(posedge clk)
          begin :write_digitrec_knn_set_0_regbank_r0
            if (knn_set_0_if_3_wen0_wire == 1'b1) begin
               knn_set_0_inst_digitrec_knn_set_0_regbank_r0 <= in1_din_wire;
            end
            else begin
               if (knn_set_0_if_1_wen0_wire == 1'b1) begin
                  knn_set_0_inst_digitrec_knn_set_0_regbank_r0 <= 6'd50;
               end
               else begin
                  if (knn_set_0_if_0_wen0_wire == 1'b1) begin
                     knn_set_0_inst_digitrec_knn_set_0_regbank_r0 <= 6'd00;
                  end
               end
            end
         end

         // resource: regr_1b
         always @(posedge clk)
          begin :drive_mem_req_typ_o
            if (rst == 1'b0) begin
               mem_req_typ_o_slice <= 1'b0;
            end
            else begin
               case (global_state) 

                  5'd02: begin
                     if (7'd002 == s_reg_43) begin
                        mem_req_typ_o_slice <= 1'b1;
                     end
                  end
                  
                  5'd13: begin
                     if (digitrec_Lti10s5_4_54_out1) begin
                        mem_req_typ_o_slice <= 1'b1;
                     end
                  end
                  
                  5'd14: begin
                     if (digitrec_LtiLLs12_4_58_out1) begin
                        mem_req_typ_o_slice <= 1'b1;
                     end
                  end
                  
               endcase

            end
         end

         // resource: mux_5bx2i
         // resource: regr_5b
         always @(posedge clk)
          begin :drive_mem_req_tag_o
            if (rst == 1'b0) begin
               mem_req_tag_o_slice <= 5'd00;
            end
            else begin
               case (global_state) 

                  5'd02: begin
                     if (7'd002 == s_reg_43) begin
                        mem_req_tag_o_slice <= 5'd00;
                     end
                  end
                  
                  5'd13: begin
                     if (digitrec_Lti10s5_4_54_out1) begin
                        mem_req_tag_o_slice <= s_reg_55;
                     end
                  end
                  
                  5'd14: begin
                     if (digitrec_LtiLLs12_4_58_out1) begin
                        mem_req_tag_o_slice <= 5'd00;
                     end
                  end
                  
               endcase

            end
         end

         // resource: regr_40b
         always @(posedge clk)
          begin :drive_mem_req_addr_o
            if (rst == 1'b0) begin
               mem_req_addr_o <= 40'd0000000000000;
            end
            else begin
               case (global_state) 

                  5'd02: begin
                     if (7'd002 == s_reg_43) begin
                        mem_req_addr_o <= digitrec_Add_40U_33_4_17_out1;
                     end
                  end
                  
                  5'd13: begin
                     if (digitrec_Lti10s5_4_54_out1) begin
                        mem_req_addr_o <= digitrec_Add_40U_33_4_17_out1;
                     end
                  end
                  
                  5'd14: begin
                     if (digitrec_LtiLLs12_4_58_out1) begin
                        mem_req_addr_o <= digitrec_Add_40U_33_4_17_out1;
                     end
                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i
         // resource: regr_1b
         always @(posedge clk)
          begin :drive_mem_req_valid_o
            if (rst == 1'b0) begin
               mem_req_valid_o <= 1'd0;
            end
            else begin
               case (global_state) 

                  5'd02: begin
                     if (7'd002 == s_reg_43) begin
                        mem_req_valid_o <= 1'd1;
                     end
                  end
                  
                  5'd11: begin
                     if (mem_req_ready_i) begin
                        mem_req_valid_o <= 1'd0;
                     end
                  end
                  
                  5'd13: begin
                     if (digitrec_Lti10s5_4_54_out1) begin
                        mem_req_valid_o <= 1'd1;
                     end
                  end
                  
                  5'd14: begin
                     if (digitrec_LtiLLs12_4_58_out1) begin
                        mem_req_valid_o <= 1'd1;
                     end
                  end
                  
               endcase

            end
         end

         // resource: regr_4b
         always @(posedge clk)
          begin :drive_core_resp_data_o
            if (rst == 1'b0) begin
               core_resp_data_o_slice2 <= 4'd00;
            end
            else begin
               case (global_state) 

                  5'd02: begin
                     case (s_reg_43) 

                        7'd001, 7'd002: begin
                        end
                        
                        default: begin
                           if (s_reg_45) begin
                              core_resp_data_o_slice2 <= s_reg_41;
                           end
                        end
                        
                     endcase

                  end
                  
                  5'd10: begin
                     if (!digitrec_Lti10s5_4_82_out1 && s_reg_45) begin
                        core_resp_data_o_slice2 <= s_reg_41;
                     end
                  end
                  
                  5'd14: begin
                     if (!digitrec_LtiLLs12_4_58_out1 && s_reg_45) begin
                        core_resp_data_o_slice2 <= s_reg_41;
                     end
                  end
                  
               endcase

            end
         end

         // resource: regr_5b
         always @(posedge clk)
          begin :drive_core_resp_rd_o
            if (rst == 1'b0) begin
               core_resp_rd_o <= core_cmd_inst_rd_i;
            end
            else begin
               case (global_state) 

                  5'd02: begin
                     case (s_reg_43) 

                        7'd001, 7'd002: begin
                        end
                        
                        default: begin
                           if (s_reg_45) begin
                              core_resp_rd_o <= s_reg_46;
                           end
                        end
                        
                     endcase

                  end
                  
                  5'd10: begin
                     if (!digitrec_Lti10s5_4_82_out1 && s_reg_45) begin
                        core_resp_rd_o <= s_reg_46;
                     end
                  end
                  
                  5'd14: begin
                     if (!digitrec_LtiLLs12_4_58_out1 && s_reg_45) begin
                        core_resp_rd_o <= s_reg_46;
                     end
                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i
         // resource: regr_1b
         always @(posedge clk)
          begin :drive_core_resp_valid_o
            if (rst == 1'b0) begin
               core_resp_valid_o <= 1'd0;
            end
            else begin
               case (global_state) 

                  5'd02: begin
                     case (s_reg_43) 

                        7'd001, 7'd002: begin
                        end
                        
                        default: begin
                           if (s_reg_45) begin
                              core_resp_valid_o <= 1'd1;
                           end
                           else begin
                              core_resp_valid_o <= 1'd0;
                           end
                        end
                        
                     endcase

                  end
                  
                  5'd10: begin
                     if (digitrec_Lti10s5_4_82_out1) begin
                     end
                     else begin
                        if (s_reg_45) begin
                           core_resp_valid_o <= 1'd1;
                        end
                        else begin
                           core_resp_valid_o <= 1'd0;
                        end
                     end
                  end
                  
                  5'd14: begin
                     if (digitrec_LtiLLs12_4_58_out1) begin
                     end
                     else begin
                        if (s_reg_45) begin
                           core_resp_valid_o <= 1'd1;
                        end
                        else begin
                           core_resp_valid_o <= 1'd0;
                        end
                     end
                  end
                  
                  5'd15: begin
                     if (core_resp_ready_i) begin
                        core_resp_valid_o <= 1'd0;
                     end
                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i
         // resource: regr_1b
         always @(posedge clk)
          begin :drive_core_cmd_ready_o
            if (rst == 1'b0) begin
               core_cmd_ready_o <= 1'd0;
            end
            else begin
               case (global_state) 

                  5'd00, 5'd17: begin
                     core_cmd_ready_o <= 1'd1;
                  end
                  
                  5'd02: begin
                     core_cmd_ready_o <= 1'd0;
                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i
         // resource: regr_1b
         always @(posedge clk)
          begin :drive_cc_busy_o
            if (rst == 1'b0) begin
               cc_busy_o <= 1'd0;
            end
            else begin
               case (global_state) 

                  5'd00, 5'd01, 5'd17: begin
                     if (core_cmd_valid_i) begin
                        cc_busy_o <= 1'd1;
                     end
                  end
                  
                  5'd02: begin
                     case (s_reg_43) 

                        7'd001, 7'd002: begin
                        end
                        
                        default: begin
                           if (s_reg_45) begin
                           end
                           else begin
                              cc_busy_o <= 1'd0;
                           end
                        end
                        
                     endcase

                  end
                  
                  5'd10: begin
                     if (!digitrec_Lti10s5_4_82_out1 && !s_reg_45) begin
                        cc_busy_o <= 1'd0;
                     end
                  end
                  
                  5'd14: begin
                     if (!digitrec_LtiLLs12_4_58_out1 && !s_reg_45) begin
                        cc_busy_o <= 1'd0;
                     end
                  end
                  
                  5'd15: begin
                     if (core_resp_ready_i) begin
                        cc_busy_o <= 1'd0;
                     end
                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i
         always @(gs_ctrl0 or core_cmd_inst_opcode_i or core_cmd_valid_i)
          begin :drive_knn_set_0_if_0_wen0_wire
            if (gs_ctrl0) begin
               if (core_cmd_valid_i && core_cmd_inst_opcode_i == 7'd001) begin
                  knn_set_0_if_0_wen0_wire = 1'b1;
               end
               else begin
                  knn_set_0_if_0_wen0_wire = 1'b0;
               end
            end
            else begin
               knn_set_0_if_0_wen0_wire = 1'b0;
            end
         end

         // resource: mux_1bx2i
         always @(gs_ctrl1 or s_reg_43 or digitrec_Not_1U_2_4_13_out1)
          begin :drive_knn_set_0_if_1_wen0_wire
            case (gs_ctrl1) 

               2'd1: begin
                  if (7'd001 == s_reg_43) begin
                     knn_set_0_if_1_wen0_wire = digitrec_Not_1U_2_4_13_out1;
                  end
                  else begin
                     knn_set_0_if_1_wen0_wire = 1'b0;
                  end
               end
               
               2'd2: begin
                  knn_set_0_if_1_wen0_wire = digitrec_Not_1U_2_4_13_out1;
               end
               
               default: begin
                  knn_set_0_if_1_wen0_wire = 1'b0;
               end
               
            endcase

         end

         // resource: mux_1bx2i
         always @(gs_ctrl2 or digitrec_LessThan_1U_26_4_38_out1)
          begin :drive_knn_set_0_if_3_wen0_wire
            if (gs_ctrl2) begin
               if (digitrec_LessThan_1U_26_4_38_out1) begin
                  knn_set_0_if_3_wen0_wire = 1'b1;
               end
               else begin
                  knn_set_0_if_3_wen0_wire = 1'b0;
               end
            end
            else begin
               knn_set_0_if_3_wen0_wire = 1'b0;
            end
         end

         assign in1_din_wire = digitrec_gen000001_4_28_out1;

         // resource: mux_1bx2i
         always @(gs_ctrl1 or s_reg_43 or digitrec_Eqi1u4_4_4_out1)
          begin :drive_knn_set_1_if_1_wen0_wire
            case (gs_ctrl1) 

               2'd1: begin
                  if (7'd001 == s_reg_43) begin
                     knn_set_1_if_1_wen0_wire = digitrec_Eqi1u4_4_4_out1;
                  end
                  else begin
                     knn_set_1_if_1_wen0_wire = 1'b0;
                  end
               end
               
               2'd2: begin
                  knn_set_1_if_1_wen0_wire = digitrec_Eqi1u4_4_4_out1;
               end
               
               default: begin
                  knn_set_1_if_1_wen0_wire = 1'b0;
               end
               
            endcase

         end

         // resource: mux_1bx2i
         always @(gs_ctrl2 or digitrec_LessThan_1U_26_4_39_out1)
          begin :drive_knn_set_1_if_3_wen0_wire
            if (gs_ctrl2) begin
               if (digitrec_LessThan_1U_26_4_39_out1) begin
                  knn_set_1_if_3_wen0_wire = 1'b1;
               end
               else begin
                  knn_set_1_if_3_wen0_wire = 1'b0;
               end
            end
            else begin
               knn_set_1_if_3_wen0_wire = 1'b0;
            end
         end

         assign in1_din_wire_0 = digitrec_gen000001_4_29_out1;

         // resource: mux_1bx2i
         always @(gs_ctrl1 or s_reg_43 or digitrec_Eqi2u4_4_5_out1)
          begin :drive_knn_set_2_if_1_wen0_wire
            case (gs_ctrl1) 

               2'd1: begin
                  if (7'd001 == s_reg_43) begin
                     knn_set_2_if_1_wen0_wire = digitrec_Eqi2u4_4_5_out1;
                  end
                  else begin
                     knn_set_2_if_1_wen0_wire = 1'b0;
                  end
               end
               
               2'd2: begin
                  knn_set_2_if_1_wen0_wire = digitrec_Eqi2u4_4_5_out1;
               end
               
               default: begin
                  knn_set_2_if_1_wen0_wire = 1'b0;
               end
               
            endcase

         end

         // resource: mux_1bx2i
         always @(gs_ctrl2 or digitrec_LessThan_1U_26_4_40_out1)
          begin :drive_knn_set_2_if_3_wen0_wire
            if (gs_ctrl2) begin
               if (digitrec_LessThan_1U_26_4_40_out1) begin
                  knn_set_2_if_3_wen0_wire = 1'b1;
               end
               else begin
                  knn_set_2_if_3_wen0_wire = 1'b0;
               end
            end
            else begin
               knn_set_2_if_3_wen0_wire = 1'b0;
            end
         end

         assign in1_din_wire_1 = digitrec_gen000001_4_30_out1;

         // resource: mux_1bx2i
         always @(gs_ctrl1 or s_reg_43 or digitrec_Eqi3u4_4_6_out1)
          begin :drive_knn_set_3_if_1_wen0_wire
            case (gs_ctrl1) 

               2'd1: begin
                  if (7'd001 == s_reg_43) begin
                     knn_set_3_if_1_wen0_wire = digitrec_Eqi3u4_4_6_out1;
                  end
                  else begin
                     knn_set_3_if_1_wen0_wire = 1'b0;
                  end
               end
               
               2'd2: begin
                  knn_set_3_if_1_wen0_wire = digitrec_Eqi3u4_4_6_out1;
               end
               
               default: begin
                  knn_set_3_if_1_wen0_wire = 1'b0;
               end
               
            endcase

         end

         // resource: mux_1bx2i
         always @(gs_ctrl2 or digitrec_LessThan_1U_26_4_41_out1)
          begin :drive_knn_set_3_if_3_wen0_wire
            if (gs_ctrl2) begin
               if (digitrec_LessThan_1U_26_4_41_out1) begin
                  knn_set_3_if_3_wen0_wire = 1'b1;
               end
               else begin
                  knn_set_3_if_3_wen0_wire = 1'b0;
               end
            end
            else begin
               knn_set_3_if_3_wen0_wire = 1'b0;
            end
         end

         assign in1_din_wire_2 = digitrec_gen000001_4_31_out1;

         // resource: mux_1bx2i
         always @(gs_ctrl1 or s_reg_43 or digitrec_Eqi4u4_4_7_out1)
          begin :drive_knn_set_4_if_1_wen0_wire
            case (gs_ctrl1) 

               2'd1: begin
                  if (7'd001 == s_reg_43) begin
                     knn_set_4_if_1_wen0_wire = digitrec_Eqi4u4_4_7_out1;
                  end
                  else begin
                     knn_set_4_if_1_wen0_wire = 1'b0;
                  end
               end
               
               2'd2: begin
                  knn_set_4_if_1_wen0_wire = digitrec_Eqi4u4_4_7_out1;
               end
               
               default: begin
                  knn_set_4_if_1_wen0_wire = 1'b0;
               end
               
            endcase

         end

         // resource: mux_1bx2i
         always @(gs_ctrl2 or digitrec_LessThan_1U_26_4_42_out1)
          begin :drive_knn_set_4_if_3_wen0_wire
            if (gs_ctrl2) begin
               if (digitrec_LessThan_1U_26_4_42_out1) begin
                  knn_set_4_if_3_wen0_wire = 1'b1;
               end
               else begin
                  knn_set_4_if_3_wen0_wire = 1'b0;
               end
            end
            else begin
               knn_set_4_if_3_wen0_wire = 1'b0;
            end
         end

         assign in1_din_wire_3 = digitrec_gen000001_4_32_out1;

         // resource: mux_1bx2i
         always @(gs_ctrl1 or s_reg_43 or digitrec_Eqi5u4_4_8_out1)
          begin :drive_knn_set_5_if_1_wen0_wire
            case (gs_ctrl1) 

               2'd1: begin
                  if (7'd001 == s_reg_43) begin
                     knn_set_5_if_1_wen0_wire = digitrec_Eqi5u4_4_8_out1;
                  end
                  else begin
                     knn_set_5_if_1_wen0_wire = 1'b0;
                  end
               end
               
               2'd2: begin
                  knn_set_5_if_1_wen0_wire = digitrec_Eqi5u4_4_8_out1;
               end
               
               default: begin
                  knn_set_5_if_1_wen0_wire = 1'b0;
               end
               
            endcase

         end

         // resource: mux_1bx2i
         always @(gs_ctrl2 or digitrec_LessThan_1U_26_4_43_out1)
          begin :drive_knn_set_5_if_3_wen0_wire
            if (gs_ctrl2) begin
               if (digitrec_LessThan_1U_26_4_43_out1) begin
                  knn_set_5_if_3_wen0_wire = 1'b1;
               end
               else begin
                  knn_set_5_if_3_wen0_wire = 1'b0;
               end
            end
            else begin
               knn_set_5_if_3_wen0_wire = 1'b0;
            end
         end

         assign in1_din_wire_4 = digitrec_gen000001_4_33_out1;

         // resource: mux_1bx2i
         always @(gs_ctrl1 or s_reg_43 or digitrec_Eqi6u4_4_9_out1)
          begin :drive_knn_set_6_if_1_wen0_wire
            case (gs_ctrl1) 

               2'd1: begin
                  if (7'd001 == s_reg_43) begin
                     knn_set_6_if_1_wen0_wire = digitrec_Eqi6u4_4_9_out1;
                  end
                  else begin
                     knn_set_6_if_1_wen0_wire = 1'b0;
                  end
               end
               
               2'd2: begin
                  knn_set_6_if_1_wen0_wire = digitrec_Eqi6u4_4_9_out1;
               end
               
               default: begin
                  knn_set_6_if_1_wen0_wire = 1'b0;
               end
               
            endcase

         end

         // resource: mux_1bx2i
         always @(gs_ctrl2 or digitrec_LessThan_1U_26_4_44_out1)
          begin :drive_knn_set_6_if_3_wen0_wire
            if (gs_ctrl2) begin
               if (digitrec_LessThan_1U_26_4_44_out1) begin
                  knn_set_6_if_3_wen0_wire = 1'b1;
               end
               else begin
                  knn_set_6_if_3_wen0_wire = 1'b0;
               end
            end
            else begin
               knn_set_6_if_3_wen0_wire = 1'b0;
            end
         end

         assign in1_din_wire_5 = digitrec_gen000001_4_34_out1;

         // resource: mux_1bx2i
         always @(gs_ctrl1 or s_reg_43 or digitrec_Eqi7u4_4_10_out1)
          begin :drive_knn_set_7_if_1_wen0_wire
            case (gs_ctrl1) 

               2'd1: begin
                  if (7'd001 == s_reg_43) begin
                     knn_set_7_if_1_wen0_wire = digitrec_Eqi7u4_4_10_out1;
                  end
                  else begin
                     knn_set_7_if_1_wen0_wire = 1'b0;
                  end
               end
               
               2'd2: begin
                  knn_set_7_if_1_wen0_wire = digitrec_Eqi7u4_4_10_out1;
               end
               
               default: begin
                  knn_set_7_if_1_wen0_wire = 1'b0;
               end
               
            endcase

         end

         // resource: mux_1bx2i
         always @(gs_ctrl2 or digitrec_LessThan_1U_26_4_45_out1)
          begin :drive_knn_set_7_if_3_wen0_wire
            if (gs_ctrl2) begin
               if (digitrec_LessThan_1U_26_4_45_out1) begin
                  knn_set_7_if_3_wen0_wire = 1'b1;
               end
               else begin
                  knn_set_7_if_3_wen0_wire = 1'b0;
               end
            end
            else begin
               knn_set_7_if_3_wen0_wire = 1'b0;
            end
         end

         assign in1_din_wire_6 = digitrec_gen000001_4_35_out1;

         // resource: mux_1bx2i
         always @(gs_ctrl1 or s_reg_43 or digitrec_Eqi8u4_4_11_out1)
          begin :drive_knn_set_8_if_1_wen0_wire
            case (gs_ctrl1) 

               2'd1: begin
                  if (7'd001 == s_reg_43) begin
                     knn_set_8_if_1_wen0_wire = digitrec_Eqi8u4_4_11_out1;
                  end
                  else begin
                     knn_set_8_if_1_wen0_wire = 1'b0;
                  end
               end
               
               2'd2: begin
                  knn_set_8_if_1_wen0_wire = digitrec_Eqi8u4_4_11_out1;
               end
               
               default: begin
                  knn_set_8_if_1_wen0_wire = 1'b0;
               end
               
            endcase

         end

         // resource: mux_1bx2i
         always @(gs_ctrl2 or digitrec_LessThan_1U_26_4_46_out1)
          begin :drive_knn_set_8_if_3_wen0_wire
            if (gs_ctrl2) begin
               if (digitrec_LessThan_1U_26_4_46_out1) begin
                  knn_set_8_if_3_wen0_wire = 1'b1;
               end
               else begin
                  knn_set_8_if_3_wen0_wire = 1'b0;
               end
            end
            else begin
               knn_set_8_if_3_wen0_wire = 1'b0;
            end
         end

         assign in1_din_wire_7 = digitrec_gen000001_4_36_out1;

         // resource: mux_1bx2i
         always @(gs_ctrl1 or s_reg_43 or digitrec_Eqi9u4_4_12_out1)
          begin :drive_knn_set_9_if_1_wen0_wire
            case (gs_ctrl1) 

               2'd1: begin
                  if (7'd001 == s_reg_43) begin
                     knn_set_9_if_1_wen0_wire = digitrec_Eqi9u4_4_12_out1;
                  end
                  else begin
                     knn_set_9_if_1_wen0_wire = 1'b0;
                  end
               end
               
               2'd2: begin
                  knn_set_9_if_1_wen0_wire = digitrec_Eqi9u4_4_12_out1;
               end
               
               default: begin
                  knn_set_9_if_1_wen0_wire = 1'b0;
               end
               
            endcase

         end

         // resource: mux_1bx2i
         always @(gs_ctrl2 or digitrec_LessThan_1U_26_4_47_out1)
          begin :drive_knn_set_9_if_3_wen0_wire
            if (gs_ctrl2) begin
               if (digitrec_LessThan_1U_26_4_47_out1) begin
                  knn_set_9_if_3_wen0_wire = 1'b1;
               end
               else begin
                  knn_set_9_if_3_wen0_wire = 1'b0;
               end
            end
            else begin
               knn_set_9_if_3_wen0_wire = 1'b0;
            end
         end

         assign in1_din_wire_8 = digitrec_gen000001_4_37_out1;

         // resource: mux_1bx2i
         always @(gs_ctrl30 or s_reg_43 or digitrec_LtiLLs12_4_58_out1)
          begin :drive_tmp_if_0_wen9_wire
            case (gs_ctrl30) 

               2'd1: begin
                  if (7'd002 == s_reg_43) begin
                     tmp_if_0_wen9_wire = 1'b1;
                  end
                  else begin
                     tmp_if_0_wen9_wire = 1'b0;
                  end
               end
               
               2'd2: begin
                  if (digitrec_LtiLLs12_4_58_out1) begin
                     tmp_if_0_wen9_wire = 1'b1;
                  end
                  else begin
                     tmp_if_0_wen9_wire = 1'b0;
                  end
               end
               
               default: begin
                  tmp_if_0_wen9_wire = 1'b0;
               end
               
            endcase

         end

         // resource: mux_1bx2i
         always @(gs_ctrl31 or digitrec_And_1U_3_4_50_out1 or mem_req_ready_i or digitrec_And_1U_3_4_52_out1)
          begin :drive_tmp_if_1_wen0_wire
            case (gs_ctrl31) 

               2'd1: begin
                  if (mem_req_ready_i && digitrec_And_1U_3_4_50_out1) begin
                     tmp_if_1_wen0_wire = 1'b1;
                  end
                  else begin
                     tmp_if_1_wen0_wire = 1'b0;
                  end
               end
               
               2'd2: begin
                  if (digitrec_And_1U_3_4_52_out1) begin
                     tmp_if_1_wen0_wire = 1'b1;
                  end
                  else begin
                     tmp_if_1_wen0_wire = 1'b0;
                  end
               end
               
               default: begin
                  tmp_if_1_wen0_wire = 1'b0;
               end
               
            endcase

         end

         assign in1_din_wire_9 = mem_resp_data_i[48:0];

         assign in2_waddr_wire_9 = s_reg_53[3:0];

         // resource: mux_4bx3i
         // resource: regr_4b
         always @(posedge clk)
          begin :drive_s_reg_41
            case (global_state) 

               5'd00: begin
                  s_reg_41 <= 4'd00;
               end
               
               5'd09: begin
                  s_reg_41 <= digitrec_N_Mux_4_2_29_4_81_out1;
               end
               
               5'd17: begin
                  s_reg_41 <= s_reg_74;
               end
               
            endcase

         end

         // resource: mux_12bx2i
         // resource: regr_12b
         always @(posedge clk)
          begin :drive_s_reg_42
            case (global_state) 

               5'd02: begin
                  if (digitrec_Lti10s5_4_2_out1) begin
                     s_reg_42 <= 12'd0000;
                  end
                  else begin
                     s_reg_42 <= digitrec_Add2i1s12_4_14_out1;
                  end
               end
               
               5'd03: begin
                  if (digitrec_Lti10s5_4_2_out1) begin
                  end
                  else begin
                     s_reg_42 <= digitrec_Add2i1s12_4_14_out1;
                  end
               end
               
               5'd04: begin
                  s_reg_42 <= digitrec_Add2i1s12_4_14_out1;
               end
               
            endcase

         end

         // resource: regr_7b
         always @(posedge clk)
          begin :drive_s_reg_43
            case (global_state) 

               5'd00, 5'd01, 5'd17: begin
                  s_reg_43 <= core_cmd_inst_opcode_i;
               end
               
            endcase

         end

         // resource: regr_49b
         always @(posedge clk)
          begin :drive_s_reg_44
            case (global_state) 

               5'd00, 5'd01, 5'd17: begin
                  s_reg_44 <= core_cmd_rs1_i[48:0];
               end
               
            endcase

         end

         // resource: regr_1b
         always @(posedge clk)
          begin :drive_s_reg_45
            case (global_state) 

               5'd00, 5'd01, 5'd17: begin
                  s_reg_45 <= core_cmd_inst_xd_i;
               end
               
            endcase

         end

         // resource: regr_5b
         always @(posedge clk)
          begin :drive_s_reg_46
            case (global_state) 

               5'd00, 5'd01, 5'd17: begin
                  s_reg_46 <= core_cmd_inst_rd_i;
               end
               
            endcase

         end

         // resource: regr_49b
         always @(posedge clk)
          begin :drive_s_reg_47
            case (global_state) 

               5'd02: begin
                  s_reg_47 <= s_reg_44;
               end
               
            endcase

         end

         // resource: regr_40b
         always @(posedge clk)
          begin :drive_s_reg_48
            case (global_state) 

               5'd02: begin
                  s_reg_48 <= s_reg_44[39:0];
               end
               
            endcase

         end

         // resource: mux_12bx2i
         // resource: regr_12b
         always @(posedge clk)
          begin :drive_s_reg_49
            case (global_state) 

               5'd02: begin
                  s_reg_49 <= 12'd0000;
               end
               
               5'd14: begin
                  s_reg_49 <= s_reg_52;
               end
               
            endcase

         end

         // resource: regr_5b
         always @(posedge clk)
          begin :drive_s_reg_50
            case (global_state) 

               5'd02, 5'd03: begin
                  s_reg_50 <= digitrec_Add2i1s5_4_1_out1;
               end
               
            endcase

         end

         // resource: regr_12b
         always @(posedge clk)
          begin :drive_s_reg_52
            s_reg_52 <= digitrec_Add2i1s12_4_56_out1;
         end

         // resource: mux_5bx2i
         // resource: regr_5b
         always @(posedge clk)
          begin :drive_s_reg_53
            case (global_state) 

               5'd02, 5'd14: begin
                  s_reg_53 <= 5'd00;
               end
               
               5'd13: begin
                  s_reg_53 <= s_reg_55;
               end
               
            endcase

         end

         // resource: regr_5b
         always @(posedge clk)
          begin :drive_s_reg_54
            case (global_state) 

               5'd11: begin
                  s_reg_54_slice <= s_reg_53;
               end
               
            endcase

         end

         // resource: regr_5b
         always @(posedge clk)
          begin :drive_s_reg_55
            s_reg_55 <= digitrec_Add2i1s5_4_53_out1;
         end

         // resource: regr_5b
         always @(posedge clk)
          begin :drive_s_reg_56
            case (global_state) 

               5'd04, 5'd05: begin
                  s_reg_56 <= digitrec_Add2i1s5_4_55_out1;
               end
               
            endcase

         end

         // resource: mux_6bx2i
         // resource: regr_6b
         always @(posedge clk)
          begin :drive_s_reg_57
            case (global_state) 

               5'd05: begin
                  s_reg_57 <= 6'd50;
               end
               
               5'd07: begin
                  s_reg_57 <= digitrec_N_Mux_6_2_30_4_67_out1;
               end
               
            endcase

         end

         // resource: mux_4bx2i
         // resource: regr_4b
         always @(posedge clk)
          begin :drive_s_reg_58
            case (global_state) 

               5'd05: begin
                  s_reg_58 <= 4'd10;
               end
               
               5'd07: begin
                  s_reg_58 <= s_reg_66;
               end
               
            endcase

         end

         // resource: regr_5b
         always @(posedge clk)
          begin :drive_s_reg_62
            case (global_state) 

               5'd05, 5'd07: begin
                  s_reg_62 <= digitrec_Add2i1s5_4_59_out1;
               end
               
            endcase

         end

         // resource: regr_1b
         always @(posedge clk)
          begin :drive_s_reg_63
            s_reg_63 <= digitrec_Lti10s5_4_60_out1;
         end

         // resource: mux_4bx2i
         // resource: regr_4b
         always @(posedge clk)
          begin :drive_s_reg_64
            case (global_state) 

               5'd05: begin
                  s_reg_64 <= 4'd00;
               end
               
               5'd07: begin
                  s_reg_64 <= s_reg_62[3:0];
               end
               
            endcase

         end

         // resource: regr_1b
         always @(posedge clk)
          begin :drive_s_reg_65
            s_reg_65 <= digitrec_LessThan_1U_26_4_62_out1;
         end

         // resource: regr_4b
         always @(posedge clk)
          begin :drive_s_reg_66
            s_reg_66 <= digitrec_N_Mux_4_2_29_4_63_out1;
         end

         // resource: regr_1b
         always @(posedge clk)
          begin :drive_s_reg_67
            s_reg_67 <= digitrec_OrReduction_1U_1_4_64_out1;
         end

         // resource: mux_4bx2i
         // resource: regr_4b
         always @(posedge clk)
          begin :drive_s_reg_68
            case (global_state) 

               5'd08: begin
                  s_reg_68 <= 4'd00;
               end
               
               5'd10: begin
                  s_reg_68 <= s_reg_73;
               end
               
            endcase

         end

         // resource: mux_32bx2i
         // resource: regr_32b
         always @(posedge clk)
          begin :drive_s_reg_69
            case (global_state) 

               5'd08: begin
                  s_reg_69 <= 32'd0000000000;
               end
               
               5'd10: begin
                  s_reg_69 <= digitrec_N_Mux_32_2_34_4_83_out1;
               end
               
            endcase

         end

         // resource: mux_5bx2i
         // resource: regr_5b
         always @(posedge clk)
          begin :drive_s_reg_70
            case (global_state) 

               5'd08: begin
                  s_reg_70 <= 5'd00;
               end
               
               5'd10: begin
                  s_reg_70 <= s_reg_71;
               end
               
            endcase

         end

         // resource: regr_5b
         always @(posedge clk)
          begin :drive_s_reg_71
            s_reg_71 <= digitrec_Add2i1s5_4_79_out1;
         end

         // resource: regr_1b
         always @(posedge clk)
          begin :drive_s_reg_72
            s_reg_72 <= digitrec_GreaterThan_1U_32_4_80_out1;
         end

         // resource: regr_4b
         always @(posedge clk)
          begin :drive_s_reg_73
            s_reg_73 <= digitrec_N_Mux_4_2_29_4_81_out1;
         end

         // resource: regr_4b
         always @(posedge clk)
          begin :drive_s_reg_74
            case (global_state) 

               5'd02: begin
                  case (s_reg_43) 

                     7'd001, 7'd002: begin
                     end
                     
                     default: begin
                        s_reg_74 <= s_reg_41;
                     end
                     
                  endcase

               end
               
               5'd10, 5'd14: begin
                  s_reg_74 <= s_reg_41;
               end
               
            endcase

         end

         // resource: mux_5bx2i
         always @(gs_ctrl32 or s_reg_50)
          begin :drive_digitrec_Add2i1s5_4_1_in1
            if (gs_ctrl32) begin
               digitrec_Add2i1s5_4_1_in1 = s_reg_50;
            end
            else begin
               digitrec_Add2i1s5_4_1_in1 = 5'd00;
            end
         end

         // resource: digitrec_Add2i1s5_4  instance: digitrec_Add2i1s5_4_1
         assign digitrec_Add2i1s5_4_1_out1 = digitrec_Add2i1s5_4_1_in1 + 5'd01;

         // resource: digitrec_Lti10s5_4  instance: digitrec_Lti10s5_4_2
         assign digitrec_Lti10s5_4_2_out1 = digitrec_Add2i1s5_4_1_out1[4] ^ digitrec_Add2i1s5_4_1_out1 < 5'd10;

         // resource: mux_4bx2i
         always @(gs_ctrl32 or s_reg_50[3:0])
          begin :drive_digitrec_OrReduction_1U_1_4_3_in1
            if (gs_ctrl32) begin
               digitrec_OrReduction_1U_1_4_3_in1 = s_reg_50[3:0];
            end
            else begin
               digitrec_OrReduction_1U_1_4_3_in1 = 4'd00;
            end
         end

         // resource: [0]::knn_set  instance: digitrec_OrReduction_1U_1_4_3
         assign digitrec_OrReduction_1U_1_4_3_out1 = |digitrec_OrReduction_1U_1_4_3_in1;

         // resource: [0]::knn_set  instance: digitrec_Eqi1u4_4_4
         assign digitrec_Eqi1u4_4_4_out1 = digitrec_OrReduction_1U_1_4_3_in1 == 4'd01;

         // resource: [0]::knn_set  instance: digitrec_Eqi2u4_4_5
         assign digitrec_Eqi2u4_4_5_out1 = digitrec_OrReduction_1U_1_4_3_in1 == 4'd02;

         // resource: [0]::knn_set  instance: digitrec_Eqi3u4_4_6
         assign digitrec_Eqi3u4_4_6_out1 = digitrec_OrReduction_1U_1_4_3_in1 == 4'd03;

         // resource: [0]::knn_set  instance: digitrec_Eqi4u4_4_7
         assign digitrec_Eqi4u4_4_7_out1 = digitrec_OrReduction_1U_1_4_3_in1 == 4'd04;

         // resource: [0]::knn_set  instance: digitrec_Eqi5u4_4_8
         assign digitrec_Eqi5u4_4_8_out1 = digitrec_OrReduction_1U_1_4_3_in1 == 4'd05;

         // resource: [0]::knn_set  instance: digitrec_Eqi6u4_4_9
         assign digitrec_Eqi6u4_4_9_out1 = digitrec_OrReduction_1U_1_4_3_in1 == 4'd06;

         // resource: [0]::knn_set  instance: digitrec_Eqi7u4_4_10
         assign digitrec_Eqi7u4_4_10_out1 = digitrec_OrReduction_1U_1_4_3_in1 == 4'd07;

         // resource: [0]::knn_set  instance: digitrec_Eqi8u4_4_11
         assign digitrec_Eqi8u4_4_11_out1 = digitrec_OrReduction_1U_1_4_3_in1 == 4'd08;

         // resource: [0]::knn_set  instance: digitrec_Eqi9u4_4_12
         assign digitrec_Eqi9u4_4_12_out1 = digitrec_OrReduction_1U_1_4_3_in1 == 4'd09;

         // resource: mux_1bx2i
         always @(gs_ctrl43 or s_reg_67 or digitrec_OrReduction_1U_1_4_3_out1)
          begin :drive_digitrec_Not_1U_2_4_13_in1
            if (gs_ctrl43) begin
               /* state30 */
               digitrec_Not_1U_2_4_13_in1 = s_reg_67;
            end
            else begin
               digitrec_Not_1U_2_4_13_in1 = digitrec_OrReduction_1U_1_4_3_out1;
            end
         end

         // resource: [0]::knn_set  instance: digitrec_Not_1U_2_4_13
         assign digitrec_Not_1U_2_4_13_out1 = !digitrec_Not_1U_2_4_13_in1;

         // resource: mux_12bx2i
         always @(gs_ctrl44 or s_reg_42)
          begin :drive_digitrec_Add2i1s12_4_14_in1
            if (gs_ctrl44) begin
               digitrec_Add2i1s12_4_14_in1 = s_reg_42;
            end
            else begin
               digitrec_Add2i1s12_4_14_in1 = 12'd0000;
            end
         end

         // resource: digitrec_Add2i1s12_4  instance: digitrec_Add2i1s12_4_14
         assign digitrec_Add2i1s12_4_14_out1 = digitrec_Add2i1s12_4_14_in1 + 12'd0001;

         // resource: mux_5bx2i
         always @(gs_ctrl45 or s_reg_55)
          begin :drive_digitrec_Mul_12Sx5S_17S_4_15_in1
            if (gs_ctrl45) begin
               digitrec_Mul_12Sx5S_17S_4_15_in1 = s_reg_55;
            end
            else begin
               digitrec_Mul_12Sx5S_17S_4_15_in1 = 5'd00;
            end
         end

         // resource: digitrec_Mul_12Sx5S_17S_4  instance: digitrec_Mul_12Sx5S_17S_4_15
         assign digitrec_Mul_12Sx5S_17S_4_15_out1 = {{ 12 {digitrec_Mul_12Sx5S_17S_4_15_in1[4]}}, digitrec_Mul_12Sx5S_17S_4_15_in1}*17'd001800;

         // resource: mux_40bx2i
         always @(gs_ctrl46 or s_reg_48 or s_reg_44[39:0])
          begin :drive_digitrec_Add_40U_33_4_16_in1
            if (gs_ctrl46) begin
               digitrec_Add_40U_33_4_16_in1 = s_reg_48;
            end
            else begin
               digitrec_Add_40U_33_4_16_in1 = s_reg_44[39:0];
            end
         end

         // resource: digitrec_Add_40U_33_4  instance: digitrec_Add_40U_33_4_16
         assign digitrec_Add_40U_33_4_16_out1 = {{ 23 {digitrec_Mul_12Sx5S_17S_4_15_out1[16]}}, digitrec_Mul_12Sx5S_17S_4_15_out1} + digitrec_Add_40U_33_4_16_in1;

         // resource: mux_12bx3i
         always @(gs_ctrl47 or s_reg_49 or s_reg_52)
          begin :drive_digitrec_Add_40U_33_4_17_in1
            case (gs_ctrl47) 

               2'd1: begin
                  digitrec_Add_40U_33_4_17_in1_slice = s_reg_49;
               end
               
               2'd2: begin
                  digitrec_Add_40U_33_4_17_in1_slice = s_reg_52;
               end
               
               default: begin
                  digitrec_Add_40U_33_4_17_in1_slice = 12'd0000;
               end
               
            endcase

         end

         // resource: digitrec_Add_40U_33_4  instance: digitrec_Add_40U_33_4_17
         assign digitrec_Add_40U_33_4_17_out1 = digitrec_Add_40U_33_4_16_out1 + {{ 28 {digitrec_Add_40U_33_4_17_in1_slice[11]}}, digitrec_Add_40U_33_4_17_in1_slice};

         // resource: mux_11bx3i
         always @(gs_ctrl48 or s_reg_42[10:0] or s_reg_49[10:0])
          begin :drive_digitrec_RAM_1800X49_1_training_set_0_22_in1
            case (gs_ctrl48) 

               2'd1: begin
                  digitrec_RAM_1800X49_1_training_set_0_22_in1 = s_reg_42[10:0];
               end
               
               2'd2: begin
                  digitrec_RAM_1800X49_1_training_set_0_22_in1 = s_reg_49[10:0];
               end
               
               default: begin
                  digitrec_RAM_1800X49_1_training_set_0_22_in1 = 11'd0000;
               end
               
            endcase

         end

         // resource: mux_1bx2i
         always @(gs_ctrl49 or digitrec_Lti10s5_4_2_out1 or s_reg_43 or digitrec_LtiLLs12_4_48_out1 or digitrec_Lti10s5_4_54_out1)
          begin :drive_digitrec_RAM_1800X49_1_training_set_0_22_CE
            case (gs_ctrl49) 

               3'd1: begin
                  if (7'd001 == s_reg_43 && !digitrec_Lti10s5_4_2_out1) begin
                     digitrec_RAM_1800X49_1_training_set_0_22_CE = 1'b1;
                  end
                  else begin
                     digitrec_RAM_1800X49_1_training_set_0_22_CE = 1'b0;
                  end
               end
               
               3'd2: begin
                  if (digitrec_Lti10s5_4_2_out1) begin
                     digitrec_RAM_1800X49_1_training_set_0_22_CE = 1'b0;
                  end
                  else begin
                     digitrec_RAM_1800X49_1_training_set_0_22_CE = 1'b1;
                  end
               end
               
               3'd3: begin
                  if (digitrec_LtiLLs12_4_48_out1) begin
                     digitrec_RAM_1800X49_1_training_set_0_22_CE = 1'b1;
                  end
                  else begin
                     digitrec_RAM_1800X49_1_training_set_0_22_CE = 1'b0;
                  end
               end
               
               3'd4: begin
                  if (digitrec_Lti10s5_4_54_out1) begin
                     digitrec_RAM_1800X49_1_training_set_0_22_CE = 1'b0;
                  end
                  else begin
                     digitrec_RAM_1800X49_1_training_set_0_22_CE = 1'b1;
                  end
               end
               
               default: begin
                  digitrec_RAM_1800X49_1_training_set_0_22_CE = 1'b0;
               end
               
            endcase

         end

         // resource: mux_1bx2i
         always @(gs_ctrl45 or digitrec_Lti10s5_4_54_out1)
          begin :drive_digitrec_RAM_1800X49_1_training_set_0_22_RW
            if (gs_ctrl45) begin
               if (digitrec_Lti10s5_4_54_out1) begin
                  digitrec_RAM_1800X49_1_training_set_0_22_RW = 1'b0;
               end
               else begin
                  digitrec_RAM_1800X49_1_training_set_0_22_RW = 1'b1;
               end
            end
            else begin
               digitrec_RAM_1800X49_1_training_set_0_22_RW = 1'b0;
            end
         end

         // resource: digitrec_Xor_49U_35_4  instance: digitrec_Xor_49U_35_4_18
         assign digitrec_Xor_49U_35_4_18_out1 = digitrec_RAM_1800X49_1_training_set_0_22_out1 ^ s_reg_47;

         // resource: digitrec_Xor_49U_35_4  instance: digitrec_Xor_49U_35_4_19
         assign digitrec_Xor_49U_35_4_19_out1 = digitrec_RAM_1800X49_1_training_set_1_23_out1 ^ s_reg_47;

         // resource: digitrec_Xor_49U_35_4  instance: digitrec_Xor_49U_35_4_20
         assign digitrec_Xor_49U_35_4_20_out1 = digitrec_RAM_1800X49_1_training_set_2_24_out1 ^ s_reg_47;

         // resource: digitrec_Xor_49U_35_4  instance: digitrec_Xor_49U_35_4_21
         assign digitrec_Xor_49U_35_4_21_out1 = digitrec_RAM_1800X49_1_training_set_3_25_out1 ^ s_reg_47;

         // resource: digitrec_Xor_49U_35_4  instance: digitrec_Xor_49U_35_4_22
         assign digitrec_Xor_49U_35_4_22_out1 = digitrec_RAM_1800X49_1_training_set_4_26_out1 ^ s_reg_47;

         // resource: digitrec_Xor_49U_35_4  instance: digitrec_Xor_49U_35_4_23
         assign digitrec_Xor_49U_35_4_23_out1 = digitrec_RAM_1800X49_1_training_set_5_27_out1 ^ s_reg_47;

         // resource: digitrec_Xor_49U_35_4  instance: digitrec_Xor_49U_35_4_24
         assign digitrec_Xor_49U_35_4_24_out1 = digitrec_RAM_1800X49_1_training_set_6_28_out1 ^ s_reg_47;

         // resource: digitrec_Xor_49U_35_4  instance: digitrec_Xor_49U_35_4_25
         assign digitrec_Xor_49U_35_4_25_out1 = digitrec_RAM_1800X49_1_training_set_7_29_out1 ^ s_reg_47;

         // resource: digitrec_Xor_49U_35_4  instance: digitrec_Xor_49U_35_4_26
         assign digitrec_Xor_49U_35_4_26_out1 = digitrec_RAM_1800X49_1_training_set_8_30_out1 ^ s_reg_47;

         // resource: digitrec_Xor_49U_35_4  instance: digitrec_Xor_49U_35_4_27
         assign digitrec_Xor_49U_35_4_27_out1 = digitrec_RAM_1800X49_1_training_set_9_31_out1 ^ s_reg_47;

         assign digitrec_gen000001_4_28_in48 = digitrec_Xor_49U_35_4_18_out1[1];

         assign digitrec_gen000001_4_28_in47 = digitrec_Xor_49U_35_4_18_out1[2];

         assign digitrec_gen000001_4_28_in46 = digitrec_Xor_49U_35_4_18_out1[3];

         assign digitrec_gen000001_4_28_in45 = digitrec_Xor_49U_35_4_18_out1[4];

         assign digitrec_gen000001_4_28_in44 = digitrec_Xor_49U_35_4_18_out1[5];

         assign digitrec_gen000001_4_28_in43 = digitrec_Xor_49U_35_4_18_out1[6];

         assign digitrec_gen000001_4_28_in42 = digitrec_Xor_49U_35_4_18_out1[7];

         assign digitrec_gen000001_4_28_in41 = digitrec_Xor_49U_35_4_18_out1[8];

         assign digitrec_gen000001_4_28_in40 = digitrec_Xor_49U_35_4_18_out1[9];

         assign digitrec_gen000001_4_28_in39 = digitrec_Xor_49U_35_4_18_out1[10];

         assign digitrec_gen000001_4_28_in38 = digitrec_Xor_49U_35_4_18_out1[11];

         assign digitrec_gen000001_4_28_in37 = digitrec_Xor_49U_35_4_18_out1[12];

         assign digitrec_gen000001_4_28_in36 = digitrec_Xor_49U_35_4_18_out1[13];

         assign digitrec_gen000001_4_28_in35 = digitrec_Xor_49U_35_4_18_out1[14];

         assign digitrec_gen000001_4_28_in34 = digitrec_Xor_49U_35_4_18_out1[15];

         assign digitrec_gen000001_4_28_in33 = digitrec_Xor_49U_35_4_18_out1[16];

         assign digitrec_gen000001_4_28_in32 = digitrec_Xor_49U_35_4_18_out1[17];

         assign digitrec_gen000001_4_28_in31 = digitrec_Xor_49U_35_4_18_out1[18];

         assign digitrec_gen000001_4_28_in30 = digitrec_Xor_49U_35_4_18_out1[19];

         assign digitrec_gen000001_4_28_in29 = digitrec_Xor_49U_35_4_18_out1[20];

         assign digitrec_gen000001_4_28_in28 = digitrec_Xor_49U_35_4_18_out1[21];

         assign digitrec_gen000001_4_28_in27 = digitrec_Xor_49U_35_4_18_out1[22];

         assign digitrec_gen000001_4_28_in26 = digitrec_Xor_49U_35_4_18_out1[23];

         assign digitrec_gen000001_4_28_in25 = digitrec_Xor_49U_35_4_18_out1[24];

         assign digitrec_gen000001_4_28_in24 = digitrec_Xor_49U_35_4_18_out1[25];

         assign digitrec_gen000001_4_28_in23 = digitrec_Xor_49U_35_4_18_out1[26];

         assign digitrec_gen000001_4_28_in22 = digitrec_Xor_49U_35_4_18_out1[27];

         assign digitrec_gen000001_4_28_in21 = digitrec_Xor_49U_35_4_18_out1[28];

         assign digitrec_gen000001_4_28_in20 = digitrec_Xor_49U_35_4_18_out1[29];

         assign digitrec_gen000001_4_28_in19 = digitrec_Xor_49U_35_4_18_out1[30];

         assign digitrec_gen000001_4_28_in18 = digitrec_Xor_49U_35_4_18_out1[31];

         assign digitrec_gen000001_4_28_in17 = digitrec_Xor_49U_35_4_18_out1[32];

         assign digitrec_gen000001_4_28_in16 = digitrec_Xor_49U_35_4_18_out1[33];

         assign digitrec_gen000001_4_28_in15 = digitrec_Xor_49U_35_4_18_out1[34];

         assign digitrec_gen000001_4_28_in14 = digitrec_Xor_49U_35_4_18_out1[35];

         assign digitrec_gen000001_4_28_in13 = digitrec_Xor_49U_35_4_18_out1[36];

         assign digitrec_gen000001_4_28_in12 = digitrec_Xor_49U_35_4_18_out1[37];

         assign digitrec_gen000001_4_28_in11 = digitrec_Xor_49U_35_4_18_out1[38];

         assign digitrec_gen000001_4_28_in10 = digitrec_Xor_49U_35_4_18_out1[39];

         assign digitrec_gen000001_4_28_in9 = digitrec_Xor_49U_35_4_18_out1[40];

         assign digitrec_gen000001_4_28_in8 = digitrec_Xor_49U_35_4_18_out1[41];

         assign digitrec_gen000001_4_28_in7 = digitrec_Xor_49U_35_4_18_out1[42];

         assign digitrec_gen000001_4_28_in6 = digitrec_Xor_49U_35_4_18_out1[43];

         assign digitrec_gen000001_4_28_in5 = digitrec_Xor_49U_35_4_18_out1[44];

         assign digitrec_gen000001_4_28_in4 = digitrec_Xor_49U_35_4_18_out1[45];

         assign digitrec_gen000001_4_28_in3 = digitrec_Xor_49U_35_4_18_out1[46];

         assign digitrec_gen000001_4_28_in2 = digitrec_Xor_49U_35_4_18_out1[47];

         assign digitrec_gen000001_4_28_in1 = digitrec_Xor_49U_35_4_18_out1[48];

         // resource: digitrec_gen000001_4  instance: digitrec_gen000001_4_28
         assign digitrec_gen000001_4_28_out1 = {5'b00000, digitrec_Xor_49U_35_4_18_out1[0]} + {5'b00000, digitrec_gen000001_4_28_in48} + {5'b00000, digitrec_gen000001_4_28_in47} + {5'b00000, digitrec_gen000001_4_28_in46} + {5'b00000, digitrec_gen000001_4_28_in45} + {5'b00000, digitrec_gen000001_4_28_in44} + {5'b00000, digitrec_gen000001_4_28_in43} + {5'b00000, digitrec_gen000001_4_28_in42} + {5'b00000
             , digitrec_gen000001_4_28_in41} + {5'b00000, digitrec_gen000001_4_28_in40} + {5'b00000, digitrec_gen000001_4_28_in39} + {5'b00000, digitrec_gen000001_4_28_in38} + {5'b00000, digitrec_gen000001_4_28_in37} + {5'b00000, digitrec_gen000001_4_28_in36} + {5'b00000, digitrec_gen000001_4_28_in35} + {5'b00000, digitrec_gen000001_4_28_in34} + {5'b00000, digitrec_gen000001_4_28_in33} + {5'b00000, digitrec_gen000001_4_28_in32} + {5'b00000, digitrec_gen000001_4_28_in31} + {5'b00000
             , digitrec_gen000001_4_28_in30} + {5'b00000, digitrec_gen000001_4_28_in29} + {5'b00000, digitrec_gen000001_4_28_in28} + {5'b00000, digitrec_gen000001_4_28_in27} + {5'b00000, digitrec_gen000001_4_28_in26} + {5'b00000, digitrec_gen000001_4_28_in25} + {5'b00000, digitrec_gen000001_4_28_in24} + {5'b00000, digitrec_gen000001_4_28_in23} + {5'b00000, digitrec_gen000001_4_28_in22} + {5'b00000, digitrec_gen000001_4_28_in21} + {5'b00000, digitrec_gen000001_4_28_in20} + {5'b00000
             , digitrec_gen000001_4_28_in19} + {5'b00000, digitrec_gen000001_4_28_in18} + {5'b00000, digitrec_gen000001_4_28_in17} + {5'b00000, digitrec_gen000001_4_28_in16} + {5'b00000, digitrec_gen000001_4_28_in15} + {5'b00000, digitrec_gen000001_4_28_in14} + {5'b00000, digitrec_gen000001_4_28_in13} + {5'b00000, digitrec_gen000001_4_28_in12} + {5'b00000, digitrec_gen000001_4_28_in11} + {5'b00000, digitrec_gen000001_4_28_in10} + {5'b00000, digitrec_gen000001_4_28_in9} + {5'b00000
             , digitrec_gen000001_4_28_in8} + {5'b00000, digitrec_gen000001_4_28_in7} + {5'b00000, digitrec_gen000001_4_28_in6} + {5'b00000, digitrec_gen000001_4_28_in5} + {5'b00000, digitrec_gen000001_4_28_in4} + {5'b00000, digitrec_gen000001_4_28_in3} + {5'b00000, digitrec_gen000001_4_28_in2} + {5'b00000, digitrec_gen000001_4_28_in1};

         assign digitrec_gen000001_4_29_in48 = digitrec_Xor_49U_35_4_19_out1[1];

         assign digitrec_gen000001_4_29_in47 = digitrec_Xor_49U_35_4_19_out1[2];

         assign digitrec_gen000001_4_29_in46 = digitrec_Xor_49U_35_4_19_out1[3];

         assign digitrec_gen000001_4_29_in45 = digitrec_Xor_49U_35_4_19_out1[4];

         assign digitrec_gen000001_4_29_in44 = digitrec_Xor_49U_35_4_19_out1[5];

         assign digitrec_gen000001_4_29_in43 = digitrec_Xor_49U_35_4_19_out1[6];

         assign digitrec_gen000001_4_29_in42 = digitrec_Xor_49U_35_4_19_out1[7];

         assign digitrec_gen000001_4_29_in41 = digitrec_Xor_49U_35_4_19_out1[8];

         assign digitrec_gen000001_4_29_in40 = digitrec_Xor_49U_35_4_19_out1[9];

         assign digitrec_gen000001_4_29_in39 = digitrec_Xor_49U_35_4_19_out1[10];

         assign digitrec_gen000001_4_29_in38 = digitrec_Xor_49U_35_4_19_out1[11];

         assign digitrec_gen000001_4_29_in37 = digitrec_Xor_49U_35_4_19_out1[12];

         assign digitrec_gen000001_4_29_in36 = digitrec_Xor_49U_35_4_19_out1[13];

         assign digitrec_gen000001_4_29_in35 = digitrec_Xor_49U_35_4_19_out1[14];

         assign digitrec_gen000001_4_29_in34 = digitrec_Xor_49U_35_4_19_out1[15];

         assign digitrec_gen000001_4_29_in33 = digitrec_Xor_49U_35_4_19_out1[16];

         assign digitrec_gen000001_4_29_in32 = digitrec_Xor_49U_35_4_19_out1[17];

         assign digitrec_gen000001_4_29_in31 = digitrec_Xor_49U_35_4_19_out1[18];

         assign digitrec_gen000001_4_29_in30 = digitrec_Xor_49U_35_4_19_out1[19];

         assign digitrec_gen000001_4_29_in29 = digitrec_Xor_49U_35_4_19_out1[20];

         assign digitrec_gen000001_4_29_in28 = digitrec_Xor_49U_35_4_19_out1[21];

         assign digitrec_gen000001_4_29_in27 = digitrec_Xor_49U_35_4_19_out1[22];

         assign digitrec_gen000001_4_29_in26 = digitrec_Xor_49U_35_4_19_out1[23];

         assign digitrec_gen000001_4_29_in25 = digitrec_Xor_49U_35_4_19_out1[24];

         assign digitrec_gen000001_4_29_in24 = digitrec_Xor_49U_35_4_19_out1[25];

         assign digitrec_gen000001_4_29_in23 = digitrec_Xor_49U_35_4_19_out1[26];

         assign digitrec_gen000001_4_29_in22 = digitrec_Xor_49U_35_4_19_out1[27];

         assign digitrec_gen000001_4_29_in21 = digitrec_Xor_49U_35_4_19_out1[28];

         assign digitrec_gen000001_4_29_in20 = digitrec_Xor_49U_35_4_19_out1[29];

         assign digitrec_gen000001_4_29_in19 = digitrec_Xor_49U_35_4_19_out1[30];

         assign digitrec_gen000001_4_29_in18 = digitrec_Xor_49U_35_4_19_out1[31];

         assign digitrec_gen000001_4_29_in17 = digitrec_Xor_49U_35_4_19_out1[32];

         assign digitrec_gen000001_4_29_in16 = digitrec_Xor_49U_35_4_19_out1[33];

         assign digitrec_gen000001_4_29_in15 = digitrec_Xor_49U_35_4_19_out1[34];

         assign digitrec_gen000001_4_29_in14 = digitrec_Xor_49U_35_4_19_out1[35];

         assign digitrec_gen000001_4_29_in13 = digitrec_Xor_49U_35_4_19_out1[36];

         assign digitrec_gen000001_4_29_in12 = digitrec_Xor_49U_35_4_19_out1[37];

         assign digitrec_gen000001_4_29_in11 = digitrec_Xor_49U_35_4_19_out1[38];

         assign digitrec_gen000001_4_29_in10 = digitrec_Xor_49U_35_4_19_out1[39];

         assign digitrec_gen000001_4_29_in9 = digitrec_Xor_49U_35_4_19_out1[40];

         assign digitrec_gen000001_4_29_in8 = digitrec_Xor_49U_35_4_19_out1[41];

         assign digitrec_gen000001_4_29_in7 = digitrec_Xor_49U_35_4_19_out1[42];

         assign digitrec_gen000001_4_29_in6 = digitrec_Xor_49U_35_4_19_out1[43];

         assign digitrec_gen000001_4_29_in5 = digitrec_Xor_49U_35_4_19_out1[44];

         assign digitrec_gen000001_4_29_in4 = digitrec_Xor_49U_35_4_19_out1[45];

         assign digitrec_gen000001_4_29_in3 = digitrec_Xor_49U_35_4_19_out1[46];

         assign digitrec_gen000001_4_29_in2 = digitrec_Xor_49U_35_4_19_out1[47];

         assign digitrec_gen000001_4_29_in1 = digitrec_Xor_49U_35_4_19_out1[48];

         // resource: digitrec_gen000001_4  instance: digitrec_gen000001_4_29
         assign digitrec_gen000001_4_29_out1 = {5'b00000, digitrec_Xor_49U_35_4_19_out1[0]} + {5'b00000, digitrec_gen000001_4_29_in48} + {5'b00000, digitrec_gen000001_4_29_in47} + {5'b00000, digitrec_gen000001_4_29_in46} + {5'b00000, digitrec_gen000001_4_29_in45} + {5'b00000, digitrec_gen000001_4_29_in44} + {5'b00000, digitrec_gen000001_4_29_in43} + {5'b00000, digitrec_gen000001_4_29_in42} + {5'b00000
             , digitrec_gen000001_4_29_in41} + {5'b00000, digitrec_gen000001_4_29_in40} + {5'b00000, digitrec_gen000001_4_29_in39} + {5'b00000, digitrec_gen000001_4_29_in38} + {5'b00000, digitrec_gen000001_4_29_in37} + {5'b00000, digitrec_gen000001_4_29_in36} + {5'b00000, digitrec_gen000001_4_29_in35} + {5'b00000, digitrec_gen000001_4_29_in34} + {5'b00000, digitrec_gen000001_4_29_in33} + {5'b00000, digitrec_gen000001_4_29_in32} + {5'b00000, digitrec_gen000001_4_29_in31} + {5'b00000
             , digitrec_gen000001_4_29_in30} + {5'b00000, digitrec_gen000001_4_29_in29} + {5'b00000, digitrec_gen000001_4_29_in28} + {5'b00000, digitrec_gen000001_4_29_in27} + {5'b00000, digitrec_gen000001_4_29_in26} + {5'b00000, digitrec_gen000001_4_29_in25} + {5'b00000, digitrec_gen000001_4_29_in24} + {5'b00000, digitrec_gen000001_4_29_in23} + {5'b00000, digitrec_gen000001_4_29_in22} + {5'b00000, digitrec_gen000001_4_29_in21} + {5'b00000, digitrec_gen000001_4_29_in20} + {5'b00000
             , digitrec_gen000001_4_29_in19} + {5'b00000, digitrec_gen000001_4_29_in18} + {5'b00000, digitrec_gen000001_4_29_in17} + {5'b00000, digitrec_gen000001_4_29_in16} + {5'b00000, digitrec_gen000001_4_29_in15} + {5'b00000, digitrec_gen000001_4_29_in14} + {5'b00000, digitrec_gen000001_4_29_in13} + {5'b00000, digitrec_gen000001_4_29_in12} + {5'b00000, digitrec_gen000001_4_29_in11} + {5'b00000, digitrec_gen000001_4_29_in10} + {5'b00000, digitrec_gen000001_4_29_in9} + {5'b00000
             , digitrec_gen000001_4_29_in8} + {5'b00000, digitrec_gen000001_4_29_in7} + {5'b00000, digitrec_gen000001_4_29_in6} + {5'b00000, digitrec_gen000001_4_29_in5} + {5'b00000, digitrec_gen000001_4_29_in4} + {5'b00000, digitrec_gen000001_4_29_in3} + {5'b00000, digitrec_gen000001_4_29_in2} + {5'b00000, digitrec_gen000001_4_29_in1};

         assign digitrec_gen000001_4_30_in48 = digitrec_Xor_49U_35_4_20_out1[1];

         assign digitrec_gen000001_4_30_in47 = digitrec_Xor_49U_35_4_20_out1[2];

         assign digitrec_gen000001_4_30_in46 = digitrec_Xor_49U_35_4_20_out1[3];

         assign digitrec_gen000001_4_30_in45 = digitrec_Xor_49U_35_4_20_out1[4];

         assign digitrec_gen000001_4_30_in44 = digitrec_Xor_49U_35_4_20_out1[5];

         assign digitrec_gen000001_4_30_in43 = digitrec_Xor_49U_35_4_20_out1[6];

         assign digitrec_gen000001_4_30_in42 = digitrec_Xor_49U_35_4_20_out1[7];

         assign digitrec_gen000001_4_30_in41 = digitrec_Xor_49U_35_4_20_out1[8];

         assign digitrec_gen000001_4_30_in40 = digitrec_Xor_49U_35_4_20_out1[9];

         assign digitrec_gen000001_4_30_in39 = digitrec_Xor_49U_35_4_20_out1[10];

         assign digitrec_gen000001_4_30_in38 = digitrec_Xor_49U_35_4_20_out1[11];

         assign digitrec_gen000001_4_30_in37 = digitrec_Xor_49U_35_4_20_out1[12];

         assign digitrec_gen000001_4_30_in36 = digitrec_Xor_49U_35_4_20_out1[13];

         assign digitrec_gen000001_4_30_in35 = digitrec_Xor_49U_35_4_20_out1[14];

         assign digitrec_gen000001_4_30_in34 = digitrec_Xor_49U_35_4_20_out1[15];

         assign digitrec_gen000001_4_30_in33 = digitrec_Xor_49U_35_4_20_out1[16];

         assign digitrec_gen000001_4_30_in32 = digitrec_Xor_49U_35_4_20_out1[17];

         assign digitrec_gen000001_4_30_in31 = digitrec_Xor_49U_35_4_20_out1[18];

         assign digitrec_gen000001_4_30_in30 = digitrec_Xor_49U_35_4_20_out1[19];

         assign digitrec_gen000001_4_30_in29 = digitrec_Xor_49U_35_4_20_out1[20];

         assign digitrec_gen000001_4_30_in28 = digitrec_Xor_49U_35_4_20_out1[21];

         assign digitrec_gen000001_4_30_in27 = digitrec_Xor_49U_35_4_20_out1[22];

         assign digitrec_gen000001_4_30_in26 = digitrec_Xor_49U_35_4_20_out1[23];

         assign digitrec_gen000001_4_30_in25 = digitrec_Xor_49U_35_4_20_out1[24];

         assign digitrec_gen000001_4_30_in24 = digitrec_Xor_49U_35_4_20_out1[25];

         assign digitrec_gen000001_4_30_in23 = digitrec_Xor_49U_35_4_20_out1[26];

         assign digitrec_gen000001_4_30_in22 = digitrec_Xor_49U_35_4_20_out1[27];

         assign digitrec_gen000001_4_30_in21 = digitrec_Xor_49U_35_4_20_out1[28];

         assign digitrec_gen000001_4_30_in20 = digitrec_Xor_49U_35_4_20_out1[29];

         assign digitrec_gen000001_4_30_in19 = digitrec_Xor_49U_35_4_20_out1[30];

         assign digitrec_gen000001_4_30_in18 = digitrec_Xor_49U_35_4_20_out1[31];

         assign digitrec_gen000001_4_30_in17 = digitrec_Xor_49U_35_4_20_out1[32];

         assign digitrec_gen000001_4_30_in16 = digitrec_Xor_49U_35_4_20_out1[33];

         assign digitrec_gen000001_4_30_in15 = digitrec_Xor_49U_35_4_20_out1[34];

         assign digitrec_gen000001_4_30_in14 = digitrec_Xor_49U_35_4_20_out1[35];

         assign digitrec_gen000001_4_30_in13 = digitrec_Xor_49U_35_4_20_out1[36];

         assign digitrec_gen000001_4_30_in12 = digitrec_Xor_49U_35_4_20_out1[37];

         assign digitrec_gen000001_4_30_in11 = digitrec_Xor_49U_35_4_20_out1[38];

         assign digitrec_gen000001_4_30_in10 = digitrec_Xor_49U_35_4_20_out1[39];

         assign digitrec_gen000001_4_30_in9 = digitrec_Xor_49U_35_4_20_out1[40];

         assign digitrec_gen000001_4_30_in8 = digitrec_Xor_49U_35_4_20_out1[41];

         assign digitrec_gen000001_4_30_in7 = digitrec_Xor_49U_35_4_20_out1[42];

         assign digitrec_gen000001_4_30_in6 = digitrec_Xor_49U_35_4_20_out1[43];

         assign digitrec_gen000001_4_30_in5 = digitrec_Xor_49U_35_4_20_out1[44];

         assign digitrec_gen000001_4_30_in4 = digitrec_Xor_49U_35_4_20_out1[45];

         assign digitrec_gen000001_4_30_in3 = digitrec_Xor_49U_35_4_20_out1[46];

         assign digitrec_gen000001_4_30_in2 = digitrec_Xor_49U_35_4_20_out1[47];

         assign digitrec_gen000001_4_30_in1 = digitrec_Xor_49U_35_4_20_out1[48];

         // resource: digitrec_gen000001_4  instance: digitrec_gen000001_4_30
         assign digitrec_gen000001_4_30_out1 = {5'b00000, digitrec_Xor_49U_35_4_20_out1[0]} + {5'b00000, digitrec_gen000001_4_30_in48} + {5'b00000, digitrec_gen000001_4_30_in47} + {5'b00000, digitrec_gen000001_4_30_in46} + {5'b00000, digitrec_gen000001_4_30_in45} + {5'b00000, digitrec_gen000001_4_30_in44} + {5'b00000, digitrec_gen000001_4_30_in43} + {5'b00000, digitrec_gen000001_4_30_in42} + {5'b00000
             , digitrec_gen000001_4_30_in41} + {5'b00000, digitrec_gen000001_4_30_in40} + {5'b00000, digitrec_gen000001_4_30_in39} + {5'b00000, digitrec_gen000001_4_30_in38} + {5'b00000, digitrec_gen000001_4_30_in37} + {5'b00000, digitrec_gen000001_4_30_in36} + {5'b00000, digitrec_gen000001_4_30_in35} + {5'b00000, digitrec_gen000001_4_30_in34} + {5'b00000, digitrec_gen000001_4_30_in33} + {5'b00000, digitrec_gen000001_4_30_in32} + {5'b00000, digitrec_gen000001_4_30_in31} + {5'b00000
             , digitrec_gen000001_4_30_in30} + {5'b00000, digitrec_gen000001_4_30_in29} + {5'b00000, digitrec_gen000001_4_30_in28} + {5'b00000, digitrec_gen000001_4_30_in27} + {5'b00000, digitrec_gen000001_4_30_in26} + {5'b00000, digitrec_gen000001_4_30_in25} + {5'b00000, digitrec_gen000001_4_30_in24} + {5'b00000, digitrec_gen000001_4_30_in23} + {5'b00000, digitrec_gen000001_4_30_in22} + {5'b00000, digitrec_gen000001_4_30_in21} + {5'b00000, digitrec_gen000001_4_30_in20} + {5'b00000
             , digitrec_gen000001_4_30_in19} + {5'b00000, digitrec_gen000001_4_30_in18} + {5'b00000, digitrec_gen000001_4_30_in17} + {5'b00000, digitrec_gen000001_4_30_in16} + {5'b00000, digitrec_gen000001_4_30_in15} + {5'b00000, digitrec_gen000001_4_30_in14} + {5'b00000, digitrec_gen000001_4_30_in13} + {5'b00000, digitrec_gen000001_4_30_in12} + {5'b00000, digitrec_gen000001_4_30_in11} + {5'b00000, digitrec_gen000001_4_30_in10} + {5'b00000, digitrec_gen000001_4_30_in9} + {5'b00000
             , digitrec_gen000001_4_30_in8} + {5'b00000, digitrec_gen000001_4_30_in7} + {5'b00000, digitrec_gen000001_4_30_in6} + {5'b00000, digitrec_gen000001_4_30_in5} + {5'b00000, digitrec_gen000001_4_30_in4} + {5'b00000, digitrec_gen000001_4_30_in3} + {5'b00000, digitrec_gen000001_4_30_in2} + {5'b00000, digitrec_gen000001_4_30_in1};

         assign digitrec_gen000001_4_31_in48 = digitrec_Xor_49U_35_4_21_out1[1];

         assign digitrec_gen000001_4_31_in47 = digitrec_Xor_49U_35_4_21_out1[2];

         assign digitrec_gen000001_4_31_in46 = digitrec_Xor_49U_35_4_21_out1[3];

         assign digitrec_gen000001_4_31_in45 = digitrec_Xor_49U_35_4_21_out1[4];

         assign digitrec_gen000001_4_31_in44 = digitrec_Xor_49U_35_4_21_out1[5];

         assign digitrec_gen000001_4_31_in43 = digitrec_Xor_49U_35_4_21_out1[6];

         assign digitrec_gen000001_4_31_in42 = digitrec_Xor_49U_35_4_21_out1[7];

         assign digitrec_gen000001_4_31_in41 = digitrec_Xor_49U_35_4_21_out1[8];

         assign digitrec_gen000001_4_31_in40 = digitrec_Xor_49U_35_4_21_out1[9];

         assign digitrec_gen000001_4_31_in39 = digitrec_Xor_49U_35_4_21_out1[10];

         assign digitrec_gen000001_4_31_in38 = digitrec_Xor_49U_35_4_21_out1[11];

         assign digitrec_gen000001_4_31_in37 = digitrec_Xor_49U_35_4_21_out1[12];

         assign digitrec_gen000001_4_31_in36 = digitrec_Xor_49U_35_4_21_out1[13];

         assign digitrec_gen000001_4_31_in35 = digitrec_Xor_49U_35_4_21_out1[14];

         assign digitrec_gen000001_4_31_in34 = digitrec_Xor_49U_35_4_21_out1[15];

         assign digitrec_gen000001_4_31_in33 = digitrec_Xor_49U_35_4_21_out1[16];

         assign digitrec_gen000001_4_31_in32 = digitrec_Xor_49U_35_4_21_out1[17];

         assign digitrec_gen000001_4_31_in31 = digitrec_Xor_49U_35_4_21_out1[18];

         assign digitrec_gen000001_4_31_in30 = digitrec_Xor_49U_35_4_21_out1[19];

         assign digitrec_gen000001_4_31_in29 = digitrec_Xor_49U_35_4_21_out1[20];

         assign digitrec_gen000001_4_31_in28 = digitrec_Xor_49U_35_4_21_out1[21];

         assign digitrec_gen000001_4_31_in27 = digitrec_Xor_49U_35_4_21_out1[22];

         assign digitrec_gen000001_4_31_in26 = digitrec_Xor_49U_35_4_21_out1[23];

         assign digitrec_gen000001_4_31_in25 = digitrec_Xor_49U_35_4_21_out1[24];

         assign digitrec_gen000001_4_31_in24 = digitrec_Xor_49U_35_4_21_out1[25];

         assign digitrec_gen000001_4_31_in23 = digitrec_Xor_49U_35_4_21_out1[26];

         assign digitrec_gen000001_4_31_in22 = digitrec_Xor_49U_35_4_21_out1[27];

         assign digitrec_gen000001_4_31_in21 = digitrec_Xor_49U_35_4_21_out1[28];

         assign digitrec_gen000001_4_31_in20 = digitrec_Xor_49U_35_4_21_out1[29];

         assign digitrec_gen000001_4_31_in19 = digitrec_Xor_49U_35_4_21_out1[30];

         assign digitrec_gen000001_4_31_in18 = digitrec_Xor_49U_35_4_21_out1[31];

         assign digitrec_gen000001_4_31_in17 = digitrec_Xor_49U_35_4_21_out1[32];

         assign digitrec_gen000001_4_31_in16 = digitrec_Xor_49U_35_4_21_out1[33];

         assign digitrec_gen000001_4_31_in15 = digitrec_Xor_49U_35_4_21_out1[34];

         assign digitrec_gen000001_4_31_in14 = digitrec_Xor_49U_35_4_21_out1[35];

         assign digitrec_gen000001_4_31_in13 = digitrec_Xor_49U_35_4_21_out1[36];

         assign digitrec_gen000001_4_31_in12 = digitrec_Xor_49U_35_4_21_out1[37];

         assign digitrec_gen000001_4_31_in11 = digitrec_Xor_49U_35_4_21_out1[38];

         assign digitrec_gen000001_4_31_in10 = digitrec_Xor_49U_35_4_21_out1[39];

         assign digitrec_gen000001_4_31_in9 = digitrec_Xor_49U_35_4_21_out1[40];

         assign digitrec_gen000001_4_31_in8 = digitrec_Xor_49U_35_4_21_out1[41];

         assign digitrec_gen000001_4_31_in7 = digitrec_Xor_49U_35_4_21_out1[42];

         assign digitrec_gen000001_4_31_in6 = digitrec_Xor_49U_35_4_21_out1[43];

         assign digitrec_gen000001_4_31_in5 = digitrec_Xor_49U_35_4_21_out1[44];

         assign digitrec_gen000001_4_31_in4 = digitrec_Xor_49U_35_4_21_out1[45];

         assign digitrec_gen000001_4_31_in3 = digitrec_Xor_49U_35_4_21_out1[46];

         assign digitrec_gen000001_4_31_in2 = digitrec_Xor_49U_35_4_21_out1[47];

         assign digitrec_gen000001_4_31_in1 = digitrec_Xor_49U_35_4_21_out1[48];

         // resource: digitrec_gen000001_4  instance: digitrec_gen000001_4_31
         assign digitrec_gen000001_4_31_out1 = {5'b00000, digitrec_Xor_49U_35_4_21_out1[0]} + {5'b00000, digitrec_gen000001_4_31_in48} + {5'b00000, digitrec_gen000001_4_31_in47} + {5'b00000, digitrec_gen000001_4_31_in46} + {5'b00000, digitrec_gen000001_4_31_in45} + {5'b00000, digitrec_gen000001_4_31_in44} + {5'b00000, digitrec_gen000001_4_31_in43} + {5'b00000, digitrec_gen000001_4_31_in42} + {5'b00000
             , digitrec_gen000001_4_31_in41} + {5'b00000, digitrec_gen000001_4_31_in40} + {5'b00000, digitrec_gen000001_4_31_in39} + {5'b00000, digitrec_gen000001_4_31_in38} + {5'b00000, digitrec_gen000001_4_31_in37} + {5'b00000, digitrec_gen000001_4_31_in36} + {5'b00000, digitrec_gen000001_4_31_in35} + {5'b00000, digitrec_gen000001_4_31_in34} + {5'b00000, digitrec_gen000001_4_31_in33} + {5'b00000, digitrec_gen000001_4_31_in32} + {5'b00000, digitrec_gen000001_4_31_in31} + {5'b00000
             , digitrec_gen000001_4_31_in30} + {5'b00000, digitrec_gen000001_4_31_in29} + {5'b00000, digitrec_gen000001_4_31_in28} + {5'b00000, digitrec_gen000001_4_31_in27} + {5'b00000, digitrec_gen000001_4_31_in26} + {5'b00000, digitrec_gen000001_4_31_in25} + {5'b00000, digitrec_gen000001_4_31_in24} + {5'b00000, digitrec_gen000001_4_31_in23} + {5'b00000, digitrec_gen000001_4_31_in22} + {5'b00000, digitrec_gen000001_4_31_in21} + {5'b00000, digitrec_gen000001_4_31_in20} + {5'b00000
             , digitrec_gen000001_4_31_in19} + {5'b00000, digitrec_gen000001_4_31_in18} + {5'b00000, digitrec_gen000001_4_31_in17} + {5'b00000, digitrec_gen000001_4_31_in16} + {5'b00000, digitrec_gen000001_4_31_in15} + {5'b00000, digitrec_gen000001_4_31_in14} + {5'b00000, digitrec_gen000001_4_31_in13} + {5'b00000, digitrec_gen000001_4_31_in12} + {5'b00000, digitrec_gen000001_4_31_in11} + {5'b00000, digitrec_gen000001_4_31_in10} + {5'b00000, digitrec_gen000001_4_31_in9} + {5'b00000
             , digitrec_gen000001_4_31_in8} + {5'b00000, digitrec_gen000001_4_31_in7} + {5'b00000, digitrec_gen000001_4_31_in6} + {5'b00000, digitrec_gen000001_4_31_in5} + {5'b00000, digitrec_gen000001_4_31_in4} + {5'b00000, digitrec_gen000001_4_31_in3} + {5'b00000, digitrec_gen000001_4_31_in2} + {5'b00000, digitrec_gen000001_4_31_in1};

         assign digitrec_gen000001_4_32_in48 = digitrec_Xor_49U_35_4_22_out1[1];

         assign digitrec_gen000001_4_32_in47 = digitrec_Xor_49U_35_4_22_out1[2];

         assign digitrec_gen000001_4_32_in46 = digitrec_Xor_49U_35_4_22_out1[3];

         assign digitrec_gen000001_4_32_in45 = digitrec_Xor_49U_35_4_22_out1[4];

         assign digitrec_gen000001_4_32_in44 = digitrec_Xor_49U_35_4_22_out1[5];

         assign digitrec_gen000001_4_32_in43 = digitrec_Xor_49U_35_4_22_out1[6];

         assign digitrec_gen000001_4_32_in42 = digitrec_Xor_49U_35_4_22_out1[7];

         assign digitrec_gen000001_4_32_in41 = digitrec_Xor_49U_35_4_22_out1[8];

         assign digitrec_gen000001_4_32_in40 = digitrec_Xor_49U_35_4_22_out1[9];

         assign digitrec_gen000001_4_32_in39 = digitrec_Xor_49U_35_4_22_out1[10];

         assign digitrec_gen000001_4_32_in38 = digitrec_Xor_49U_35_4_22_out1[11];

         assign digitrec_gen000001_4_32_in37 = digitrec_Xor_49U_35_4_22_out1[12];

         assign digitrec_gen000001_4_32_in36 = digitrec_Xor_49U_35_4_22_out1[13];

         assign digitrec_gen000001_4_32_in35 = digitrec_Xor_49U_35_4_22_out1[14];

         assign digitrec_gen000001_4_32_in34 = digitrec_Xor_49U_35_4_22_out1[15];

         assign digitrec_gen000001_4_32_in33 = digitrec_Xor_49U_35_4_22_out1[16];

         assign digitrec_gen000001_4_32_in32 = digitrec_Xor_49U_35_4_22_out1[17];

         assign digitrec_gen000001_4_32_in31 = digitrec_Xor_49U_35_4_22_out1[18];

         assign digitrec_gen000001_4_32_in30 = digitrec_Xor_49U_35_4_22_out1[19];

         assign digitrec_gen000001_4_32_in29 = digitrec_Xor_49U_35_4_22_out1[20];

         assign digitrec_gen000001_4_32_in28 = digitrec_Xor_49U_35_4_22_out1[21];

         assign digitrec_gen000001_4_32_in27 = digitrec_Xor_49U_35_4_22_out1[22];

         assign digitrec_gen000001_4_32_in26 = digitrec_Xor_49U_35_4_22_out1[23];

         assign digitrec_gen000001_4_32_in25 = digitrec_Xor_49U_35_4_22_out1[24];

         assign digitrec_gen000001_4_32_in24 = digitrec_Xor_49U_35_4_22_out1[25];

         assign digitrec_gen000001_4_32_in23 = digitrec_Xor_49U_35_4_22_out1[26];

         assign digitrec_gen000001_4_32_in22 = digitrec_Xor_49U_35_4_22_out1[27];

         assign digitrec_gen000001_4_32_in21 = digitrec_Xor_49U_35_4_22_out1[28];

         assign digitrec_gen000001_4_32_in20 = digitrec_Xor_49U_35_4_22_out1[29];

         assign digitrec_gen000001_4_32_in19 = digitrec_Xor_49U_35_4_22_out1[30];

         assign digitrec_gen000001_4_32_in18 = digitrec_Xor_49U_35_4_22_out1[31];

         assign digitrec_gen000001_4_32_in17 = digitrec_Xor_49U_35_4_22_out1[32];

         assign digitrec_gen000001_4_32_in16 = digitrec_Xor_49U_35_4_22_out1[33];

         assign digitrec_gen000001_4_32_in15 = digitrec_Xor_49U_35_4_22_out1[34];

         assign digitrec_gen000001_4_32_in14 = digitrec_Xor_49U_35_4_22_out1[35];

         assign digitrec_gen000001_4_32_in13 = digitrec_Xor_49U_35_4_22_out1[36];

         assign digitrec_gen000001_4_32_in12 = digitrec_Xor_49U_35_4_22_out1[37];

         assign digitrec_gen000001_4_32_in11 = digitrec_Xor_49U_35_4_22_out1[38];

         assign digitrec_gen000001_4_32_in10 = digitrec_Xor_49U_35_4_22_out1[39];

         assign digitrec_gen000001_4_32_in9 = digitrec_Xor_49U_35_4_22_out1[40];

         assign digitrec_gen000001_4_32_in8 = digitrec_Xor_49U_35_4_22_out1[41];

         assign digitrec_gen000001_4_32_in7 = digitrec_Xor_49U_35_4_22_out1[42];

         assign digitrec_gen000001_4_32_in6 = digitrec_Xor_49U_35_4_22_out1[43];

         assign digitrec_gen000001_4_32_in5 = digitrec_Xor_49U_35_4_22_out1[44];

         assign digitrec_gen000001_4_32_in4 = digitrec_Xor_49U_35_4_22_out1[45];

         assign digitrec_gen000001_4_32_in3 = digitrec_Xor_49U_35_4_22_out1[46];

         assign digitrec_gen000001_4_32_in2 = digitrec_Xor_49U_35_4_22_out1[47];

         assign digitrec_gen000001_4_32_in1 = digitrec_Xor_49U_35_4_22_out1[48];

         // resource: digitrec_gen000001_4  instance: digitrec_gen000001_4_32
         assign digitrec_gen000001_4_32_out1 = {5'b00000, digitrec_Xor_49U_35_4_22_out1[0]} + {5'b00000, digitrec_gen000001_4_32_in48} + {5'b00000, digitrec_gen000001_4_32_in47} + {5'b00000, digitrec_gen000001_4_32_in46} + {5'b00000, digitrec_gen000001_4_32_in45} + {5'b00000, digitrec_gen000001_4_32_in44} + {5'b00000, digitrec_gen000001_4_32_in43} + {5'b00000, digitrec_gen000001_4_32_in42} + {5'b00000
             , digitrec_gen000001_4_32_in41} + {5'b00000, digitrec_gen000001_4_32_in40} + {5'b00000, digitrec_gen000001_4_32_in39} + {5'b00000, digitrec_gen000001_4_32_in38} + {5'b00000, digitrec_gen000001_4_32_in37} + {5'b00000, digitrec_gen000001_4_32_in36} + {5'b00000, digitrec_gen000001_4_32_in35} + {5'b00000, digitrec_gen000001_4_32_in34} + {5'b00000, digitrec_gen000001_4_32_in33} + {5'b00000, digitrec_gen000001_4_32_in32} + {5'b00000, digitrec_gen000001_4_32_in31} + {5'b00000
             , digitrec_gen000001_4_32_in30} + {5'b00000, digitrec_gen000001_4_32_in29} + {5'b00000, digitrec_gen000001_4_32_in28} + {5'b00000, digitrec_gen000001_4_32_in27} + {5'b00000, digitrec_gen000001_4_32_in26} + {5'b00000, digitrec_gen000001_4_32_in25} + {5'b00000, digitrec_gen000001_4_32_in24} + {5'b00000, digitrec_gen000001_4_32_in23} + {5'b00000, digitrec_gen000001_4_32_in22} + {5'b00000, digitrec_gen000001_4_32_in21} + {5'b00000, digitrec_gen000001_4_32_in20} + {5'b00000
             , digitrec_gen000001_4_32_in19} + {5'b00000, digitrec_gen000001_4_32_in18} + {5'b00000, digitrec_gen000001_4_32_in17} + {5'b00000, digitrec_gen000001_4_32_in16} + {5'b00000, digitrec_gen000001_4_32_in15} + {5'b00000, digitrec_gen000001_4_32_in14} + {5'b00000, digitrec_gen000001_4_32_in13} + {5'b00000, digitrec_gen000001_4_32_in12} + {5'b00000, digitrec_gen000001_4_32_in11} + {5'b00000, digitrec_gen000001_4_32_in10} + {5'b00000, digitrec_gen000001_4_32_in9} + {5'b00000
             , digitrec_gen000001_4_32_in8} + {5'b00000, digitrec_gen000001_4_32_in7} + {5'b00000, digitrec_gen000001_4_32_in6} + {5'b00000, digitrec_gen000001_4_32_in5} + {5'b00000, digitrec_gen000001_4_32_in4} + {5'b00000, digitrec_gen000001_4_32_in3} + {5'b00000, digitrec_gen000001_4_32_in2} + {5'b00000, digitrec_gen000001_4_32_in1};

         assign digitrec_gen000001_4_33_in48 = digitrec_Xor_49U_35_4_23_out1[1];

         assign digitrec_gen000001_4_33_in47 = digitrec_Xor_49U_35_4_23_out1[2];

         assign digitrec_gen000001_4_33_in46 = digitrec_Xor_49U_35_4_23_out1[3];

         assign digitrec_gen000001_4_33_in45 = digitrec_Xor_49U_35_4_23_out1[4];

         assign digitrec_gen000001_4_33_in44 = digitrec_Xor_49U_35_4_23_out1[5];

         assign digitrec_gen000001_4_33_in43 = digitrec_Xor_49U_35_4_23_out1[6];

         assign digitrec_gen000001_4_33_in42 = digitrec_Xor_49U_35_4_23_out1[7];

         assign digitrec_gen000001_4_33_in41 = digitrec_Xor_49U_35_4_23_out1[8];

         assign digitrec_gen000001_4_33_in40 = digitrec_Xor_49U_35_4_23_out1[9];

         assign digitrec_gen000001_4_33_in39 = digitrec_Xor_49U_35_4_23_out1[10];

         assign digitrec_gen000001_4_33_in38 = digitrec_Xor_49U_35_4_23_out1[11];

         assign digitrec_gen000001_4_33_in37 = digitrec_Xor_49U_35_4_23_out1[12];

         assign digitrec_gen000001_4_33_in36 = digitrec_Xor_49U_35_4_23_out1[13];

         assign digitrec_gen000001_4_33_in35 = digitrec_Xor_49U_35_4_23_out1[14];

         assign digitrec_gen000001_4_33_in34 = digitrec_Xor_49U_35_4_23_out1[15];

         assign digitrec_gen000001_4_33_in33 = digitrec_Xor_49U_35_4_23_out1[16];

         assign digitrec_gen000001_4_33_in32 = digitrec_Xor_49U_35_4_23_out1[17];

         assign digitrec_gen000001_4_33_in31 = digitrec_Xor_49U_35_4_23_out1[18];

         assign digitrec_gen000001_4_33_in30 = digitrec_Xor_49U_35_4_23_out1[19];

         assign digitrec_gen000001_4_33_in29 = digitrec_Xor_49U_35_4_23_out1[20];

         assign digitrec_gen000001_4_33_in28 = digitrec_Xor_49U_35_4_23_out1[21];

         assign digitrec_gen000001_4_33_in27 = digitrec_Xor_49U_35_4_23_out1[22];

         assign digitrec_gen000001_4_33_in26 = digitrec_Xor_49U_35_4_23_out1[23];

         assign digitrec_gen000001_4_33_in25 = digitrec_Xor_49U_35_4_23_out1[24];

         assign digitrec_gen000001_4_33_in24 = digitrec_Xor_49U_35_4_23_out1[25];

         assign digitrec_gen000001_4_33_in23 = digitrec_Xor_49U_35_4_23_out1[26];

         assign digitrec_gen000001_4_33_in22 = digitrec_Xor_49U_35_4_23_out1[27];

         assign digitrec_gen000001_4_33_in21 = digitrec_Xor_49U_35_4_23_out1[28];

         assign digitrec_gen000001_4_33_in20 = digitrec_Xor_49U_35_4_23_out1[29];

         assign digitrec_gen000001_4_33_in19 = digitrec_Xor_49U_35_4_23_out1[30];

         assign digitrec_gen000001_4_33_in18 = digitrec_Xor_49U_35_4_23_out1[31];

         assign digitrec_gen000001_4_33_in17 = digitrec_Xor_49U_35_4_23_out1[32];

         assign digitrec_gen000001_4_33_in16 = digitrec_Xor_49U_35_4_23_out1[33];

         assign digitrec_gen000001_4_33_in15 = digitrec_Xor_49U_35_4_23_out1[34];

         assign digitrec_gen000001_4_33_in14 = digitrec_Xor_49U_35_4_23_out1[35];

         assign digitrec_gen000001_4_33_in13 = digitrec_Xor_49U_35_4_23_out1[36];

         assign digitrec_gen000001_4_33_in12 = digitrec_Xor_49U_35_4_23_out1[37];

         assign digitrec_gen000001_4_33_in11 = digitrec_Xor_49U_35_4_23_out1[38];

         assign digitrec_gen000001_4_33_in10 = digitrec_Xor_49U_35_4_23_out1[39];

         assign digitrec_gen000001_4_33_in9 = digitrec_Xor_49U_35_4_23_out1[40];

         assign digitrec_gen000001_4_33_in8 = digitrec_Xor_49U_35_4_23_out1[41];

         assign digitrec_gen000001_4_33_in7 = digitrec_Xor_49U_35_4_23_out1[42];

         assign digitrec_gen000001_4_33_in6 = digitrec_Xor_49U_35_4_23_out1[43];

         assign digitrec_gen000001_4_33_in5 = digitrec_Xor_49U_35_4_23_out1[44];

         assign digitrec_gen000001_4_33_in4 = digitrec_Xor_49U_35_4_23_out1[45];

         assign digitrec_gen000001_4_33_in3 = digitrec_Xor_49U_35_4_23_out1[46];

         assign digitrec_gen000001_4_33_in2 = digitrec_Xor_49U_35_4_23_out1[47];

         assign digitrec_gen000001_4_33_in1 = digitrec_Xor_49U_35_4_23_out1[48];

         // resource: digitrec_gen000001_4  instance: digitrec_gen000001_4_33
         assign digitrec_gen000001_4_33_out1 = {5'b00000, digitrec_Xor_49U_35_4_23_out1[0]} + {5'b00000, digitrec_gen000001_4_33_in48} + {5'b00000, digitrec_gen000001_4_33_in47} + {5'b00000, digitrec_gen000001_4_33_in46} + {5'b00000, digitrec_gen000001_4_33_in45} + {5'b00000, digitrec_gen000001_4_33_in44} + {5'b00000, digitrec_gen000001_4_33_in43} + {5'b00000, digitrec_gen000001_4_33_in42} + {5'b00000
             , digitrec_gen000001_4_33_in41} + {5'b00000, digitrec_gen000001_4_33_in40} + {5'b00000, digitrec_gen000001_4_33_in39} + {5'b00000, digitrec_gen000001_4_33_in38} + {5'b00000, digitrec_gen000001_4_33_in37} + {5'b00000, digitrec_gen000001_4_33_in36} + {5'b00000, digitrec_gen000001_4_33_in35} + {5'b00000, digitrec_gen000001_4_33_in34} + {5'b00000, digitrec_gen000001_4_33_in33} + {5'b00000, digitrec_gen000001_4_33_in32} + {5'b00000, digitrec_gen000001_4_33_in31} + {5'b00000
             , digitrec_gen000001_4_33_in30} + {5'b00000, digitrec_gen000001_4_33_in29} + {5'b00000, digitrec_gen000001_4_33_in28} + {5'b00000, digitrec_gen000001_4_33_in27} + {5'b00000, digitrec_gen000001_4_33_in26} + {5'b00000, digitrec_gen000001_4_33_in25} + {5'b00000, digitrec_gen000001_4_33_in24} + {5'b00000, digitrec_gen000001_4_33_in23} + {5'b00000, digitrec_gen000001_4_33_in22} + {5'b00000, digitrec_gen000001_4_33_in21} + {5'b00000, digitrec_gen000001_4_33_in20} + {5'b00000
             , digitrec_gen000001_4_33_in19} + {5'b00000, digitrec_gen000001_4_33_in18} + {5'b00000, digitrec_gen000001_4_33_in17} + {5'b00000, digitrec_gen000001_4_33_in16} + {5'b00000, digitrec_gen000001_4_33_in15} + {5'b00000, digitrec_gen000001_4_33_in14} + {5'b00000, digitrec_gen000001_4_33_in13} + {5'b00000, digitrec_gen000001_4_33_in12} + {5'b00000, digitrec_gen000001_4_33_in11} + {5'b00000, digitrec_gen000001_4_33_in10} + {5'b00000, digitrec_gen000001_4_33_in9} + {5'b00000
             , digitrec_gen000001_4_33_in8} + {5'b00000, digitrec_gen000001_4_33_in7} + {5'b00000, digitrec_gen000001_4_33_in6} + {5'b00000, digitrec_gen000001_4_33_in5} + {5'b00000, digitrec_gen000001_4_33_in4} + {5'b00000, digitrec_gen000001_4_33_in3} + {5'b00000, digitrec_gen000001_4_33_in2} + {5'b00000, digitrec_gen000001_4_33_in1};

         assign digitrec_gen000001_4_34_in48 = digitrec_Xor_49U_35_4_24_out1[1];

         assign digitrec_gen000001_4_34_in47 = digitrec_Xor_49U_35_4_24_out1[2];

         assign digitrec_gen000001_4_34_in46 = digitrec_Xor_49U_35_4_24_out1[3];

         assign digitrec_gen000001_4_34_in45 = digitrec_Xor_49U_35_4_24_out1[4];

         assign digitrec_gen000001_4_34_in44 = digitrec_Xor_49U_35_4_24_out1[5];

         assign digitrec_gen000001_4_34_in43 = digitrec_Xor_49U_35_4_24_out1[6];

         assign digitrec_gen000001_4_34_in42 = digitrec_Xor_49U_35_4_24_out1[7];

         assign digitrec_gen000001_4_34_in41 = digitrec_Xor_49U_35_4_24_out1[8];

         assign digitrec_gen000001_4_34_in40 = digitrec_Xor_49U_35_4_24_out1[9];

         assign digitrec_gen000001_4_34_in39 = digitrec_Xor_49U_35_4_24_out1[10];

         assign digitrec_gen000001_4_34_in38 = digitrec_Xor_49U_35_4_24_out1[11];

         assign digitrec_gen000001_4_34_in37 = digitrec_Xor_49U_35_4_24_out1[12];

         assign digitrec_gen000001_4_34_in36 = digitrec_Xor_49U_35_4_24_out1[13];

         assign digitrec_gen000001_4_34_in35 = digitrec_Xor_49U_35_4_24_out1[14];

         assign digitrec_gen000001_4_34_in34 = digitrec_Xor_49U_35_4_24_out1[15];

         assign digitrec_gen000001_4_34_in33 = digitrec_Xor_49U_35_4_24_out1[16];

         assign digitrec_gen000001_4_34_in32 = digitrec_Xor_49U_35_4_24_out1[17];

         assign digitrec_gen000001_4_34_in31 = digitrec_Xor_49U_35_4_24_out1[18];

         assign digitrec_gen000001_4_34_in30 = digitrec_Xor_49U_35_4_24_out1[19];

         assign digitrec_gen000001_4_34_in29 = digitrec_Xor_49U_35_4_24_out1[20];

         assign digitrec_gen000001_4_34_in28 = digitrec_Xor_49U_35_4_24_out1[21];

         assign digitrec_gen000001_4_34_in27 = digitrec_Xor_49U_35_4_24_out1[22];

         assign digitrec_gen000001_4_34_in26 = digitrec_Xor_49U_35_4_24_out1[23];

         assign digitrec_gen000001_4_34_in25 = digitrec_Xor_49U_35_4_24_out1[24];

         assign digitrec_gen000001_4_34_in24 = digitrec_Xor_49U_35_4_24_out1[25];

         assign digitrec_gen000001_4_34_in23 = digitrec_Xor_49U_35_4_24_out1[26];

         assign digitrec_gen000001_4_34_in22 = digitrec_Xor_49U_35_4_24_out1[27];

         assign digitrec_gen000001_4_34_in21 = digitrec_Xor_49U_35_4_24_out1[28];

         assign digitrec_gen000001_4_34_in20 = digitrec_Xor_49U_35_4_24_out1[29];

         assign digitrec_gen000001_4_34_in19 = digitrec_Xor_49U_35_4_24_out1[30];

         assign digitrec_gen000001_4_34_in18 = digitrec_Xor_49U_35_4_24_out1[31];

         assign digitrec_gen000001_4_34_in17 = digitrec_Xor_49U_35_4_24_out1[32];

         assign digitrec_gen000001_4_34_in16 = digitrec_Xor_49U_35_4_24_out1[33];

         assign digitrec_gen000001_4_34_in15 = digitrec_Xor_49U_35_4_24_out1[34];

         assign digitrec_gen000001_4_34_in14 = digitrec_Xor_49U_35_4_24_out1[35];

         assign digitrec_gen000001_4_34_in13 = digitrec_Xor_49U_35_4_24_out1[36];

         assign digitrec_gen000001_4_34_in12 = digitrec_Xor_49U_35_4_24_out1[37];

         assign digitrec_gen000001_4_34_in11 = digitrec_Xor_49U_35_4_24_out1[38];

         assign digitrec_gen000001_4_34_in10 = digitrec_Xor_49U_35_4_24_out1[39];

         assign digitrec_gen000001_4_34_in9 = digitrec_Xor_49U_35_4_24_out1[40];

         assign digitrec_gen000001_4_34_in8 = digitrec_Xor_49U_35_4_24_out1[41];

         assign digitrec_gen000001_4_34_in7 = digitrec_Xor_49U_35_4_24_out1[42];

         assign digitrec_gen000001_4_34_in6 = digitrec_Xor_49U_35_4_24_out1[43];

         assign digitrec_gen000001_4_34_in5 = digitrec_Xor_49U_35_4_24_out1[44];

         assign digitrec_gen000001_4_34_in4 = digitrec_Xor_49U_35_4_24_out1[45];

         assign digitrec_gen000001_4_34_in3 = digitrec_Xor_49U_35_4_24_out1[46];

         assign digitrec_gen000001_4_34_in2 = digitrec_Xor_49U_35_4_24_out1[47];

         assign digitrec_gen000001_4_34_in1 = digitrec_Xor_49U_35_4_24_out1[48];

         // resource: digitrec_gen000001_4  instance: digitrec_gen000001_4_34
         assign digitrec_gen000001_4_34_out1 = {5'b00000, digitrec_Xor_49U_35_4_24_out1[0]} + {5'b00000, digitrec_gen000001_4_34_in48} + {5'b00000, digitrec_gen000001_4_34_in47} + {5'b00000, digitrec_gen000001_4_34_in46} + {5'b00000, digitrec_gen000001_4_34_in45} + {5'b00000, digitrec_gen000001_4_34_in44} + {5'b00000, digitrec_gen000001_4_34_in43} + {5'b00000, digitrec_gen000001_4_34_in42} + {5'b00000
             , digitrec_gen000001_4_34_in41} + {5'b00000, digitrec_gen000001_4_34_in40} + {5'b00000, digitrec_gen000001_4_34_in39} + {5'b00000, digitrec_gen000001_4_34_in38} + {5'b00000, digitrec_gen000001_4_34_in37} + {5'b00000, digitrec_gen000001_4_34_in36} + {5'b00000, digitrec_gen000001_4_34_in35} + {5'b00000, digitrec_gen000001_4_34_in34} + {5'b00000, digitrec_gen000001_4_34_in33} + {5'b00000, digitrec_gen000001_4_34_in32} + {5'b00000, digitrec_gen000001_4_34_in31} + {5'b00000
             , digitrec_gen000001_4_34_in30} + {5'b00000, digitrec_gen000001_4_34_in29} + {5'b00000, digitrec_gen000001_4_34_in28} + {5'b00000, digitrec_gen000001_4_34_in27} + {5'b00000, digitrec_gen000001_4_34_in26} + {5'b00000, digitrec_gen000001_4_34_in25} + {5'b00000, digitrec_gen000001_4_34_in24} + {5'b00000, digitrec_gen000001_4_34_in23} + {5'b00000, digitrec_gen000001_4_34_in22} + {5'b00000, digitrec_gen000001_4_34_in21} + {5'b00000, digitrec_gen000001_4_34_in20} + {5'b00000
             , digitrec_gen000001_4_34_in19} + {5'b00000, digitrec_gen000001_4_34_in18} + {5'b00000, digitrec_gen000001_4_34_in17} + {5'b00000, digitrec_gen000001_4_34_in16} + {5'b00000, digitrec_gen000001_4_34_in15} + {5'b00000, digitrec_gen000001_4_34_in14} + {5'b00000, digitrec_gen000001_4_34_in13} + {5'b00000, digitrec_gen000001_4_34_in12} + {5'b00000, digitrec_gen000001_4_34_in11} + {5'b00000, digitrec_gen000001_4_34_in10} + {5'b00000, digitrec_gen000001_4_34_in9} + {5'b00000
             , digitrec_gen000001_4_34_in8} + {5'b00000, digitrec_gen000001_4_34_in7} + {5'b00000, digitrec_gen000001_4_34_in6} + {5'b00000, digitrec_gen000001_4_34_in5} + {5'b00000, digitrec_gen000001_4_34_in4} + {5'b00000, digitrec_gen000001_4_34_in3} + {5'b00000, digitrec_gen000001_4_34_in2} + {5'b00000, digitrec_gen000001_4_34_in1};

         assign digitrec_gen000001_4_35_in48 = digitrec_Xor_49U_35_4_25_out1[1];

         assign digitrec_gen000001_4_35_in47 = digitrec_Xor_49U_35_4_25_out1[2];

         assign digitrec_gen000001_4_35_in46 = digitrec_Xor_49U_35_4_25_out1[3];

         assign digitrec_gen000001_4_35_in45 = digitrec_Xor_49U_35_4_25_out1[4];

         assign digitrec_gen000001_4_35_in44 = digitrec_Xor_49U_35_4_25_out1[5];

         assign digitrec_gen000001_4_35_in43 = digitrec_Xor_49U_35_4_25_out1[6];

         assign digitrec_gen000001_4_35_in42 = digitrec_Xor_49U_35_4_25_out1[7];

         assign digitrec_gen000001_4_35_in41 = digitrec_Xor_49U_35_4_25_out1[8];

         assign digitrec_gen000001_4_35_in40 = digitrec_Xor_49U_35_4_25_out1[9];

         assign digitrec_gen000001_4_35_in39 = digitrec_Xor_49U_35_4_25_out1[10];

         assign digitrec_gen000001_4_35_in38 = digitrec_Xor_49U_35_4_25_out1[11];

         assign digitrec_gen000001_4_35_in37 = digitrec_Xor_49U_35_4_25_out1[12];

         assign digitrec_gen000001_4_35_in36 = digitrec_Xor_49U_35_4_25_out1[13];

         assign digitrec_gen000001_4_35_in35 = digitrec_Xor_49U_35_4_25_out1[14];

         assign digitrec_gen000001_4_35_in34 = digitrec_Xor_49U_35_4_25_out1[15];

         assign digitrec_gen000001_4_35_in33 = digitrec_Xor_49U_35_4_25_out1[16];

         assign digitrec_gen000001_4_35_in32 = digitrec_Xor_49U_35_4_25_out1[17];

         assign digitrec_gen000001_4_35_in31 = digitrec_Xor_49U_35_4_25_out1[18];

         assign digitrec_gen000001_4_35_in30 = digitrec_Xor_49U_35_4_25_out1[19];

         assign digitrec_gen000001_4_35_in29 = digitrec_Xor_49U_35_4_25_out1[20];

         assign digitrec_gen000001_4_35_in28 = digitrec_Xor_49U_35_4_25_out1[21];

         assign digitrec_gen000001_4_35_in27 = digitrec_Xor_49U_35_4_25_out1[22];

         assign digitrec_gen000001_4_35_in26 = digitrec_Xor_49U_35_4_25_out1[23];

         assign digitrec_gen000001_4_35_in25 = digitrec_Xor_49U_35_4_25_out1[24];

         assign digitrec_gen000001_4_35_in24 = digitrec_Xor_49U_35_4_25_out1[25];

         assign digitrec_gen000001_4_35_in23 = digitrec_Xor_49U_35_4_25_out1[26];

         assign digitrec_gen000001_4_35_in22 = digitrec_Xor_49U_35_4_25_out1[27];

         assign digitrec_gen000001_4_35_in21 = digitrec_Xor_49U_35_4_25_out1[28];

         assign digitrec_gen000001_4_35_in20 = digitrec_Xor_49U_35_4_25_out1[29];

         assign digitrec_gen000001_4_35_in19 = digitrec_Xor_49U_35_4_25_out1[30];

         assign digitrec_gen000001_4_35_in18 = digitrec_Xor_49U_35_4_25_out1[31];

         assign digitrec_gen000001_4_35_in17 = digitrec_Xor_49U_35_4_25_out1[32];

         assign digitrec_gen000001_4_35_in16 = digitrec_Xor_49U_35_4_25_out1[33];

         assign digitrec_gen000001_4_35_in15 = digitrec_Xor_49U_35_4_25_out1[34];

         assign digitrec_gen000001_4_35_in14 = digitrec_Xor_49U_35_4_25_out1[35];

         assign digitrec_gen000001_4_35_in13 = digitrec_Xor_49U_35_4_25_out1[36];

         assign digitrec_gen000001_4_35_in12 = digitrec_Xor_49U_35_4_25_out1[37];

         assign digitrec_gen000001_4_35_in11 = digitrec_Xor_49U_35_4_25_out1[38];

         assign digitrec_gen000001_4_35_in10 = digitrec_Xor_49U_35_4_25_out1[39];

         assign digitrec_gen000001_4_35_in9 = digitrec_Xor_49U_35_4_25_out1[40];

         assign digitrec_gen000001_4_35_in8 = digitrec_Xor_49U_35_4_25_out1[41];

         assign digitrec_gen000001_4_35_in7 = digitrec_Xor_49U_35_4_25_out1[42];

         assign digitrec_gen000001_4_35_in6 = digitrec_Xor_49U_35_4_25_out1[43];

         assign digitrec_gen000001_4_35_in5 = digitrec_Xor_49U_35_4_25_out1[44];

         assign digitrec_gen000001_4_35_in4 = digitrec_Xor_49U_35_4_25_out1[45];

         assign digitrec_gen000001_4_35_in3 = digitrec_Xor_49U_35_4_25_out1[46];

         assign digitrec_gen000001_4_35_in2 = digitrec_Xor_49U_35_4_25_out1[47];

         assign digitrec_gen000001_4_35_in1 = digitrec_Xor_49U_35_4_25_out1[48];

         // resource: digitrec_gen000001_4  instance: digitrec_gen000001_4_35
         assign digitrec_gen000001_4_35_out1 = {5'b00000, digitrec_Xor_49U_35_4_25_out1[0]} + {5'b00000, digitrec_gen000001_4_35_in48} + {5'b00000, digitrec_gen000001_4_35_in47} + {5'b00000, digitrec_gen000001_4_35_in46} + {5'b00000, digitrec_gen000001_4_35_in45} + {5'b00000, digitrec_gen000001_4_35_in44} + {5'b00000, digitrec_gen000001_4_35_in43} + {5'b00000, digitrec_gen000001_4_35_in42} + {5'b00000
             , digitrec_gen000001_4_35_in41} + {5'b00000, digitrec_gen000001_4_35_in40} + {5'b00000, digitrec_gen000001_4_35_in39} + {5'b00000, digitrec_gen000001_4_35_in38} + {5'b00000, digitrec_gen000001_4_35_in37} + {5'b00000, digitrec_gen000001_4_35_in36} + {5'b00000, digitrec_gen000001_4_35_in35} + {5'b00000, digitrec_gen000001_4_35_in34} + {5'b00000, digitrec_gen000001_4_35_in33} + {5'b00000, digitrec_gen000001_4_35_in32} + {5'b00000, digitrec_gen000001_4_35_in31} + {5'b00000
             , digitrec_gen000001_4_35_in30} + {5'b00000, digitrec_gen000001_4_35_in29} + {5'b00000, digitrec_gen000001_4_35_in28} + {5'b00000, digitrec_gen000001_4_35_in27} + {5'b00000, digitrec_gen000001_4_35_in26} + {5'b00000, digitrec_gen000001_4_35_in25} + {5'b00000, digitrec_gen000001_4_35_in24} + {5'b00000, digitrec_gen000001_4_35_in23} + {5'b00000, digitrec_gen000001_4_35_in22} + {5'b00000, digitrec_gen000001_4_35_in21} + {5'b00000, digitrec_gen000001_4_35_in20} + {5'b00000
             , digitrec_gen000001_4_35_in19} + {5'b00000, digitrec_gen000001_4_35_in18} + {5'b00000, digitrec_gen000001_4_35_in17} + {5'b00000, digitrec_gen000001_4_35_in16} + {5'b00000, digitrec_gen000001_4_35_in15} + {5'b00000, digitrec_gen000001_4_35_in14} + {5'b00000, digitrec_gen000001_4_35_in13} + {5'b00000, digitrec_gen000001_4_35_in12} + {5'b00000, digitrec_gen000001_4_35_in11} + {5'b00000, digitrec_gen000001_4_35_in10} + {5'b00000, digitrec_gen000001_4_35_in9} + {5'b00000
             , digitrec_gen000001_4_35_in8} + {5'b00000, digitrec_gen000001_4_35_in7} + {5'b00000, digitrec_gen000001_4_35_in6} + {5'b00000, digitrec_gen000001_4_35_in5} + {5'b00000, digitrec_gen000001_4_35_in4} + {5'b00000, digitrec_gen000001_4_35_in3} + {5'b00000, digitrec_gen000001_4_35_in2} + {5'b00000, digitrec_gen000001_4_35_in1};

         assign digitrec_gen000001_4_36_in48 = digitrec_Xor_49U_35_4_26_out1[1];

         assign digitrec_gen000001_4_36_in47 = digitrec_Xor_49U_35_4_26_out1[2];

         assign digitrec_gen000001_4_36_in46 = digitrec_Xor_49U_35_4_26_out1[3];

         assign digitrec_gen000001_4_36_in45 = digitrec_Xor_49U_35_4_26_out1[4];

         assign digitrec_gen000001_4_36_in44 = digitrec_Xor_49U_35_4_26_out1[5];

         assign digitrec_gen000001_4_36_in43 = digitrec_Xor_49U_35_4_26_out1[6];

         assign digitrec_gen000001_4_36_in42 = digitrec_Xor_49U_35_4_26_out1[7];

         assign digitrec_gen000001_4_36_in41 = digitrec_Xor_49U_35_4_26_out1[8];

         assign digitrec_gen000001_4_36_in40 = digitrec_Xor_49U_35_4_26_out1[9];

         assign digitrec_gen000001_4_36_in39 = digitrec_Xor_49U_35_4_26_out1[10];

         assign digitrec_gen000001_4_36_in38 = digitrec_Xor_49U_35_4_26_out1[11];

         assign digitrec_gen000001_4_36_in37 = digitrec_Xor_49U_35_4_26_out1[12];

         assign digitrec_gen000001_4_36_in36 = digitrec_Xor_49U_35_4_26_out1[13];

         assign digitrec_gen000001_4_36_in35 = digitrec_Xor_49U_35_4_26_out1[14];

         assign digitrec_gen000001_4_36_in34 = digitrec_Xor_49U_35_4_26_out1[15];

         assign digitrec_gen000001_4_36_in33 = digitrec_Xor_49U_35_4_26_out1[16];

         assign digitrec_gen000001_4_36_in32 = digitrec_Xor_49U_35_4_26_out1[17];

         assign digitrec_gen000001_4_36_in31 = digitrec_Xor_49U_35_4_26_out1[18];

         assign digitrec_gen000001_4_36_in30 = digitrec_Xor_49U_35_4_26_out1[19];

         assign digitrec_gen000001_4_36_in29 = digitrec_Xor_49U_35_4_26_out1[20];

         assign digitrec_gen000001_4_36_in28 = digitrec_Xor_49U_35_4_26_out1[21];

         assign digitrec_gen000001_4_36_in27 = digitrec_Xor_49U_35_4_26_out1[22];

         assign digitrec_gen000001_4_36_in26 = digitrec_Xor_49U_35_4_26_out1[23];

         assign digitrec_gen000001_4_36_in25 = digitrec_Xor_49U_35_4_26_out1[24];

         assign digitrec_gen000001_4_36_in24 = digitrec_Xor_49U_35_4_26_out1[25];

         assign digitrec_gen000001_4_36_in23 = digitrec_Xor_49U_35_4_26_out1[26];

         assign digitrec_gen000001_4_36_in22 = digitrec_Xor_49U_35_4_26_out1[27];

         assign digitrec_gen000001_4_36_in21 = digitrec_Xor_49U_35_4_26_out1[28];

         assign digitrec_gen000001_4_36_in20 = digitrec_Xor_49U_35_4_26_out1[29];

         assign digitrec_gen000001_4_36_in19 = digitrec_Xor_49U_35_4_26_out1[30];

         assign digitrec_gen000001_4_36_in18 = digitrec_Xor_49U_35_4_26_out1[31];

         assign digitrec_gen000001_4_36_in17 = digitrec_Xor_49U_35_4_26_out1[32];

         assign digitrec_gen000001_4_36_in16 = digitrec_Xor_49U_35_4_26_out1[33];

         assign digitrec_gen000001_4_36_in15 = digitrec_Xor_49U_35_4_26_out1[34];

         assign digitrec_gen000001_4_36_in14 = digitrec_Xor_49U_35_4_26_out1[35];

         assign digitrec_gen000001_4_36_in13 = digitrec_Xor_49U_35_4_26_out1[36];

         assign digitrec_gen000001_4_36_in12 = digitrec_Xor_49U_35_4_26_out1[37];

         assign digitrec_gen000001_4_36_in11 = digitrec_Xor_49U_35_4_26_out1[38];

         assign digitrec_gen000001_4_36_in10 = digitrec_Xor_49U_35_4_26_out1[39];

         assign digitrec_gen000001_4_36_in9 = digitrec_Xor_49U_35_4_26_out1[40];

         assign digitrec_gen000001_4_36_in8 = digitrec_Xor_49U_35_4_26_out1[41];

         assign digitrec_gen000001_4_36_in7 = digitrec_Xor_49U_35_4_26_out1[42];

         assign digitrec_gen000001_4_36_in6 = digitrec_Xor_49U_35_4_26_out1[43];

         assign digitrec_gen000001_4_36_in5 = digitrec_Xor_49U_35_4_26_out1[44];

         assign digitrec_gen000001_4_36_in4 = digitrec_Xor_49U_35_4_26_out1[45];

         assign digitrec_gen000001_4_36_in3 = digitrec_Xor_49U_35_4_26_out1[46];

         assign digitrec_gen000001_4_36_in2 = digitrec_Xor_49U_35_4_26_out1[47];

         assign digitrec_gen000001_4_36_in1 = digitrec_Xor_49U_35_4_26_out1[48];

         // resource: digitrec_gen000001_4  instance: digitrec_gen000001_4_36
         assign digitrec_gen000001_4_36_out1 = {5'b00000, digitrec_Xor_49U_35_4_26_out1[0]} + {5'b00000, digitrec_gen000001_4_36_in48} + {5'b00000, digitrec_gen000001_4_36_in47} + {5'b00000, digitrec_gen000001_4_36_in46} + {5'b00000, digitrec_gen000001_4_36_in45} + {5'b00000, digitrec_gen000001_4_36_in44} + {5'b00000, digitrec_gen000001_4_36_in43} + {5'b00000, digitrec_gen000001_4_36_in42} + {5'b00000
             , digitrec_gen000001_4_36_in41} + {5'b00000, digitrec_gen000001_4_36_in40} + {5'b00000, digitrec_gen000001_4_36_in39} + {5'b00000, digitrec_gen000001_4_36_in38} + {5'b00000, digitrec_gen000001_4_36_in37} + {5'b00000, digitrec_gen000001_4_36_in36} + {5'b00000, digitrec_gen000001_4_36_in35} + {5'b00000, digitrec_gen000001_4_36_in34} + {5'b00000, digitrec_gen000001_4_36_in33} + {5'b00000, digitrec_gen000001_4_36_in32} + {5'b00000, digitrec_gen000001_4_36_in31} + {5'b00000
             , digitrec_gen000001_4_36_in30} + {5'b00000, digitrec_gen000001_4_36_in29} + {5'b00000, digitrec_gen000001_4_36_in28} + {5'b00000, digitrec_gen000001_4_36_in27} + {5'b00000, digitrec_gen000001_4_36_in26} + {5'b00000, digitrec_gen000001_4_36_in25} + {5'b00000, digitrec_gen000001_4_36_in24} + {5'b00000, digitrec_gen000001_4_36_in23} + {5'b00000, digitrec_gen000001_4_36_in22} + {5'b00000, digitrec_gen000001_4_36_in21} + {5'b00000, digitrec_gen000001_4_36_in20} + {5'b00000
             , digitrec_gen000001_4_36_in19} + {5'b00000, digitrec_gen000001_4_36_in18} + {5'b00000, digitrec_gen000001_4_36_in17} + {5'b00000, digitrec_gen000001_4_36_in16} + {5'b00000, digitrec_gen000001_4_36_in15} + {5'b00000, digitrec_gen000001_4_36_in14} + {5'b00000, digitrec_gen000001_4_36_in13} + {5'b00000, digitrec_gen000001_4_36_in12} + {5'b00000, digitrec_gen000001_4_36_in11} + {5'b00000, digitrec_gen000001_4_36_in10} + {5'b00000, digitrec_gen000001_4_36_in9} + {5'b00000
             , digitrec_gen000001_4_36_in8} + {5'b00000, digitrec_gen000001_4_36_in7} + {5'b00000, digitrec_gen000001_4_36_in6} + {5'b00000, digitrec_gen000001_4_36_in5} + {5'b00000, digitrec_gen000001_4_36_in4} + {5'b00000, digitrec_gen000001_4_36_in3} + {5'b00000, digitrec_gen000001_4_36_in2} + {5'b00000, digitrec_gen000001_4_36_in1};

         assign digitrec_gen000001_4_37_in48 = digitrec_Xor_49U_35_4_27_out1[1];

         assign digitrec_gen000001_4_37_in47 = digitrec_Xor_49U_35_4_27_out1[2];

         assign digitrec_gen000001_4_37_in46 = digitrec_Xor_49U_35_4_27_out1[3];

         assign digitrec_gen000001_4_37_in45 = digitrec_Xor_49U_35_4_27_out1[4];

         assign digitrec_gen000001_4_37_in44 = digitrec_Xor_49U_35_4_27_out1[5];

         assign digitrec_gen000001_4_37_in43 = digitrec_Xor_49U_35_4_27_out1[6];

         assign digitrec_gen000001_4_37_in42 = digitrec_Xor_49U_35_4_27_out1[7];

         assign digitrec_gen000001_4_37_in41 = digitrec_Xor_49U_35_4_27_out1[8];

         assign digitrec_gen000001_4_37_in40 = digitrec_Xor_49U_35_4_27_out1[9];

         assign digitrec_gen000001_4_37_in39 = digitrec_Xor_49U_35_4_27_out1[10];

         assign digitrec_gen000001_4_37_in38 = digitrec_Xor_49U_35_4_27_out1[11];

         assign digitrec_gen000001_4_37_in37 = digitrec_Xor_49U_35_4_27_out1[12];

         assign digitrec_gen000001_4_37_in36 = digitrec_Xor_49U_35_4_27_out1[13];

         assign digitrec_gen000001_4_37_in35 = digitrec_Xor_49U_35_4_27_out1[14];

         assign digitrec_gen000001_4_37_in34 = digitrec_Xor_49U_35_4_27_out1[15];

         assign digitrec_gen000001_4_37_in33 = digitrec_Xor_49U_35_4_27_out1[16];

         assign digitrec_gen000001_4_37_in32 = digitrec_Xor_49U_35_4_27_out1[17];

         assign digitrec_gen000001_4_37_in31 = digitrec_Xor_49U_35_4_27_out1[18];

         assign digitrec_gen000001_4_37_in30 = digitrec_Xor_49U_35_4_27_out1[19];

         assign digitrec_gen000001_4_37_in29 = digitrec_Xor_49U_35_4_27_out1[20];

         assign digitrec_gen000001_4_37_in28 = digitrec_Xor_49U_35_4_27_out1[21];

         assign digitrec_gen000001_4_37_in27 = digitrec_Xor_49U_35_4_27_out1[22];

         assign digitrec_gen000001_4_37_in26 = digitrec_Xor_49U_35_4_27_out1[23];

         assign digitrec_gen000001_4_37_in25 = digitrec_Xor_49U_35_4_27_out1[24];

         assign digitrec_gen000001_4_37_in24 = digitrec_Xor_49U_35_4_27_out1[25];

         assign digitrec_gen000001_4_37_in23 = digitrec_Xor_49U_35_4_27_out1[26];

         assign digitrec_gen000001_4_37_in22 = digitrec_Xor_49U_35_4_27_out1[27];

         assign digitrec_gen000001_4_37_in21 = digitrec_Xor_49U_35_4_27_out1[28];

         assign digitrec_gen000001_4_37_in20 = digitrec_Xor_49U_35_4_27_out1[29];

         assign digitrec_gen000001_4_37_in19 = digitrec_Xor_49U_35_4_27_out1[30];

         assign digitrec_gen000001_4_37_in18 = digitrec_Xor_49U_35_4_27_out1[31];

         assign digitrec_gen000001_4_37_in17 = digitrec_Xor_49U_35_4_27_out1[32];

         assign digitrec_gen000001_4_37_in16 = digitrec_Xor_49U_35_4_27_out1[33];

         assign digitrec_gen000001_4_37_in15 = digitrec_Xor_49U_35_4_27_out1[34];

         assign digitrec_gen000001_4_37_in14 = digitrec_Xor_49U_35_4_27_out1[35];

         assign digitrec_gen000001_4_37_in13 = digitrec_Xor_49U_35_4_27_out1[36];

         assign digitrec_gen000001_4_37_in12 = digitrec_Xor_49U_35_4_27_out1[37];

         assign digitrec_gen000001_4_37_in11 = digitrec_Xor_49U_35_4_27_out1[38];

         assign digitrec_gen000001_4_37_in10 = digitrec_Xor_49U_35_4_27_out1[39];

         assign digitrec_gen000001_4_37_in9 = digitrec_Xor_49U_35_4_27_out1[40];

         assign digitrec_gen000001_4_37_in8 = digitrec_Xor_49U_35_4_27_out1[41];

         assign digitrec_gen000001_4_37_in7 = digitrec_Xor_49U_35_4_27_out1[42];

         assign digitrec_gen000001_4_37_in6 = digitrec_Xor_49U_35_4_27_out1[43];

         assign digitrec_gen000001_4_37_in5 = digitrec_Xor_49U_35_4_27_out1[44];

         assign digitrec_gen000001_4_37_in4 = digitrec_Xor_49U_35_4_27_out1[45];

         assign digitrec_gen000001_4_37_in3 = digitrec_Xor_49U_35_4_27_out1[46];

         assign digitrec_gen000001_4_37_in2 = digitrec_Xor_49U_35_4_27_out1[47];

         assign digitrec_gen000001_4_37_in1 = digitrec_Xor_49U_35_4_27_out1[48];

         // resource: digitrec_gen000001_4  instance: digitrec_gen000001_4_37
         assign digitrec_gen000001_4_37_out1 = {5'b00000, digitrec_Xor_49U_35_4_27_out1[0]} + {5'b00000, digitrec_gen000001_4_37_in48} + {5'b00000, digitrec_gen000001_4_37_in47} + {5'b00000, digitrec_gen000001_4_37_in46} + {5'b00000, digitrec_gen000001_4_37_in45} + {5'b00000, digitrec_gen000001_4_37_in44} + {5'b00000, digitrec_gen000001_4_37_in43} + {5'b00000, digitrec_gen000001_4_37_in42} + {5'b00000
             , digitrec_gen000001_4_37_in41} + {5'b00000, digitrec_gen000001_4_37_in40} + {5'b00000, digitrec_gen000001_4_37_in39} + {5'b00000, digitrec_gen000001_4_37_in38} + {5'b00000, digitrec_gen000001_4_37_in37} + {5'b00000, digitrec_gen000001_4_37_in36} + {5'b00000, digitrec_gen000001_4_37_in35} + {5'b00000, digitrec_gen000001_4_37_in34} + {5'b00000, digitrec_gen000001_4_37_in33} + {5'b00000, digitrec_gen000001_4_37_in32} + {5'b00000, digitrec_gen000001_4_37_in31} + {5'b00000
             , digitrec_gen000001_4_37_in30} + {5'b00000, digitrec_gen000001_4_37_in29} + {5'b00000, digitrec_gen000001_4_37_in28} + {5'b00000, digitrec_gen000001_4_37_in27} + {5'b00000, digitrec_gen000001_4_37_in26} + {5'b00000, digitrec_gen000001_4_37_in25} + {5'b00000, digitrec_gen000001_4_37_in24} + {5'b00000, digitrec_gen000001_4_37_in23} + {5'b00000, digitrec_gen000001_4_37_in22} + {5'b00000, digitrec_gen000001_4_37_in21} + {5'b00000, digitrec_gen000001_4_37_in20} + {5'b00000
             , digitrec_gen000001_4_37_in19} + {5'b00000, digitrec_gen000001_4_37_in18} + {5'b00000, digitrec_gen000001_4_37_in17} + {5'b00000, digitrec_gen000001_4_37_in16} + {5'b00000, digitrec_gen000001_4_37_in15} + {5'b00000, digitrec_gen000001_4_37_in14} + {5'b00000, digitrec_gen000001_4_37_in13} + {5'b00000, digitrec_gen000001_4_37_in12} + {5'b00000, digitrec_gen000001_4_37_in11} + {5'b00000, digitrec_gen000001_4_37_in10} + {5'b00000, digitrec_gen000001_4_37_in9} + {5'b00000
             , digitrec_gen000001_4_37_in8} + {5'b00000, digitrec_gen000001_4_37_in7} + {5'b00000, digitrec_gen000001_4_37_in6} + {5'b00000, digitrec_gen000001_4_37_in5} + {5'b00000, digitrec_gen000001_4_37_in4} + {5'b00000, digitrec_gen000001_4_37_in3} + {5'b00000, digitrec_gen000001_4_37_in2} + {5'b00000, digitrec_gen000001_4_37_in1};

         // resource: digitrec_LessThan_1U_26_4  instance: digitrec_LessThan_1U_26_4_38
         assign digitrec_LessThan_1U_26_4_38_out1 = digitrec_gen000001_4_28_out1 < knn_set_0_if_2_dout_wire;

         // resource: digitrec_LessThan_1U_26_4  instance: digitrec_LessThan_1U_26_4_39
         assign digitrec_LessThan_1U_26_4_39_out1 = digitrec_gen000001_4_29_out1 < knn_set_1_if_2_dout_wire;

         // resource: digitrec_LessThan_1U_26_4  instance: digitrec_LessThan_1U_26_4_40
         assign digitrec_LessThan_1U_26_4_40_out1 = digitrec_gen000001_4_30_out1 < knn_set_2_if_2_dout_wire;

         // resource: digitrec_LessThan_1U_26_4  instance: digitrec_LessThan_1U_26_4_41
         assign digitrec_LessThan_1U_26_4_41_out1 = digitrec_gen000001_4_31_out1 < knn_set_3_if_2_dout_wire;

         // resource: digitrec_LessThan_1U_26_4  instance: digitrec_LessThan_1U_26_4_42
         assign digitrec_LessThan_1U_26_4_42_out1 = digitrec_gen000001_4_32_out1 < knn_set_4_if_2_dout_wire;

         // resource: digitrec_LessThan_1U_26_4  instance: digitrec_LessThan_1U_26_4_43
         assign digitrec_LessThan_1U_26_4_43_out1 = digitrec_gen000001_4_33_out1 < knn_set_5_if_2_dout_wire;

         // resource: digitrec_LessThan_1U_26_4  instance: digitrec_LessThan_1U_26_4_44
         assign digitrec_LessThan_1U_26_4_44_out1 = digitrec_gen000001_4_34_out1 < knn_set_6_if_2_dout_wire;

         // resource: digitrec_LessThan_1U_26_4  instance: digitrec_LessThan_1U_26_4_45
         assign digitrec_LessThan_1U_26_4_45_out1 = digitrec_gen000001_4_35_out1 < knn_set_7_if_2_dout_wire;

         // resource: digitrec_LessThan_1U_26_4  instance: digitrec_LessThan_1U_26_4_46
         assign digitrec_LessThan_1U_26_4_46_out1 = digitrec_gen000001_4_36_out1 < knn_set_8_if_2_dout_wire;

         // resource: digitrec_LessThan_1U_26_4  instance: digitrec_LessThan_1U_26_4_47
         assign digitrec_LessThan_1U_26_4_47_out1 = digitrec_gen000001_4_37_out1 < knn_set_9_if_2_dout_wire;

         // resource: digitrec_LtiLLs12_4  instance: digitrec_LtiLLs12_4_48
         assign digitrec_LtiLLs12_4_48_out1 = s_reg_42[11] ^ s_reg_42 < 12'd1800;

         // resource: digitrec_Equal_1U_24_4  instance: digitrec_Equal_1U_24_4_49
         assign digitrec_Equal_1U_24_4_49_out1 = mem_resp_tag_i == {{ 5 {s_reg_53[4]}}, s_reg_53};

         // resource: digitrec_And_1U_3_4  instance: digitrec_And_1U_3_4_50
         assign digitrec_And_1U_3_4_50_out1 = digitrec_Equal_1U_24_4_49_out1 & mem_resp_valid_i;

         // resource: digitrec_Equal_1U_24_4  instance: digitrec_Equal_1U_24_4_51
         assign digitrec_Equal_1U_24_4_51_out1 = mem_resp_tag_i == {{ 5 {s_reg_54_slice[4]}}, s_reg_54_slice};

         // resource: digitrec_And_1U_3_4  instance: digitrec_And_1U_3_4_52
         assign digitrec_And_1U_3_4_52_out1 = digitrec_Equal_1U_24_4_51_out1 & mem_resp_valid_i;

         // resource: digitrec_Add2i1s5_4  instance: digitrec_Add2i1s5_4_53
         assign digitrec_Add2i1s5_4_53_out1 = s_reg_53 + 5'd01;

         // resource: digitrec_Lti10s5_4  instance: digitrec_Lti10s5_4_54
         assign digitrec_Lti10s5_4_54_out1 = s_reg_55[4] ^ s_reg_55 < 5'd10;

         // resource: mux_5bx2i
         always @(gs_ctrl78 or s_reg_56)
          begin :drive_digitrec_Add2i1s5_4_55_in1
            if (gs_ctrl78) begin
               digitrec_Add2i1s5_4_55_in1 = s_reg_56;
            end
            else begin
               digitrec_Add2i1s5_4_55_in1 = 5'd00;
            end
         end

         // resource: digitrec_Add2i1s5_4  instance: digitrec_Add2i1s5_4_55
         assign digitrec_Add2i1s5_4_55_out1 = digitrec_Add2i1s5_4_55_in1 + 5'd01;

         // resource: digitrec_Add2i1s12_4  instance: digitrec_Add2i1s12_4_56
         assign digitrec_Add2i1s12_4_56_out1 = s_reg_49 + 12'd0001;

         // resource: digitrec_Lti10s5_4  instance: digitrec_Lti10s5_4_57
         assign digitrec_Lti10s5_4_57_out1 = s_reg_56[4] ^ s_reg_56 < 5'd10;

         // resource: mux_4bx6i
         always @(gs_ctrl79 or s_reg_56[3:0] or digitrec_N_Mux_4_2_29_4_63_out1 or s_reg_66 or s_reg_70[3:0] or s_reg_71[3:0])
          begin :drive_digitrec_RAM_1800X49_1_kscore_63_in1
            case (gs_ctrl79) 

               3'd1: begin
                  digitrec_RAM_1800X49_1_kscore_63_in1_slice = s_reg_56[3:0];
               end
               
               3'd2: begin
                  digitrec_RAM_1800X49_1_kscore_63_in1_slice = digitrec_N_Mux_4_2_29_4_63_out1;
               end
               
               3'd3: begin
                  digitrec_RAM_1800X49_1_kscore_63_in1_slice = s_reg_66;
               end
               
               3'd4: begin
                  digitrec_RAM_1800X49_1_kscore_63_in1_slice = s_reg_70[3:0];
               end
               
               3'd5: begin
                  digitrec_RAM_1800X49_1_kscore_63_in1_slice = s_reg_71[3:0];
               end
               
               default: begin
                  digitrec_RAM_1800X49_1_kscore_63_in1_slice = 4'd00;
               end
               
            endcase

         end

         // resource: mux_32bx2i
         always @(gs_ctrl43 or digitrec_Add2i1s32_4_78_out1)
          begin :drive_digitrec_RAM_1800X49_1_kscore_63_DIN
            if (gs_ctrl43) begin
               digitrec_RAM_1800X49_1_kscore_63_DIN_slice = digitrec_Add2i1s32_4_78_out1;
            end
            else begin
               digitrec_RAM_1800X49_1_kscore_63_DIN_slice = 32'd0000000000;
            end
         end

         // resource: mux_1bx2i
         always @(gs_ctrl81 or digitrec_LtiLLs12_4_48_out1 or digitrec_Lti10s5_4_57_out1 or s_reg_63 or digitrec_Lti10s5_4_82_out1)
          begin :drive_digitrec_RAM_1800X49_1_kscore_63_CE
            case (gs_ctrl81) 

               3'd1: begin
                  if (digitrec_LtiLLs12_4_48_out1) begin
                     digitrec_RAM_1800X49_1_kscore_63_CE = 1'b0;
                  end
                  else begin
                     digitrec_RAM_1800X49_1_kscore_63_CE = 1'b1;
                  end
               end
               
               3'd2: begin
                  if (digitrec_Lti10s5_4_57_out1) begin
                     digitrec_RAM_1800X49_1_kscore_63_CE = 1'b1;
                  end
                  else begin
                     digitrec_RAM_1800X49_1_kscore_63_CE = 1'b0;
                  end
               end
               
               3'd3: begin
                  digitrec_RAM_1800X49_1_kscore_63_CE = 1'b1;
               end
               
               3'd4: begin
                  if (s_reg_63) begin
                     digitrec_RAM_1800X49_1_kscore_63_CE = 1'b0;
                  end
                  else begin
                     digitrec_RAM_1800X49_1_kscore_63_CE = 1'b1;
                  end
               end
               
               3'd5: begin
                  if (digitrec_Lti10s5_4_82_out1) begin
                     digitrec_RAM_1800X49_1_kscore_63_CE = 1'b1;
                  end
                  else begin
                     digitrec_RAM_1800X49_1_kscore_63_CE = 1'b0;
                  end
               end
               
               default: begin
                  digitrec_RAM_1800X49_1_kscore_63_CE = 1'b0;
               end
               
            endcase

         end

         // resource: mux_1bx2i
         always @(gs_ctrl82 or digitrec_LtiLLs12_4_48_out1 or digitrec_Lti10s5_4_57_out1 or s_reg_63)
          begin :drive_digitrec_RAM_1800X49_1_kscore_63_RW
            case (gs_ctrl82) 

               2'd1: begin
                  if (digitrec_LtiLLs12_4_48_out1) begin
                     digitrec_RAM_1800X49_1_kscore_63_RW = 1'b0;
                  end
                  else begin
                     digitrec_RAM_1800X49_1_kscore_63_RW = 1'b1;
                  end
               end
               
               2'd2: begin
                  if (digitrec_Lti10s5_4_57_out1) begin
                     digitrec_RAM_1800X49_1_kscore_63_RW = 1'b1;
                  end
                  else begin
                     digitrec_RAM_1800X49_1_kscore_63_RW = 1'b0;
                  end
               end
               
               2'd3: begin
                  if (s_reg_63) begin
                     digitrec_RAM_1800X49_1_kscore_63_RW = 1'b0;
                  end
                  else begin
                     digitrec_RAM_1800X49_1_kscore_63_RW = 1'b1;
                  end
               end
               
               default: begin
                  digitrec_RAM_1800X49_1_kscore_63_RW = 1'b0;
               end
               
            endcase

         end

         // resource: digitrec_LtiLLs12_4  instance: digitrec_LtiLLs12_4_58
         assign digitrec_LtiLLs12_4_58_out1 = s_reg_52[11] ^ s_reg_52 < 12'd1800;

         // resource: mux_5bx2i
         always @(gs_ctrl43 or s_reg_62)
          begin :drive_digitrec_Add2i1s5_4_59_in1
            if (gs_ctrl43) begin
               digitrec_Add2i1s5_4_59_in1 = s_reg_62;
            end
            else begin
               digitrec_Add2i1s5_4_59_in1 = 5'd00;
            end
         end

         // resource: digitrec_Add2i1s5_4  instance: digitrec_Add2i1s5_4_59
         assign digitrec_Add2i1s5_4_59_out1 = digitrec_Add2i1s5_4_59_in1 + 5'd01;

         // resource: digitrec_Lti10s5_4  instance: digitrec_Lti10s5_4_60
         assign digitrec_Lti10s5_4_60_out1 = s_reg_62[4] ^ s_reg_62 < 5'd10;

         // resource: [0]::[0]::knn_set.knn_vote
         always @(s_reg_61 or knn_set_0_if_2_dout_wire or knn_set_1_if_2_dout_wire or knn_set_2_if_2_dout_wire or knn_set_3_if_2_dout_wire or knn_set_4_if_2_dout_wire or knn_set_5_if_2_dout_wire or knn_set_6_if_2_dout_wire or knn_set_7_if_2_dout_wire or knn_set_8_if_2_dout_wire or knn_set_9_if_2_dout_wire)
          begin :digitrec_N_Mux_6_9_37_4_61
            case (s_reg_61) 

               4'd00: begin
                  digitrec_N_Mux_6_9_37_4_61_out1 = knn_set_0_if_2_dout_wire;
               end
               
               4'd01: begin
                  digitrec_N_Mux_6_9_37_4_61_out1 = knn_set_1_if_2_dout_wire;
               end
               
               4'd02: begin
                  digitrec_N_Mux_6_9_37_4_61_out1 = knn_set_2_if_2_dout_wire;
               end
               
               4'd03: begin
                  digitrec_N_Mux_6_9_37_4_61_out1 = knn_set_3_if_2_dout_wire;
               end
               
               4'd04: begin
                  digitrec_N_Mux_6_9_37_4_61_out1 = knn_set_4_if_2_dout_wire;
               end
               
               4'd05: begin
                  digitrec_N_Mux_6_9_37_4_61_out1 = knn_set_5_if_2_dout_wire;
               end
               
               4'd06: begin
                  digitrec_N_Mux_6_9_37_4_61_out1 = knn_set_6_if_2_dout_wire;
               end
               
               4'd07: begin
                  digitrec_N_Mux_6_9_37_4_61_out1 = knn_set_7_if_2_dout_wire;
               end
               
               4'd08: begin
                  digitrec_N_Mux_6_9_37_4_61_out1 = knn_set_8_if_2_dout_wire;
               end
               
               4'd09: begin
                  digitrec_N_Mux_6_9_37_4_61_out1 = knn_set_9_if_2_dout_wire;
               end
               
            endcase

         end

         // resource: digitrec_LessThan_1U_26_4  instance: digitrec_LessThan_1U_26_4_62
         assign digitrec_LessThan_1U_26_4_62_out1 = digitrec_N_Mux_6_9_37_4_61_out1 < s_reg_57;

         // resource: digitrec_N_Mux_4_2_29_4
         always @(digitrec_LessThan_1U_26_4_62_out1 or s_reg_60[3:0] or s_reg_58)
          begin :digitrec_N_Mux_4_2_29_4_63
            if (digitrec_LessThan_1U_26_4_62_out1) begin
               digitrec_N_Mux_4_2_29_4_63_out1 = s_reg_60[3:0];
            end
            else begin
               digitrec_N_Mux_4_2_29_4_63_out1 = s_reg_58;
            end
         end

         // resource: [0]::knn_set  instance: digitrec_OrReduction_1U_1_4_64
         assign digitrec_OrReduction_1U_1_4_64_out1 = |digitrec_N_Mux_4_2_29_4_63_out1;

         // resource: [0]::[0]::knn_set.knn_vote
         always @(s_reg_64 or knn_set_0_if_2_dout_wire or knn_set_1_if_2_dout_wire or knn_set_2_if_2_dout_wire or knn_set_3_if_2_dout_wire or knn_set_4_if_2_dout_wire or knn_set_5_if_2_dout_wire or knn_set_6_if_2_dout_wire or knn_set_7_if_2_dout_wire or knn_set_8_if_2_dout_wire or knn_set_9_if_2_dout_wire)
          begin :digitrec_N_Mux_6_9_37_4_66
            case (s_reg_64) 

               4'd00: begin
                  digitrec_N_Mux_6_9_37_4_66_out1 = knn_set_0_if_2_dout_wire;
               end
               
               4'd01: begin
                  digitrec_N_Mux_6_9_37_4_66_out1 = knn_set_1_if_2_dout_wire;
               end
               
               4'd02: begin
                  digitrec_N_Mux_6_9_37_4_66_out1 = knn_set_2_if_2_dout_wire;
               end
               
               4'd03: begin
                  digitrec_N_Mux_6_9_37_4_66_out1 = knn_set_3_if_2_dout_wire;
               end
               
               4'd04: begin
                  digitrec_N_Mux_6_9_37_4_66_out1 = knn_set_4_if_2_dout_wire;
               end
               
               4'd05: begin
                  digitrec_N_Mux_6_9_37_4_66_out1 = knn_set_5_if_2_dout_wire;
               end
               
               4'd06: begin
                  digitrec_N_Mux_6_9_37_4_66_out1 = knn_set_6_if_2_dout_wire;
               end
               
               4'd07: begin
                  digitrec_N_Mux_6_9_37_4_66_out1 = knn_set_7_if_2_dout_wire;
               end
               
               4'd08: begin
                  digitrec_N_Mux_6_9_37_4_66_out1 = knn_set_8_if_2_dout_wire;
               end
               
               4'd09: begin
                  digitrec_N_Mux_6_9_37_4_66_out1 = knn_set_9_if_2_dout_wire;
               end
               
            endcase

         end

         // resource: digitrec_N_Mux_6_2_30_4
         always @(s_reg_65 or digitrec_N_Mux_6_9_37_4_66_out1 or s_reg_57)
          begin :digitrec_N_Mux_6_2_30_4_67
            if (s_reg_65) begin
               digitrec_N_Mux_6_2_30_4_67_out1 = digitrec_N_Mux_6_9_37_4_66_out1;
            end
            else begin
               digitrec_N_Mux_6_2_30_4_67_out1 = s_reg_57;
            end
         end

         // resource: digitrec_Add2i1s32_4  instance: digitrec_Add2i1s32_4_78
         assign digitrec_Add2i1s32_4_78_out1 = digitrec_RAM_1800X49_1_kscore_63_out1[31:0] + 32'd0000000001;

         // resource: digitrec_Add2i1s5_4  instance: digitrec_Add2i1s5_4_79
         assign digitrec_Add2i1s5_4_79_out1 = s_reg_70 + 5'd01;

         // resource: digitrec_GreaterThan_1U_32_4  instance: digitrec_GreaterThan_1U_32_4_80
         assign digitrec_GreaterThan_1U_32_4_80_out1 = digitrec_RAM_1800X49_1_kscore_63_out1[31] ^ (s_reg_69[31] ^ digitrec_RAM_1800X49_1_kscore_63_out1[31:0] > s_reg_69);

         // resource: digitrec_N_Mux_4_2_29_4
         always @(digitrec_GreaterThan_1U_32_4_80_out1 or s_reg_70[3:0] or s_reg_68)
          begin :digitrec_N_Mux_4_2_29_4_81
            if (digitrec_GreaterThan_1U_32_4_80_out1) begin
               digitrec_N_Mux_4_2_29_4_81_out1 = s_reg_70[3:0];
            end
            else begin
               digitrec_N_Mux_4_2_29_4_81_out1 = s_reg_68;
            end
         end

         // resource: digitrec_Lti10s5_4  instance: digitrec_Lti10s5_4_82
         assign digitrec_Lti10s5_4_82_out1 = s_reg_71[4] ^ s_reg_71 < 5'd10;

         // resource: digitrec_N_Mux_32_2_34_4
         always @(s_reg_72 or digitrec_RAM_1800X49_1_kscore_63_out1[31:0] or s_reg_69)
          begin :digitrec_N_Mux_32_2_34_4_83
            if (s_reg_72) begin
               digitrec_N_Mux_32_2_34_4_83_out1 = digitrec_RAM_1800X49_1_kscore_63_out1[31:0];
            end
            else begin
               digitrec_N_Mux_32_2_34_4_83_out1 = s_reg_69;
            end
         end

         // resource: mux_5bx2i
         // resource: regr_5b
         always @(posedge clk)
          begin :drive_sreg_1
            case (global_state) 

               5'd05: begin
                  if (digitrec_Lti10s5_4_57_out1) begin
                  end
                  else begin
                     sreg_1 <= 5'd00;
                  end
               end
               
               5'd07: begin
                  if (s_reg_63) begin
                     sreg_1 <= s_reg_62;
                  end
               end
               
            endcase

         end

         // resource: regr_5b
         always @(posedge clk)
          begin :drive_global_state
            if (rst == 1'b0) begin
               global_state <= 5'd00;
            end
            else begin
               global_state <= global_state_next;
            end
         end

         // resource: mux_5bx13i
         always @(global_state or core_cmd_valid_i or s_reg_43 or s_reg_45 or digitrec_Lti10s5_4_2_out1 or digitrec_LtiLLs12_4_48_out1 or digitrec_Lti10s5_4_57_out1 or s_reg_63 or digitrec_Lti10s5_4_82_out1 or mem_req_ready_i or digitrec_And_1U_3_4_50_out1 or digitrec_And_1U_3_4_52_out1 or digitrec_Lti10s5_4_54_out1 or digitrec_LtiLLs12_4_58_out1 or core_resp_ready_i)
          begin :drive_global_state_next
            case (global_state) 

               5'd00, 5'd01, 5'd17: begin
                  if (core_cmd_valid_i) begin
                     global_state_next = 5'd02;
                  end
                  else begin
                     global_state_next = 5'd01;
                  end
               end
               
               5'd02: begin
                  case (s_reg_43) 

                     7'd001: begin
                        if (digitrec_Lti10s5_4_2_out1) begin
                           global_state_next = global_state + 5'd01;
                        end
                        else begin
                           global_state_next = 5'd04;
                        end
                     end
                     
                     7'd002: begin
                        global_state_next = 5'd11;
                     end
                     
                     default: begin
                        if (s_reg_45) begin
                           global_state_next = 5'd15;
                        end
                        else begin
                           global_state_next = 5'd16;
                        end
                     end
                     
                  endcase

               end
               
               5'd03: begin
                  if (digitrec_Lti10s5_4_2_out1) begin
                     global_state_next = 5'd03;
                  end
                  else begin
                     global_state_next = global_state + 5'd01;
                  end
               end
               
               5'd04: begin
                  if (digitrec_LtiLLs12_4_48_out1) begin
                     global_state_next = 5'd04;
                  end
                  else begin
                     global_state_next = global_state + 5'd01;
                  end
               end
               
               5'd05: begin
                  if (digitrec_Lti10s5_4_57_out1) begin
                     global_state_next = 5'd05;
                  end
                  else begin
                     global_state_next = global_state + 5'd01;
                  end
               end
               
               5'd07: begin
                  if (s_reg_63) begin
                     global_state_next = 5'd06;
                  end
                  else begin
                     global_state_next = global_state + 5'd01;
                  end
               end
               
               5'd10: begin
                  if (digitrec_Lti10s5_4_82_out1) begin
                     global_state_next = 5'd09;
                  end
                  else begin
                     if (s_reg_45) begin
                        global_state_next = 5'd15;
                     end
                     else begin
                        global_state_next = 5'd16;
                     end
                  end
               end
               
               5'd11: begin
                  if (mem_req_ready_i) begin
                     if (digitrec_And_1U_3_4_50_out1) begin
                        global_state_next = 5'd13;
                     end
                     else begin
                        global_state_next = global_state + 5'd01;
                     end
                  end
                  else begin
                     global_state_next = 5'd11;
                  end
               end
               
               5'd12: begin
                  if (digitrec_And_1U_3_4_52_out1) begin
                     global_state_next = global_state + 5'd01;
                  end
                  else begin
                     global_state_next = 5'd12;
                  end
               end
               
               5'd13: begin
                  if (digitrec_Lti10s5_4_54_out1) begin
                     global_state_next = 5'd11;
                  end
                  else begin
                     global_state_next = global_state + 5'd01;
                  end
               end
               
               5'd14: begin
                  if (digitrec_LtiLLs12_4_58_out1) begin
                     global_state_next = 5'd11;
                  end
                  else begin
                     if (s_reg_45) begin
                        global_state_next = global_state + 5'd01;
                     end
                     else begin
                        global_state_next = 5'd16;
                     end
                  end
               end
               
               5'd15: begin
                  if (core_resp_ready_i) begin
                     global_state_next = global_state + 5'd01;
                  end
                  else begin
                     global_state_next = 5'd15;
                  end
               end
               
               default: begin
                  global_state_next = global_state + 5'd01;
               end
               
            endcase

         end

         // resource: mux_1bx2i
         // resource: regr_1b
         always @(posedge clk)
          begin :drive_gs_ctrl0
            if (rst == 1'b0) begin
               gs_ctrl0 <= 1'b1;
            end
            else begin
               case (global_state_next) 

                  5'd00, 5'd01, 5'd17: begin
                     gs_ctrl0 <= 1'b1;
                  end
                  
                  default: begin
                     gs_ctrl0 <= 1'b0;
                  end
                  
               endcase

            end
         end

         // resource: mux_2bx3i
         // resource: regr_2b
         always @(posedge clk)
          begin :drive_gs_ctrl1
            if (rst == 1'b0) begin
               gs_ctrl1 <= 2'd0;
            end
            else begin
               case (global_state_next) 

                  5'd02: begin
                     gs_ctrl1 <= 2'd1;
                  end
                  
                  5'd03: begin
                     gs_ctrl1 <= 2'd2;
                  end
                  
                  default: begin
                     gs_ctrl1 <= 2'd0;
                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i
         // resource: regr_1b
         always @(posedge clk)
          begin :drive_gs_ctrl2
            if (rst == 1'b0) begin
               gs_ctrl2 <= 1'b0;
            end
            else begin
               case (global_state_next) 

                  5'd04: begin
                     gs_ctrl2 <= 1'b1;
                  end
                  
                  default: begin
                     gs_ctrl2 <= 1'b0;
                  end
                  
               endcase

            end
         end

         // resource: mux_2bx3i
         // resource: regr_2b
         always @(posedge clk)
          begin :drive_gs_ctrl30
            if (rst == 1'b0) begin
               gs_ctrl30 <= 2'd0;
            end
            else begin
               case (global_state_next) 

                  5'd02: begin
                     gs_ctrl30 <= 2'd1;
                  end
                  
                  5'd14: begin
                     gs_ctrl30 <= 2'd2;
                  end
                  
                  default: begin
                     gs_ctrl30 <= 2'd0;
                  end
                  
               endcase

            end
         end

         // resource: mux_2bx3i
         // resource: regr_2b
         always @(posedge clk)
          begin :drive_gs_ctrl31
            if (rst == 1'b0) begin
               gs_ctrl31 <= 2'd0;
            end
            else begin
               case (global_state_next) 

                  5'd11: begin
                     gs_ctrl31 <= 2'd1;
                  end
                  
                  5'd12: begin
                     gs_ctrl31 <= 2'd2;
                  end
                  
                  default: begin
                     gs_ctrl31 <= 2'd0;
                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i
         // resource: regr_1b
         always @(posedge clk)
          begin :drive_gs_ctrl32
            if (rst == 1'b0) begin
               gs_ctrl32 <= 1'b0;
            end
            else begin
               case (global_state_next) 

                  5'd03: begin
                     gs_ctrl32 <= 1'b1;
                  end
                  
                  default: begin
                     gs_ctrl32 <= 1'b0;
                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i
         // resource: regr_1b
         always @(posedge clk)
          begin :drive_gs_ctrl43
            if (rst == 1'b0) begin
               gs_ctrl43 <= 1'b0;
            end
            else begin
               case (global_state_next) 

                  5'd07: begin
                     gs_ctrl43 <= 1'b1;
                  end
                  
                  default: begin
                     gs_ctrl43 <= 1'b0;
                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i
         // resource: regr_1b
         always @(posedge clk)
          begin :drive_gs_ctrl44
            if (rst == 1'b0) begin
               gs_ctrl44 <= 1'b0;
            end
            else begin
               case (global_state_next) 

                  5'd03, 5'd04: begin
                     gs_ctrl44 <= 1'b1;
                  end
                  
                  default: begin
                     gs_ctrl44 <= 1'b0;
                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i
         // resource: regr_1b
         always @(posedge clk)
          begin :drive_gs_ctrl45
            if (rst == 1'b0) begin
               gs_ctrl45 <= 1'b0;
            end
            else begin
               case (global_state_next) 

                  5'd13: begin
                     gs_ctrl45 <= 1'b1;
                  end
                  
                  default: begin
                     gs_ctrl45 <= 1'b0;
                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i
         // resource: regr_1b
         always @(posedge clk)
          begin :drive_gs_ctrl46
            if (rst == 1'b0) begin
               gs_ctrl46 <= 1'b0;
            end
            else begin
               case (global_state_next) 

                  5'd13, 5'd14: begin
                     gs_ctrl46 <= 1'b1;
                  end
                  
                  default: begin
                     gs_ctrl46 <= 1'b0;
                  end
                  
               endcase

            end
         end

         // resource: mux_2bx3i
         // resource: regr_2b
         always @(posedge clk)
          begin :drive_gs_ctrl47
            if (rst == 1'b0) begin
               gs_ctrl47 <= 2'd0;
            end
            else begin
               case (global_state_next) 

                  5'd13: begin
                     gs_ctrl47 <= 2'd1;
                  end
                  
                  5'd14: begin
                     gs_ctrl47 <= 2'd2;
                  end
                  
                  default: begin
                     gs_ctrl47 <= 2'd0;
                  end
                  
               endcase

            end
         end

         // resource: mux_2bx3i
         // resource: regr_2b
         always @(posedge clk)
          begin :drive_gs_ctrl48
            if (rst == 1'b0) begin
               gs_ctrl48 <= 2'd0;
            end
            else begin
               case (global_state_next) 

                  5'd03, 5'd04: begin
                     gs_ctrl48 <= 2'd1;
                  end
                  
                  5'd13: begin
                     gs_ctrl48 <= 2'd2;
                  end
                  
                  default: begin
                     gs_ctrl48 <= 2'd0;
                  end
                  
               endcase

            end
         end

         // resource: mux_3bx5i
         // resource: regr_3b
         always @(posedge clk)
          begin :drive_gs_ctrl49
            if (rst == 1'b0) begin
               gs_ctrl49 <= 3'd0;
            end
            else begin
               case (global_state_next) 

                  5'd02: begin
                     gs_ctrl49 <= 3'd1;
                  end
                  
                  5'd03: begin
                     gs_ctrl49 <= 3'd2;
                  end
                  
                  5'd04: begin
                     gs_ctrl49 <= 3'd3;
                  end
                  
                  5'd13: begin
                     gs_ctrl49 <= 3'd4;
                  end
                  
                  default: begin
                     gs_ctrl49 <= 3'd0;
                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i
         // resource: regr_1b
         always @(posedge clk)
          begin :drive_gs_ctrl78
            if (rst == 1'b0) begin
               gs_ctrl78 <= 1'b0;
            end
            else begin
               case (global_state_next) 

                  5'd05: begin
                     gs_ctrl78 <= 1'b1;
                  end
                  
                  default: begin
                     gs_ctrl78 <= 1'b0;
                  end
                  
               endcase

            end
         end

         // resource: mux_3bx6i
         // resource: regr_3b
         always @(posedge clk)
          begin :drive_gs_ctrl79
            if (rst == 1'b0) begin
               gs_ctrl79 <= 3'd0;
            end
            else begin
               case (global_state_next) 

                  5'd05: begin
                     gs_ctrl79 <= 3'd1;
                  end
                  
                  5'd06: begin
                     gs_ctrl79 <= 3'd2;
                  end
                  
                  5'd07: begin
                     gs_ctrl79 <= 3'd3;
                  end
                  
                  5'd09: begin
                     gs_ctrl79 <= 3'd4;
                  end
                  
                  5'd10: begin
                     gs_ctrl79 <= 3'd5;
                  end
                  
                  default: begin
                     gs_ctrl79 <= 3'd0;
                  end
                  
               endcase

            end
         end

         // resource: mux_3bx6i
         // resource: regr_3b
         always @(posedge clk)
          begin :drive_gs_ctrl81
            if (rst == 1'b0) begin
               gs_ctrl81 <= 3'd0;
            end
            else begin
               case (global_state_next) 

                  5'd04: begin
                     gs_ctrl81 <= 3'd1;
                  end
                  
                  5'd05: begin
                     gs_ctrl81 <= 3'd2;
                  end
                  
                  5'd06, 5'd08, 5'd09: begin
                     gs_ctrl81 <= 3'd3;
                  end
                  
                  5'd07: begin
                     gs_ctrl81 <= 3'd4;
                  end
                  
                  5'd10: begin
                     gs_ctrl81 <= 3'd5;
                  end
                  
                  default: begin
                     gs_ctrl81 <= 3'd0;
                  end
                  
               endcase

            end
         end

         // resource: mux_2bx4i
         // resource: regr_2b
         always @(posedge clk)
          begin :drive_gs_ctrl82
            if (rst == 1'b0) begin
               gs_ctrl82 <= 2'd0;
            end
            else begin
               case (global_state_next) 

                  5'd04: begin
                     gs_ctrl82 <= 2'd1;
                  end
                  
                  5'd05: begin
                     gs_ctrl82 <= 2'd2;
                  end
                  
                  5'd07: begin
                     gs_ctrl82 <= 2'd3;
                  end
                  
                  default: begin
                     gs_ctrl82 <= 2'd0;
                  end
                  
               endcase

            end
         end

         assign s_reg_60 = sreg_1;

         assign s_reg_61 = sreg_1[3:0];

         assign digitrec_RAM_1800X49_1_kscore_63_DIN = {{ 17 {digitrec_RAM_1800X49_1_kscore_63_DIN_slice[31]}}, digitrec_RAM_1800X49_1_kscore_63_DIN_slice};

         assign digitrec_RAM_1800X49_1_kscore_63_in1 = {7'b0000000, digitrec_RAM_1800X49_1_kscore_63_in1_slice};

         assign cc_interrupt_o = 1'd0;

         assign core_resp_data_o = {60'b000000000000000000000000000000000000000000000000000000000000, core_resp_data_o_slice2};

         assign mem_req_tag_o = {{ 5 {mem_req_tag_o_slice[4]}}, mem_req_tag_o_slice};

         assign mem_req_cmd_o = 5'd00;

         assign mem_req_typ_o = {2'b00, mem_req_typ_o_slice};

         assign mem_req_phys_o = 1'd1;

         assign mem_req_data_o = 64'd00000000000000000000;


endmodule

