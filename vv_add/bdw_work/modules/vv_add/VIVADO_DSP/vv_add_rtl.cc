// Generated by stratus_hls 15.21-p100  (11111647)
// Thu Aug  4 21:31:10 2016
// from vv_add.cc
#include "vv_add_rtl.h"

struct vv_add;
vv_add::vv_add(sc_module_name name) : sc_module(name) 
    ,clk("clk")
    ,rst("rst")
    ,cc_busy_o("cc_busy_o")
    ,cc_interrupt_o("cc_interrupt_o")
    ,cc_status_i("cc_status_i")
    ,cc_exception_i("cc_exception_i")
    ,cc_host_id_i("cc_host_id_i")
    ,core_cmd_ready_o("core_cmd_ready_o")
    ,core_cmd_valid_i("core_cmd_valid_i")
    ,core_cmd_inst_funct_i("core_cmd_inst_funct_i")
    ,core_cmd_inst_rs1_i("core_cmd_inst_rs1_i")
    ,core_cmd_inst_rs2_i("core_cmd_inst_rs2_i")
    ,core_cmd_inst_xd_i("core_cmd_inst_xd_i")
    ,core_cmd_inst_xs1_i("core_cmd_inst_xs1_i")
    ,core_cmd_inst_xs2_i("core_cmd_inst_xs2_i")
    ,core_cmd_inst_rd_i("core_cmd_inst_rd_i")
    ,core_cmd_inst_opcode_i("core_cmd_inst_opcode_i")
    ,core_cmd_rs1_i("core_cmd_rs1_i")
    ,core_cmd_rs2_i("core_cmd_rs2_i")
    ,core_resp_ready_i("core_resp_ready_i")
    ,core_resp_valid_o("core_resp_valid_o")
    ,core_resp_rd_o("core_resp_rd_o")
    ,core_resp_data_o("core_resp_data_o")
    ,mem_req_ready_i("mem_req_ready_i")
    ,mem_req_valid_o("mem_req_valid_o")
    ,mem_req_addr_o("mem_req_addr_o")
    ,mem_req_tag_o("mem_req_tag_o")
    ,mem_req_cmd_o("mem_req_cmd_o")
    ,mem_req_typ_o("mem_req_typ_o")
    ,mem_req_phys_o("mem_req_phys_o")
    ,mem_req_data_o("mem_req_data_o")
    ,mem_resp_valid_i("mem_resp_valid_i")
    ,mem_resp_addr_i("mem_resp_addr_i")
    ,mem_resp_tag_i("mem_resp_tag_i")
    ,mem_resp_cmd_i("mem_resp_cmd_i")
    ,mem_resp_typ_i("mem_resp_typ_i")
    ,mem_resp_data_i("mem_resp_data_i")
    ,mem_resp_has_data_i("mem_resp_has_data_i")
    ,mem_resp_data_word_bypass_i("mem_resp_data_word_bypass_i")
    ,mem_resp_store_data_i("mem_resp_store_data_i")
    ,mem_resp_nack_i("mem_resp_nack_i")
    ,mem_resp_replay_i("mem_resp_replay_i")
    ,global_state_next("global_state_next")
    ,vv_add_And_1U_0_4_5_out1("vv_add_And_1U_0_4_5_out1")
    ,vv_add_Eqi3u10_4_4_out1("vv_add_Eqi3u10_4_4_out1")
    ,vv_add_And_1U_0_4_3_out1("vv_add_And_1U_0_4_3_out1")
    ,vv_add_Eqi2u10_4_2_out1("vv_add_Eqi2u10_4_2_out1")
    ,s_reg_18("s_reg_18")
    ,s_reg_17("s_reg_17")
    ,vv_add_Add_64U_3_4_1_out1("vv_add_Add_64U_3_4_1_out1")
    ,s_reg_12("s_reg_12")
    ,s_reg_14("s_reg_14")
    ,s_reg_16("s_reg_16")
    ,mem_req_tag_o_slice("mem_req_tag_o_slice")
    ,mem_req_cmd_o_slice("mem_req_cmd_o_slice")
    ,mem_req_typ_o_slice("mem_req_typ_o_slice")
    ,s_reg_15("s_reg_15")
    ,s_reg_13("s_reg_13")
    ,global_state("global_state")
{
  SC_METHOD(drive_mem_req_data_o);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_mem_req_typ_o);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_mem_req_cmd_o);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_mem_req_tag_o);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_mem_req_addr_o);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_mem_req_valid_o);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_core_resp_data_o);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_core_resp_rd_o);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_core_resp_valid_o);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_core_cmd_ready_o);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_cc_busy_o);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_12);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_13);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_14);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_15);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_16);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_17);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_18);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(vv_add_Add_64U_3_4_1);
  sensitive << ( s_reg_16 );
  sensitive << ( s_reg_15 );

  SC_METHOD(vv_add_Eqi2u10_4_2);
  sensitive << ( mem_resp_tag_i );

  SC_METHOD(vv_add_And_1U_0_4_3);
  sensitive << ( mem_resp_valid_i );
  sensitive << ( vv_add_Eqi2u10_4_2_out1 );

  SC_METHOD(vv_add_Eqi3u10_4_4);
  sensitive << ( mem_resp_tag_i );

  SC_METHOD(vv_add_And_1U_0_4_5);
  sensitive << ( mem_resp_valid_i );
  sensitive << ( vv_add_Eqi3u10_4_4_out1 );

  SC_METHOD(drive_global_state);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_global_state_next);
  sensitive << ( global_state );
  sensitive << ( core_cmd_valid_i );
  sensitive << ( s_reg_13 );
  sensitive << ( s_reg_14 );
  sensitive << ( mem_req_ready_i );
  sensitive << ( vv_add_And_1U_0_4_3_out1 );
  sensitive << ( vv_add_And_1U_0_4_5_out1 );
  sensitive << ( core_resp_ready_i );

  SC_METHOD(thread_12);
  sensitive << ( mem_req_tag_o_slice );

  SC_METHOD(thread_11);
  sensitive << ( mem_req_cmd_o_slice );

  SC_METHOD(thread_10);
  sensitive << ( mem_req_typ_o_slice );

  SC_METHOD(thread_9);

  SC_METHOD(thread_8);

}
// resource: regr_64b
void vv_add::drive_mem_req_data_o(){
  if ( (rst.read() == 0ULL) ) {
    mem_req_data_o = 0ULL;
  } else {
    switch( (sc_uint<4>)(global_state.read()) ) {
    case 2ULL: 
      if ( (2ULL == s_reg_13.read()) ) {
        mem_req_data_o = s_reg_15.read();
      } 
      break;
    }
  }
}
// resource: regr_1b
void vv_add::drive_mem_req_typ_o(){
  if ( (rst.read() == 0ULL) ) {
    mem_req_typ_o_slice = 0ULL;
  } else {
    switch( (sc_uint<4>)(global_state.read()) ) {
    case 2ULL: 
      switch( (sc_uint<7>)(s_reg_13.read()) ) {
      case 2ULL: case 3ULL: 
        mem_req_typ_o_slice = 1ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx2i
// resource: regr_1b
void vv_add::drive_mem_req_cmd_o(){
  if ( (rst.read() == 0ULL) ) {
    mem_req_cmd_o_slice = 0ULL;
  } else {
    switch( (sc_uint<4>)(global_state.read()) ) {
    case 2ULL: 
      switch( (sc_uint<7>)(s_reg_13.read()) ) {
      case 2ULL: 
        mem_req_cmd_o_slice = 1ULL;
        break;
      case 3ULL: 
        mem_req_cmd_o_slice = 0ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_2bx2i
// resource: regr_2b
void vv_add::drive_mem_req_tag_o(){
  if ( (rst.read() == 0ULL) ) {
    mem_req_tag_o_slice = 0ULL;
  } else {
    switch( (sc_uint<4>)(global_state.read()) ) {
    case 2ULL: 
      switch( (sc_uint<7>)(s_reg_13.read()) ) {
      case 2ULL: 
        mem_req_tag_o_slice = 2ULL;
        break;
      case 3ULL: 
        mem_req_tag_o_slice = 3ULL;
        break;
      }
      break;
    }
  }
}
// resource: regr_40b
void vv_add::drive_mem_req_addr_o(){
  if ( (rst.read() == 0ULL) ) {
    mem_req_addr_o = 0ULL;
  } else {
    switch( (sc_uint<4>)(global_state.read()) ) {
    case 2ULL: 
      switch( (sc_uint<7>)(s_reg_13.read()) ) {
      case 2ULL: case 3ULL: 
        mem_req_addr_o = (sc_uint<40> )s_reg_16.read();
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx2i
// resource: regr_1b
void vv_add::drive_mem_req_valid_o(){
  if ( (rst.read() == 0ULL) ) {
    mem_req_valid_o = 0ULL;
  } else {
    switch( (sc_uint<4>)(global_state.read()) ) {
    case 2ULL: 
      switch( (sc_uint<7>)(s_reg_13.read()) ) {
      case 2ULL: case 3ULL: 
        mem_req_valid_o = 1ULL;
        break;
      }
      break;
    case 3ULL: case 6ULL: 
      if ( mem_req_ready_i.read() ) {
        mem_req_valid_o = 0ULL;
      } 
      break;
    }
  }
}
// resource: mux_64bx2i
// resource: regr_64b
void vv_add::drive_core_resp_data_o(){
  if ( (rst.read() == 0ULL) ) {
    core_resp_data_o = 0ULL;
  } else {
    switch( (sc_uint<4>)(global_state.read()) ) {
    case 2ULL: 
      switch( (sc_uint<7>)(s_reg_13.read()) ) {
      default:
        if ( s_reg_14.read() ) {
          core_resp_data_o = s_reg_12.read();
        } 
        break;
      case 1ULL: 
        if ( s_reg_14.read() ) {
          core_resp_data_o = vv_add_Add_64U_3_4_1_out1.read();
        } 
        break;
      case 2ULL: case 3ULL: 
        break;
      }
      break;
    case 5ULL: case 8ULL: 
      if ( s_reg_14.read() ) {
        core_resp_data_o = s_reg_12.read();
      } 
      break;
    }
  }
}
// resource: regr_5b
void vv_add::drive_core_resp_rd_o(){
  if ( (rst.read() == 0ULL) ) {
    core_resp_rd_o = core_cmd_inst_rd_i.read();
  } else {
    switch( (sc_uint<4>)(global_state.read()) ) {
    case 2ULL: 
      switch( (sc_uint<7>)(s_reg_13.read()) ) {
      default:
        if ( s_reg_14.read() ) {
          core_resp_rd_o = s_reg_17.read();
        } 
        break;
      case 2ULL: case 3ULL: 
        break;
      }
      break;
    case 5ULL: case 8ULL: 
      if ( s_reg_14.read() ) {
        core_resp_rd_o = s_reg_17.read();
      } 
      break;
    }
  }
}
// resource: mux_1bx2i
// resource: regr_1b
void vv_add::drive_core_resp_valid_o(){
  if ( (rst.read() == 0ULL) ) {
    core_resp_valid_o = 0ULL;
  } else {
    switch( (sc_uint<4>)(global_state.read()) ) {
    case 2ULL: 
      switch( (sc_uint<7>)(s_reg_13.read()) ) {
      default:
        if ( s_reg_14.read() ) {
          core_resp_valid_o = 1ULL;
        } else {
          core_resp_valid_o = 0ULL;
        }
        break;
      case 2ULL: case 3ULL: 
        break;
      }
      break;
    case 5ULL: case 8ULL: 
      if ( s_reg_14.read() ) {
        core_resp_valid_o = 1ULL;
      } else {
        core_resp_valid_o = 0ULL;
      }
      break;
    case 9ULL: 
      if ( core_resp_ready_i.read() ) {
        core_resp_valid_o = 0ULL;
      } 
      break;
    }
  }
}
// resource: mux_1bx2i
// resource: regr_1b
void vv_add::drive_core_cmd_ready_o(){
  if ( (rst.read() == 0ULL) ) {
    core_cmd_ready_o = 0ULL;
  } else {
    switch( (sc_uint<4>)(global_state.read()) ) {
    case 0ULL: case 11ULL: 
      core_cmd_ready_o = 1ULL;
      break;
    case 2ULL: 
      core_cmd_ready_o = 0ULL;
      break;
    }
  }
}
// resource: mux_1bx2i
// resource: regr_1b
void vv_add::drive_cc_busy_o(){
  if ( (rst.read() == 0ULL) ) {
    cc_busy_o = 0ULL;
  } else {
    switch( (sc_uint<4>)(global_state.read()) ) {
    case 0ULL: case 1ULL: case 11ULL: 
      if ( core_cmd_valid_i.read() ) {
        cc_busy_o = 1ULL;
      } 
      break;
    case 2ULL: 
      switch( (sc_uint<7>)(s_reg_13.read()) ) {
      default:
        if ( s_reg_14.read() );
        else {
          cc_busy_o = 0ULL;
        }
        break;
      case 2ULL: case 3ULL: 
        break;
      }
      break;
    case 5ULL: case 8ULL: 
      if ( s_reg_14.read() );
      else {
        cc_busy_o = 0ULL;
      }
      break;
    case 9ULL: 
      if ( core_resp_ready_i.read() ) {
        cc_busy_o = 0ULL;
      } 
      break;
    }
  }
}
// resource: mux_64bx4i
// resource: regr_64b
void vv_add::drive_s_reg_12(){
  switch( (sc_uint<4>)(global_state.read()) ) {
  case 0ULL: 
    s_reg_12 = 0ULL;
    break;
  case 3ULL: case 4ULL: 
    s_reg_12 = mem_resp_store_data_i.read();
    break;
  case 6ULL: case 7ULL: 
    s_reg_12 = mem_resp_data_i.read();
    break;
  case 11ULL: 
    s_reg_12 = s_reg_18.read();
    break;
  }
}
// resource: regr_7b
void vv_add::drive_s_reg_13(){
  switch( (sc_uint<4>)(global_state.read()) ) {
  case 0ULL: case 1ULL: case 11ULL: 
    s_reg_13 = core_cmd_inst_opcode_i.read();
    break;
  }
}
// resource: regr_1b
void vv_add::drive_s_reg_14(){
  switch( (sc_uint<4>)(global_state.read()) ) {
  case 0ULL: case 1ULL: case 11ULL: 
    s_reg_14 = (sc_uint<1> ) (core_cmd_inst_xd_i.read());
    break;
  }
}
// resource: regr_64b
void vv_add::drive_s_reg_15(){
  switch( (sc_uint<4>)(global_state.read()) ) {
  case 0ULL: case 1ULL: case 11ULL: 
    s_reg_15 = core_cmd_rs1_i.read();
    break;
  }
}
// resource: regr_64b
void vv_add::drive_s_reg_16(){
  switch( (sc_uint<4>)(global_state.read()) ) {
  case 0ULL: case 1ULL: case 11ULL: 
    s_reg_16 = core_cmd_rs2_i.read();
    break;
  }
}
// resource: regr_5b
void vv_add::drive_s_reg_17(){
  switch( (sc_uint<4>)(global_state.read()) ) {
  case 0ULL: case 1ULL: case 11ULL: 
    s_reg_17 = core_cmd_inst_rd_i.read();
    break;
  }
}
// resource: mux_64bx2i
// resource: regr_64b
void vv_add::drive_s_reg_18(){
  switch( (sc_uint<4>)(global_state.read()) ) {
  case 2ULL: 
    switch( (sc_uint<7>)(s_reg_13.read()) ) {
    default:
      s_reg_18 = s_reg_12.read();
      break;
    case 1ULL: 
      s_reg_18 = vv_add_Add_64U_3_4_1_out1.read();
      break;
    case 2ULL: case 3ULL: 
      break;
    }
    break;
  case 5ULL: case 8ULL: 
    s_reg_18 = s_reg_12.read();
    break;
  }
}
#ifdef  STRATUS
#pragma continuous_assigns
#endif // STRATUS
// resource: vv_add_Add_64U_3_4  instance: vv_add_Add_64U_3_4_1
void vv_add::vv_add_Add_64U_3_4_1(){
  vv_add_Add_64U_3_4_1_out1 = (s_reg_15.read() + s_reg_16.read());
}
#ifdef  STRATUS
#pragma continuous_assigns
#endif // STRATUS
// resource: vv_add_Eqi2u10_4  instance: vv_add_Eqi2u10_4_2
void vv_add::vv_add_Eqi2u10_4_2(){
  vv_add_Eqi2u10_4_2_out1 = (mem_resp_tag_i.read() == 2ULL);
}
#ifdef  STRATUS
#pragma continuous_assigns
#endif // STRATUS
// resource: vv_add_And_1U_0_4  instance: vv_add_And_1U_0_4_3
void vv_add::vv_add_And_1U_0_4_3(){
  vv_add_And_1U_0_4_3_out1 = vv_add_Eqi2u10_4_2_out1.read() & mem_resp_valid_i
                             .read();
}
#ifdef  STRATUS
#pragma continuous_assigns
#endif // STRATUS
// resource: vv_add_Eqi3u10_4  instance: vv_add_Eqi3u10_4_4
void vv_add::vv_add_Eqi3u10_4_4(){
  vv_add_Eqi3u10_4_4_out1 = (mem_resp_tag_i.read() == 3ULL);
}
#ifdef  STRATUS
#pragma continuous_assigns
#endif // STRATUS
// resource: vv_add_And_1U_0_4  instance: vv_add_And_1U_0_4_5
void vv_add::vv_add_And_1U_0_4_5(){
  vv_add_And_1U_0_4_5_out1 = vv_add_Eqi3u10_4_4_out1.read() & mem_resp_valid_i
                             .read();
}
// resource: regr_4b
void vv_add::drive_global_state(){
  if ( (rst.read() == 0ULL) ) {
    global_state = 0ULL;
  } else {
    global_state = global_state_next.read();
  }
}
// resource: mux_4bx11i
void vv_add::drive_global_state_next(){
  switch( (sc_uint<4>)(global_state.read()) ) {
  default:
    global_state_next = (global_state.read() + 1ULL);
    break;
  case 0ULL: case 1ULL: case 11ULL: 
    if ( core_cmd_valid_i.read() ) {
      global_state_next = 2ULL;
    } else {
      global_state_next = 1ULL;
    }
    break;
  case 2ULL: 
    switch( (sc_uint<7>)(s_reg_13.read()) ) {
    default:
      if ( s_reg_14.read() ) {
        global_state_next = 9ULL;
      } else {
        global_state_next = 10ULL;
      }
      break;
    case 2ULL: 
      global_state_next = (global_state.read() + 1ULL);
      break;
    case 3ULL: 
      global_state_next = 6ULL;
      break;
    }
    break;
  case 3ULL: 
    if ( mem_req_ready_i.read() ) {
      if ( vv_add_And_1U_0_4_3_out1.read() ) {
        global_state_next = 5ULL;
      } else {
        global_state_next = (global_state.read() + 1ULL);
      }
    } else {
      global_state_next = 3ULL;
    }
    break;
  case 4ULL: 
    if ( vv_add_And_1U_0_4_3_out1.read() ) {
      global_state_next = (global_state.read() + 1ULL);
    } else {
      global_state_next = 4ULL;
    }
    break;
  case 5ULL: case 8ULL: 
    if ( s_reg_14.read() ) {
      global_state_next = 9ULL;
    } else {
      global_state_next = 10ULL;
    }
    break;
  case 6ULL: 
    if ( mem_req_ready_i.read() ) {
      if ( vv_add_And_1U_0_4_5_out1.read() ) {
        global_state_next = 8ULL;
      } else {
        global_state_next = (global_state.read() + 1ULL);
      }
    } else {
      global_state_next = 6ULL;
    }
    break;
  case 7ULL: 
    if ( vv_add_And_1U_0_4_5_out1.read() ) {
      global_state_next = (global_state.read() + 1ULL);
    } else {
      global_state_next = 7ULL;
    }
    break;
  case 9ULL: 
    if ( core_resp_ready_i.read() ) {
      global_state_next = (global_state.read() + 1ULL);
    } else {
      global_state_next = 9ULL;
    }
    break;
  }
}
#ifdef  STRATUS
#pragma continuous_assigns
#endif // STRATUS
void vv_add::thread_12(){
  mem_req_tag_o = (sc_uint<10> ) (mem_req_tag_o_slice.read());
}
#ifdef  STRATUS
#pragma continuous_assigns
#endif // STRATUS
void vv_add::thread_11(){
  mem_req_cmd_o = (sc_uint<5> ) (mem_req_cmd_o_slice.read());
}
#ifdef  STRATUS
#pragma continuous_assigns
#endif // STRATUS
void vv_add::thread_10(){
  mem_req_typ_o = (sc_uint<3> ) (mem_req_typ_o_slice.read());
}
#ifdef  STRATUS
#pragma continuous_assigns
#endif // STRATUS
void vv_add::thread_9(){
  mem_req_phys_o = 1ULL;
}
#ifdef  STRATUS
#pragma continuous_assigns
#endif // STRATUS
void vv_add::thread_8(){
  cc_interrupt_o = 0ULL;
}
