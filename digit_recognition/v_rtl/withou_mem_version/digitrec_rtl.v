// Generated by stratus_vlg 15.21-p100  (11111646)
// Wed Aug  3 15:40:22 2016
// from bdw_work/wrappers/digitrec_wrap.cc

`timescale 1ps / 1ps

      
// Generated by stratus_hls 15.21-p100  (11111647)
// Wed Aug  3 15:40:11 2016
// from digitrec.cc
/* Include declarations of instantiated parts. */
/* Declaration of the synthesized module. */
module digitrec(clk, rst, cc_busy_o, cc_interrupt_o, cc_status_i, cc_exception_i, cc_host_id_i, core_cmd_ready_o, core_cmd_valid_i, core_cmd_inst_funct_i, core_cmd_inst_rs1_i, core_cmd_inst_rs2_i, core_cmd_inst_xd_i, core_cmd_inst_xs1_i, core_cmd_inst_xs2_i, core_cmd_inst_rd_i, core_cmd_inst_opcode_i, core_cmd_rs1_i, core_cmd_rs2_i, core_resp_ready_i, core_resp_valid_o, core_resp_rd_o, core_resp_data_o, mem_req_ready_i
          , mem_req_valid_o, mem_req_addr_o, mem_req_tag_o, mem_req_cmd_o, mem_req_typ_o, mem_req_phys_o, mem_req_data_o, mem_resp_valid_i, mem_resp_addr_i, mem_resp_tag_i, mem_resp_cmd_i, mem_resp_typ_i, mem_resp_data_i, mem_resp_has_data_i, mem_resp_data_word_bypass_i, mem_resp_store_data_i, mem_resp_nack_i, mem_resp_replay_i);

      input clk;
      input rst;
      input cc_status_i;
      input cc_exception_i;
      input cc_host_id_i;
      input core_cmd_valid_i;
      input [6:0] core_cmd_inst_funct_i;
      input [4:0] core_cmd_inst_rs1_i;
      input [4:0] core_cmd_inst_rs2_i;
      input core_cmd_inst_xd_i;
      input core_cmd_inst_xs1_i;
      input core_cmd_inst_xs2_i;
      input [4:0] core_cmd_inst_rd_i;
      input [6:0] core_cmd_inst_opcode_i;
      input [63:0] core_cmd_rs1_i;
      input [63:0] core_cmd_rs2_i;
      input core_resp_ready_i;
      input mem_req_ready_i;
      input mem_resp_valid_i;
      input [39:0] mem_resp_addr_i;
      input [9:0] mem_resp_tag_i;
      input [4:0] mem_resp_cmd_i;
      input [2:0] mem_resp_typ_i;
      input [63:0] mem_resp_data_i;
      input mem_resp_has_data_i;
      input [63:0] mem_resp_data_word_bypass_i;
      input [63:0] mem_resp_store_data_i;
      input mem_resp_nack_i;
      input mem_resp_replay_i;
      output cc_busy_o;
      reg cc_busy_o;
      output cc_interrupt_o;
      output core_cmd_ready_o;
      reg core_cmd_ready_o;
      output core_resp_valid_o;
      reg core_resp_valid_o;
      output [4:0] core_resp_rd_o;
      reg [4:0] core_resp_rd_o;
      output [63:0] core_resp_data_o;
      output mem_req_valid_o;
      output [39:0] mem_req_addr_o;
      output [9:0] mem_req_tag_o;
      output [4:0] mem_req_cmd_o;
      output [2:0] mem_req_typ_o;
      output mem_req_phys_o;
      output [63:0] mem_req_data_o;
      wire[4:0] s_reg_39;
      wire[3:0] s_reg_40;
      /*signed*/wire[31:0] digitrec_Add2i1s32_4_60_out1;
      wire digitrec_LtiLLs12_4_45_out1;
      wire digitrec_gen000001_4_23_in1;
      wire digitrec_gen000001_4_23_in2;
      wire digitrec_gen000001_4_23_in3;
      wire digitrec_gen000001_4_23_in4;
      wire digitrec_gen000001_4_23_in5;
      wire digitrec_gen000001_4_23_in6;
      wire digitrec_gen000001_4_23_in7;
      wire digitrec_gen000001_4_23_in8;
      wire digitrec_gen000001_4_23_in9;
      wire digitrec_gen000001_4_23_in10;
      wire digitrec_gen000001_4_23_in11;
      wire digitrec_gen000001_4_23_in12;
      wire digitrec_gen000001_4_23_in13;
      wire digitrec_gen000001_4_23_in14;
      wire digitrec_gen000001_4_23_in15;
      wire digitrec_gen000001_4_23_in16;
      wire digitrec_gen000001_4_23_in17;
      wire digitrec_gen000001_4_23_in18;
      wire digitrec_gen000001_4_23_in19;
      wire digitrec_gen000001_4_23_in20;
      wire digitrec_gen000001_4_23_in21;
      wire digitrec_gen000001_4_23_in22;
      wire digitrec_gen000001_4_23_in23;
      wire digitrec_gen000001_4_23_in24;
      wire digitrec_gen000001_4_23_in25;
      wire digitrec_gen000001_4_23_in26;
      wire digitrec_gen000001_4_23_in27;
      wire digitrec_gen000001_4_23_in28;
      wire digitrec_gen000001_4_23_in29;
      wire digitrec_gen000001_4_23_in30;
      wire digitrec_gen000001_4_23_in31;
      wire digitrec_gen000001_4_23_in32;
      wire digitrec_gen000001_4_23_in33;
      wire digitrec_gen000001_4_23_in34;
      wire digitrec_gen000001_4_23_in35;
      wire digitrec_gen000001_4_23_in36;
      wire digitrec_gen000001_4_23_in37;
      wire digitrec_gen000001_4_23_in38;
      wire digitrec_gen000001_4_23_in39;
      wire digitrec_gen000001_4_23_in40;
      wire digitrec_gen000001_4_23_in41;
      wire digitrec_gen000001_4_23_in42;
      wire digitrec_gen000001_4_23_in43;
      wire digitrec_gen000001_4_23_in44;
      wire digitrec_gen000001_4_23_in45;
      wire digitrec_gen000001_4_23_in46;
      wire digitrec_gen000001_4_23_in47;
      wire digitrec_gen000001_4_23_in48;
      wire digitrec_gen000001_4_22_in1;
      wire digitrec_gen000001_4_22_in2;
      wire digitrec_gen000001_4_22_in3;
      wire digitrec_gen000001_4_22_in4;
      wire digitrec_gen000001_4_22_in5;
      wire digitrec_gen000001_4_22_in6;
      wire digitrec_gen000001_4_22_in7;
      wire digitrec_gen000001_4_22_in8;
      wire digitrec_gen000001_4_22_in9;
      wire digitrec_gen000001_4_22_in10;
      wire digitrec_gen000001_4_22_in11;
      wire digitrec_gen000001_4_22_in12;
      wire digitrec_gen000001_4_22_in13;
      wire digitrec_gen000001_4_22_in14;
      wire digitrec_gen000001_4_22_in15;
      wire digitrec_gen000001_4_22_in16;
      wire digitrec_gen000001_4_22_in17;
      wire digitrec_gen000001_4_22_in18;
      wire digitrec_gen000001_4_22_in19;
      wire digitrec_gen000001_4_22_in20;
      wire digitrec_gen000001_4_22_in21;
      wire digitrec_gen000001_4_22_in22;
      wire digitrec_gen000001_4_22_in23;
      wire digitrec_gen000001_4_22_in24;
      wire digitrec_gen000001_4_22_in25;
      wire digitrec_gen000001_4_22_in26;
      wire digitrec_gen000001_4_22_in27;
      wire digitrec_gen000001_4_22_in28;
      wire digitrec_gen000001_4_22_in29;
      wire digitrec_gen000001_4_22_in30;
      wire digitrec_gen000001_4_22_in31;
      wire digitrec_gen000001_4_22_in32;
      wire digitrec_gen000001_4_22_in33;
      wire digitrec_gen000001_4_22_in34;
      wire digitrec_gen000001_4_22_in35;
      wire digitrec_gen000001_4_22_in36;
      wire digitrec_gen000001_4_22_in37;
      wire digitrec_gen000001_4_22_in38;
      wire digitrec_gen000001_4_22_in39;
      wire digitrec_gen000001_4_22_in40;
      wire digitrec_gen000001_4_22_in41;
      wire digitrec_gen000001_4_22_in42;
      wire digitrec_gen000001_4_22_in43;
      wire digitrec_gen000001_4_22_in44;
      wire digitrec_gen000001_4_22_in45;
      wire digitrec_gen000001_4_22_in46;
      wire digitrec_gen000001_4_22_in47;
      wire digitrec_gen000001_4_22_in48;
      wire digitrec_gen000001_4_21_in1;
      wire digitrec_gen000001_4_21_in2;
      wire digitrec_gen000001_4_21_in3;
      wire digitrec_gen000001_4_21_in4;
      wire digitrec_gen000001_4_21_in5;
      wire digitrec_gen000001_4_21_in6;
      wire digitrec_gen000001_4_21_in7;
      wire digitrec_gen000001_4_21_in8;
      wire digitrec_gen000001_4_21_in9;
      wire digitrec_gen000001_4_21_in10;
      wire digitrec_gen000001_4_21_in11;
      wire digitrec_gen000001_4_21_in12;
      wire digitrec_gen000001_4_21_in13;
      wire digitrec_gen000001_4_21_in14;
      wire digitrec_gen000001_4_21_in15;
      wire digitrec_gen000001_4_21_in16;
      wire digitrec_gen000001_4_21_in17;
      wire digitrec_gen000001_4_21_in18;
      wire digitrec_gen000001_4_21_in19;
      wire digitrec_gen000001_4_21_in20;
      wire digitrec_gen000001_4_21_in21;
      wire digitrec_gen000001_4_21_in22;
      wire digitrec_gen000001_4_21_in23;
      wire digitrec_gen000001_4_21_in24;
      wire digitrec_gen000001_4_21_in25;
      wire digitrec_gen000001_4_21_in26;
      wire digitrec_gen000001_4_21_in27;
      wire digitrec_gen000001_4_21_in28;
      wire digitrec_gen000001_4_21_in29;
      wire digitrec_gen000001_4_21_in30;
      wire digitrec_gen000001_4_21_in31;
      wire digitrec_gen000001_4_21_in32;
      wire digitrec_gen000001_4_21_in33;
      wire digitrec_gen000001_4_21_in34;
      wire digitrec_gen000001_4_21_in35;
      wire digitrec_gen000001_4_21_in36;
      wire digitrec_gen000001_4_21_in37;
      wire digitrec_gen000001_4_21_in38;
      wire digitrec_gen000001_4_21_in39;
      wire digitrec_gen000001_4_21_in40;
      wire digitrec_gen000001_4_21_in41;
      wire digitrec_gen000001_4_21_in42;
      wire digitrec_gen000001_4_21_in43;
      wire digitrec_gen000001_4_21_in44;
      wire digitrec_gen000001_4_21_in45;
      wire digitrec_gen000001_4_21_in46;
      wire digitrec_gen000001_4_21_in47;
      wire digitrec_gen000001_4_21_in48;
      wire digitrec_gen000001_4_20_in1;
      wire digitrec_gen000001_4_20_in2;
      wire digitrec_gen000001_4_20_in3;
      wire digitrec_gen000001_4_20_in4;
      wire digitrec_gen000001_4_20_in5;
      wire digitrec_gen000001_4_20_in6;
      wire digitrec_gen000001_4_20_in7;
      wire digitrec_gen000001_4_20_in8;
      wire digitrec_gen000001_4_20_in9;
      wire digitrec_gen000001_4_20_in10;
      wire digitrec_gen000001_4_20_in11;
      wire digitrec_gen000001_4_20_in12;
      wire digitrec_gen000001_4_20_in13;
      wire digitrec_gen000001_4_20_in14;
      wire digitrec_gen000001_4_20_in15;
      wire digitrec_gen000001_4_20_in16;
      wire digitrec_gen000001_4_20_in17;
      wire digitrec_gen000001_4_20_in18;
      wire digitrec_gen000001_4_20_in19;
      wire digitrec_gen000001_4_20_in20;
      wire digitrec_gen000001_4_20_in21;
      wire digitrec_gen000001_4_20_in22;
      wire digitrec_gen000001_4_20_in23;
      wire digitrec_gen000001_4_20_in24;
      wire digitrec_gen000001_4_20_in25;
      wire digitrec_gen000001_4_20_in26;
      wire digitrec_gen000001_4_20_in27;
      wire digitrec_gen000001_4_20_in28;
      wire digitrec_gen000001_4_20_in29;
      wire digitrec_gen000001_4_20_in30;
      wire digitrec_gen000001_4_20_in31;
      wire digitrec_gen000001_4_20_in32;
      wire digitrec_gen000001_4_20_in33;
      wire digitrec_gen000001_4_20_in34;
      wire digitrec_gen000001_4_20_in35;
      wire digitrec_gen000001_4_20_in36;
      wire digitrec_gen000001_4_20_in37;
      wire digitrec_gen000001_4_20_in38;
      wire digitrec_gen000001_4_20_in39;
      wire digitrec_gen000001_4_20_in40;
      wire digitrec_gen000001_4_20_in41;
      wire digitrec_gen000001_4_20_in42;
      wire digitrec_gen000001_4_20_in43;
      wire digitrec_gen000001_4_20_in44;
      wire digitrec_gen000001_4_20_in45;
      wire digitrec_gen000001_4_20_in46;
      wire digitrec_gen000001_4_20_in47;
      wire digitrec_gen000001_4_20_in48;
      wire digitrec_gen000001_4_19_in1;
      wire digitrec_gen000001_4_19_in2;
      wire digitrec_gen000001_4_19_in3;
      wire digitrec_gen000001_4_19_in4;
      wire digitrec_gen000001_4_19_in5;
      wire digitrec_gen000001_4_19_in6;
      wire digitrec_gen000001_4_19_in7;
      wire digitrec_gen000001_4_19_in8;
      wire digitrec_gen000001_4_19_in9;
      wire digitrec_gen000001_4_19_in10;
      wire digitrec_gen000001_4_19_in11;
      wire digitrec_gen000001_4_19_in12;
      wire digitrec_gen000001_4_19_in13;
      wire digitrec_gen000001_4_19_in14;
      wire digitrec_gen000001_4_19_in15;
      wire digitrec_gen000001_4_19_in16;
      wire digitrec_gen000001_4_19_in17;
      wire digitrec_gen000001_4_19_in18;
      wire digitrec_gen000001_4_19_in19;
      wire digitrec_gen000001_4_19_in20;
      wire digitrec_gen000001_4_19_in21;
      wire digitrec_gen000001_4_19_in22;
      wire digitrec_gen000001_4_19_in23;
      wire digitrec_gen000001_4_19_in24;
      wire digitrec_gen000001_4_19_in25;
      wire digitrec_gen000001_4_19_in26;
      wire digitrec_gen000001_4_19_in27;
      wire digitrec_gen000001_4_19_in28;
      wire digitrec_gen000001_4_19_in29;
      wire digitrec_gen000001_4_19_in30;
      wire digitrec_gen000001_4_19_in31;
      wire digitrec_gen000001_4_19_in32;
      wire digitrec_gen000001_4_19_in33;
      wire digitrec_gen000001_4_19_in34;
      wire digitrec_gen000001_4_19_in35;
      wire digitrec_gen000001_4_19_in36;
      wire digitrec_gen000001_4_19_in37;
      wire digitrec_gen000001_4_19_in38;
      wire digitrec_gen000001_4_19_in39;
      wire digitrec_gen000001_4_19_in40;
      wire digitrec_gen000001_4_19_in41;
      wire digitrec_gen000001_4_19_in42;
      wire digitrec_gen000001_4_19_in43;
      wire digitrec_gen000001_4_19_in44;
      wire digitrec_gen000001_4_19_in45;
      wire digitrec_gen000001_4_19_in46;
      wire digitrec_gen000001_4_19_in47;
      wire digitrec_gen000001_4_19_in48;
      wire[48:0] digitrec_Xor_49U_32_4_18_out1;
      wire[48:0] digitrec_Xor_49U_32_4_17_out1;
      wire[48:0] digitrec_Xor_49U_32_4_16_out1;
      wire[48:0] digitrec_Xor_49U_32_4_15_out1;
      wire[48:0] digitrec_Xor_49U_32_4_14_out1;
      wire digitrec_Lti10s5_4_12_out1;
      wire digitrec_Lti10s5_4_47_out1;
      wire digitrec_OrReduction_1U_1_4_1_out1;
      wire digitrec_GreaterThan_1U_30_4_69_out1;
      wire digitrec_OrReduction_1U_1_4_53_out1;
      wire digitrec_LessThan_1U_24_4_51_out1;
      wire digitrec_Lti10s5_4_49_out1;
      /*signed*/wire[11:0] digitrec_Add2i1s12_4_29_out1;
      /*signed*/wire[4:0] digitrec_Add2i1s5_4_10_out1;
      wire digitrec_LessThan_1U_24_4_44_out1;
      wire digitrec_Eqi9u4_4_13_out1;
      wire digitrec_LessThan_1U_24_4_43_out1;
      wire digitrec_Eqi8u4_4_11_out1;
      wire digitrec_LessThan_1U_24_4_42_out1;
      wire digitrec_Eqi7u4_4_9_out1;
      wire digitrec_LessThan_1U_24_4_41_out1;
      wire digitrec_Eqi6u4_4_8_out1;
      wire digitrec_LessThan_1U_24_4_40_out1;
      wire digitrec_Eqi5u4_4_7_out1;
      wire[5:0] digitrec_gen000001_4_23_out1;
      wire digitrec_LessThan_1U_24_4_28_out1;
      wire digitrec_Eqi4u4_4_6_out1;
      wire[5:0] digitrec_gen000001_4_22_out1;
      wire digitrec_LessThan_1U_24_4_27_out1;
      wire digitrec_Eqi3u4_4_5_out1;
      wire[5:0] digitrec_gen000001_4_21_out1;
      wire digitrec_LessThan_1U_24_4_26_out1;
      wire digitrec_Eqi2u4_4_4_out1;
      wire[5:0] digitrec_gen000001_4_20_out1;
      wire digitrec_LessThan_1U_24_4_25_out1;
      wire digitrec_Eqi1u4_4_2_out1;
      wire[5:0] digitrec_gen000001_4_19_out1;
      wire digitrec_LessThan_1U_24_4_24_out1;
      wire digitrec_Not_1U_2_4_3_out1;
      wire digitrec_Lti10s5_4_71_out1;
      wire[31:0] digitrec_RAM_10X32_2_kscore_51_out1;
      wire[48:0] digitrec_ROM_1800X49_training_data_0_training_data_0_21_out1;
      wire[48:0] digitrec_ROM_1800X49_training_data_1_training_data_1_22_out1;
      wire[48:0] digitrec_ROM_1800X49_training_data_2_training_data_2_23_out1;
      wire[48:0] digitrec_ROM_1800X49_training_data_3_training_data_3_24_out1;
      wire[48:0] digitrec_ROM_1800X49_training_data_4_training_data_4_25_out1;
      wire[48:0] digitrec_ROM_1800X49_training_data_5_training_data_5_36_out1;
      wire[48:0] digitrec_ROM_1800X49_training_data_6_training_data_6_37_out1;
      wire[48:0] digitrec_ROM_1800X49_training_data_7_training_data_7_38_out1;
      wire[48:0] digitrec_ROM_1800X49_training_data_8_training_data_8_39_out1;
      wire[10:0] digitrec_ROM_1800X49_training_data_5_training_data_5_36_in1;
      wire[48:0] digitrec_ROM_1800X49_training_data_9_training_data_9_40_out1;
      wire[5:0] knn_set_0_if_2_dout_wire;
      wire[5:0] knn_set_1_if_2_dout_wire;
      wire[5:0] knn_set_2_if_2_dout_wire;
      wire[5:0] knn_set_3_if_2_dout_wire;
      wire[5:0] knn_set_4_if_2_dout_wire;
      wire[5:0] in1_din_wire;
      wire[5:0] knn_set_5_if_2_dout_wire;
      wire[5:0] in1_din_wire_0;
      wire[5:0] knn_set_6_if_2_dout_wire;
      wire[5:0] in1_din_wire_1;
      wire[5:0] knn_set_7_if_2_dout_wire;
      wire[5:0] in1_din_wire_2;
      wire[5:0] knn_set_8_if_2_dout_wire;
      wire[5:0] in1_din_wire_3;
      wire[5:0] knn_set_9_if_2_dout_wire;
      reg[4:0] global_state_next;
      /*signed*/reg[4:0] sreg_1;
      reg[5:0] digitrec_N_Mux_6_9_33_4_56_out1;
      reg[5:0] digitrec_N_Mux_6_9_33_4_50_out1;
      reg[1:0] gs_ctrl47;
      reg[2:0] gs_ctrl46;
      reg[2:0] gs_ctrl44;
      reg[48:0] digitrec_Xor_49U_32_4_18_in2;
      reg[48:0] digitrec_Xor_49U_32_4_17_in2;
      reg[48:0] digitrec_Xor_49U_32_4_16_in2;
      reg[48:0] digitrec_Xor_49U_32_4_15_in2;
      reg[48:0] digitrec_Xor_49U_32_4_14_in2;
      /*signed*/reg[4:0] digitrec_Add2i1s5_4_10_in1;
      reg[2:0] gs_ctrl33;
      reg digitrec_Not_1U_2_4_3_in1;
      reg gs_ctrl32;
      reg[3:0] digitrec_OrReduction_1U_1_4_1_in1;
      reg gs_ctrl30;
      reg[3:0] digitrec_N_Mux_4_2_27_4_70_out1;
      reg s_reg_53;
      reg[4:0] s_reg_52;
      reg[4:0] s_reg_51;
      reg[31:0] digitrec_N_Mux_32_2_31_4_72_out1;
      reg[31:0] s_reg_50;
      reg[3:0] s_reg_49;
      reg s_reg_46;
      reg[3:0] digitrec_N_Mux_4_2_27_4_52_out1;
      reg s_reg_44;
      reg[3:0] s_reg_43;
      reg s_reg_42;
      reg[4:0] s_reg_41;
      reg[3:0] s_reg_45;
      reg[3:0] s_reg_37;
      reg[5:0] digitrec_N_Mux_6_2_28_4_57_out1;
      reg[5:0] s_reg_36;
      reg[4:0] s_reg_35;
      reg[11:0] s_reg_33;
      reg[11:0] s_reg_32;
      reg[4:0] s_reg_31;
      reg[4:0] s_reg_30;
      reg[48:0] s_reg_28;
      reg gs_ctrl28;
      reg gs_ctrl25;
      reg gs_ctrl22;
      reg gs_ctrl19;
      reg gs_ctrl17;
      reg gs_ctrl16;
      reg gs_ctrl13;
      reg gs_ctrl10;
      reg gs_ctrl7;
      reg gs_ctrl2;
      reg gs_ctrl1;
      reg gs_ctrl0;
      reg[4:0] s_reg_29;
      reg[3:0] s_reg_54;
      reg[4:0] global_state;
      reg[3:0] core_resp_data_o_slice2;
      reg[31:0] digitrec_RAM_10X32_2_kscore_51_DIN;
      reg digitrec_RAM_10X32_2_kscore_51_CE;
      reg digitrec_RAM_10X32_2_kscore_51_RW;
      reg[3:0] digitrec_RAM_10X32_2_kscore_51_in1;
      reg[10:0] digitrec_ROM_1800X49_training_data_0_training_data_0_21_in1;
      reg knn_set_0_if_1_wen0_wire;
      reg knn_set_0_if_3_wen0_wire;
      reg[5:0] knn_set_0_inst_digitrec_knn_set_0_regbank_r0;
      reg knn_set_1_if_1_wen0_wire;
      reg knn_set_1_if_3_wen0_wire;
      reg[5:0] knn_set_1_inst_digitrec_knn_set_1_regbank_r0;
      reg knn_set_2_if_1_wen0_wire;
      reg knn_set_2_if_3_wen0_wire;
      reg[5:0] knn_set_2_inst_digitrec_knn_set_2_regbank_r0;
      reg knn_set_3_if_1_wen0_wire;
      reg knn_set_3_if_3_wen0_wire;
      reg[5:0] knn_set_3_inst_digitrec_knn_set_3_regbank_r0;
      reg knn_set_4_if_1_wen0_wire;
      reg knn_set_4_if_3_wen0_wire;
      reg[5:0] knn_set_4_inst_digitrec_knn_set_4_regbank_r0;
      reg knn_set_5_if_1_wen0_wire;
      reg knn_set_5_if_3_wen0_wire;
      reg[5:0] knn_set_5_inst_digitrec_knn_set_5_regbank_r0;
      reg knn_set_6_if_1_wen0_wire;
      reg knn_set_6_if_3_wen0_wire;
      reg[5:0] knn_set_6_inst_digitrec_knn_set_6_regbank_r0;
      reg knn_set_7_if_1_wen0_wire;
      reg knn_set_7_if_3_wen0_wire;
      reg[5:0] knn_set_7_inst_digitrec_knn_set_7_regbank_r0;
      reg knn_set_8_if_1_wen0_wire;
      reg knn_set_8_if_3_wen0_wire;
      reg[5:0] knn_set_8_inst_digitrec_knn_set_8_regbank_r0;
      reg knn_set_0_if_0_wen0_wire;
      reg knn_set_9_if_1_wen0_wire;
      reg knn_set_9_if_3_wen0_wire;
      reg[5:0] knn_set_9_inst_digitrec_knn_set_9_regbank_r0;

         // Generated by stratus_hls 15.21-p100  (11111647)
         // Wed Aug  3 15:40:11 2016
         // from digitrec.cc
         digitrec_ROM_1800X49_training_data_9 digitrec_ROM_1800X49_training_data_9_training_data_9_40(
                                                .in1( digitrec_ROM_1800X49_training_data_5_training_data_5_36_in1 ),
                                                .out1( digitrec_ROM_1800X49_training_data_9_training_data_9_40_out1 ),
                                                .clk( clk )
                                              );

         digitrec_ROM_1800X49_training_data_8 digitrec_ROM_1800X49_training_data_8_training_data_8_39(
                                                .in1( digitrec_ROM_1800X49_training_data_5_training_data_5_36_in1 ),
                                                .out1( digitrec_ROM_1800X49_training_data_8_training_data_8_39_out1 ),
                                                .clk( clk )
                                              );

         digitrec_ROM_1800X49_training_data_7 digitrec_ROM_1800X49_training_data_7_training_data_7_38(
                                                .in1( digitrec_ROM_1800X49_training_data_5_training_data_5_36_in1 ),
                                                .out1( digitrec_ROM_1800X49_training_data_7_training_data_7_38_out1 ),
                                                .clk( clk )
                                              );

         digitrec_ROM_1800X49_training_data_6 digitrec_ROM_1800X49_training_data_6_training_data_6_37(
                                                .in1( digitrec_ROM_1800X49_training_data_5_training_data_5_36_in1 ),
                                                .out1( digitrec_ROM_1800X49_training_data_6_training_data_6_37_out1 ),
                                                .clk( clk )
                                              );

         digitrec_ROM_1800X49_training_data_5 digitrec_ROM_1800X49_training_data_5_training_data_5_36(
                                                .in1( digitrec_ROM_1800X49_training_data_5_training_data_5_36_in1 ),
                                                .out1( digitrec_ROM_1800X49_training_data_5_training_data_5_36_out1 ),
                                                .clk( clk )
                                              );

         digitrec_ROM_1800X49_training_data_4 digitrec_ROM_1800X49_training_data_4_training_data_4_25(
                                                .in1( digitrec_ROM_1800X49_training_data_0_training_data_0_21_in1 ),
                                                .out1( digitrec_ROM_1800X49_training_data_4_training_data_4_25_out1 ),
                                                .clk( clk )
                                              );

         digitrec_ROM_1800X49_training_data_3 digitrec_ROM_1800X49_training_data_3_training_data_3_24(
                                                .in1( digitrec_ROM_1800X49_training_data_0_training_data_0_21_in1 ),
                                                .out1( digitrec_ROM_1800X49_training_data_3_training_data_3_24_out1 ),
                                                .clk( clk )
                                              );

         digitrec_ROM_1800X49_training_data_2 digitrec_ROM_1800X49_training_data_2_training_data_2_23(
                                                .in1( digitrec_ROM_1800X49_training_data_0_training_data_0_21_in1 ),
                                                .out1( digitrec_ROM_1800X49_training_data_2_training_data_2_23_out1 ),
                                                .clk( clk )
                                              );

         digitrec_ROM_1800X49_training_data_1 digitrec_ROM_1800X49_training_data_1_training_data_1_22(
                                                .in1( digitrec_ROM_1800X49_training_data_0_training_data_0_21_in1 ),
                                                .out1( digitrec_ROM_1800X49_training_data_1_training_data_1_22_out1 ),
                                                .clk( clk )
                                              );

         digitrec_ROM_1800X49_training_data_0 digitrec_ROM_1800X49_training_data_0_training_data_0_21(
                                                .in1( digitrec_ROM_1800X49_training_data_0_training_data_0_21_in1 ),
                                                .out1( digitrec_ROM_1800X49_training_data_0_training_data_0_21_out1 ),
                                                .clk( clk )
                                              );

         digitrec_RAM_10X32_2 digitrec_RAM_10X32_2_kscore_51(
                                .DIN( digitrec_RAM_10X32_2_kscore_51_DIN ),
                                .CE( digitrec_RAM_10X32_2_kscore_51_CE ),
                                .RW( digitrec_RAM_10X32_2_kscore_51_RW ),
                                .in1( digitrec_RAM_10X32_2_kscore_51_in1 ),
                                .out1( digitrec_RAM_10X32_2_kscore_51_out1 ),
                                .clk( clk )
                              );

         // resource: knn_set[9]  instance: knn_set_9_inst
         assign knn_set_9_if_2_dout_wire = knn_set_9_inst_digitrec_knn_set_9_regbank_r0;

         // resource: knn_set[9]  instance: knn_set_9_inst
         always @(posedge clk)
          begin :write_digitrec_knn_set_9_regbank_r0
            if (knn_set_9_if_3_wen0_wire == 1'b1) begin
               knn_set_9_inst_digitrec_knn_set_9_regbank_r0 <= in1_din_wire_3;
            end
            else begin
               if (knn_set_9_if_1_wen0_wire == 1'b1) begin
                  knn_set_9_inst_digitrec_knn_set_9_regbank_r0 <= 6'd50;
               end
               else begin
                  if (knn_set_0_if_0_wen0_wire == 1'b1) begin
                     knn_set_9_inst_digitrec_knn_set_9_regbank_r0 <= 6'd00;
                  end
               end
            end
         end

         // resource: knn_set[8]  instance: knn_set_8_inst
         assign knn_set_8_if_2_dout_wire = knn_set_8_inst_digitrec_knn_set_8_regbank_r0;

         // resource: knn_set[8]  instance: knn_set_8_inst
         always @(posedge clk)
          begin :write_digitrec_knn_set_8_regbank_r0
            if (knn_set_8_if_3_wen0_wire == 1'b1) begin
               knn_set_8_inst_digitrec_knn_set_8_regbank_r0 <= in1_din_wire_2;
            end
            else begin
               if (knn_set_8_if_1_wen0_wire == 1'b1) begin
                  knn_set_8_inst_digitrec_knn_set_8_regbank_r0 <= 6'd50;
               end
               else begin
                  if (knn_set_0_if_0_wen0_wire == 1'b1) begin
                     knn_set_8_inst_digitrec_knn_set_8_regbank_r0 <= 6'd00;
                  end
               end
            end
         end

         // resource: knn_set[7]  instance: knn_set_7_inst
         assign knn_set_7_if_2_dout_wire = knn_set_7_inst_digitrec_knn_set_7_regbank_r0;

         // resource: knn_set[7]  instance: knn_set_7_inst
         always @(posedge clk)
          begin :write_digitrec_knn_set_7_regbank_r0
            if (knn_set_7_if_3_wen0_wire == 1'b1) begin
               knn_set_7_inst_digitrec_knn_set_7_regbank_r0 <= in1_din_wire_1;
            end
            else begin
               if (knn_set_7_if_1_wen0_wire == 1'b1) begin
                  knn_set_7_inst_digitrec_knn_set_7_regbank_r0 <= 6'd50;
               end
               else begin
                  if (knn_set_0_if_0_wen0_wire == 1'b1) begin
                     knn_set_7_inst_digitrec_knn_set_7_regbank_r0 <= 6'd00;
                  end
               end
            end
         end

         // resource: knn_set[6]  instance: knn_set_6_inst
         assign knn_set_6_if_2_dout_wire = knn_set_6_inst_digitrec_knn_set_6_regbank_r0;

         // resource: knn_set[6]  instance: knn_set_6_inst
         always @(posedge clk)
          begin :write_digitrec_knn_set_6_regbank_r0
            if (knn_set_6_if_3_wen0_wire == 1'b1) begin
               knn_set_6_inst_digitrec_knn_set_6_regbank_r0 <= in1_din_wire_0;
            end
            else begin
               if (knn_set_6_if_1_wen0_wire == 1'b1) begin
                  knn_set_6_inst_digitrec_knn_set_6_regbank_r0 <= 6'd50;
               end
               else begin
                  if (knn_set_0_if_0_wen0_wire == 1'b1) begin
                     knn_set_6_inst_digitrec_knn_set_6_regbank_r0 <= 6'd00;
                  end
               end
            end
         end

         // resource: knn_set[5]  instance: knn_set_5_inst
         assign knn_set_5_if_2_dout_wire = knn_set_5_inst_digitrec_knn_set_5_regbank_r0;

         // resource: knn_set[5]  instance: knn_set_5_inst
         always @(posedge clk)
          begin :write_digitrec_knn_set_5_regbank_r0
            if (knn_set_5_if_3_wen0_wire == 1'b1) begin
               knn_set_5_inst_digitrec_knn_set_5_regbank_r0 <= in1_din_wire;
            end
            else begin
               if (knn_set_5_if_1_wen0_wire == 1'b1) begin
                  knn_set_5_inst_digitrec_knn_set_5_regbank_r0 <= 6'd50;
               end
               else begin
                  if (knn_set_0_if_0_wen0_wire == 1'b1) begin
                     knn_set_5_inst_digitrec_knn_set_5_regbank_r0 <= 6'd00;
                  end
               end
            end
         end

         // resource: knn_set[4]  instance: knn_set_4_inst
         assign knn_set_4_if_2_dout_wire = knn_set_4_inst_digitrec_knn_set_4_regbank_r0;

         // resource: knn_set[4]  instance: knn_set_4_inst
         always @(posedge clk)
          begin :write_digitrec_knn_set_4_regbank_r0
            if (knn_set_4_if_3_wen0_wire == 1'b1) begin
               knn_set_4_inst_digitrec_knn_set_4_regbank_r0 <= in1_din_wire_3;
            end
            else begin
               if (knn_set_4_if_1_wen0_wire == 1'b1) begin
                  knn_set_4_inst_digitrec_knn_set_4_regbank_r0 <= 6'd50;
               end
               else begin
                  if (knn_set_0_if_0_wen0_wire == 1'b1) begin
                     knn_set_4_inst_digitrec_knn_set_4_regbank_r0 <= 6'd00;
                  end
               end
            end
         end

         // resource: knn_set[3]  instance: knn_set_3_inst
         assign knn_set_3_if_2_dout_wire = knn_set_3_inst_digitrec_knn_set_3_regbank_r0;

         // resource: knn_set[3]  instance: knn_set_3_inst
         always @(posedge clk)
          begin :write_digitrec_knn_set_3_regbank_r0
            if (knn_set_3_if_3_wen0_wire == 1'b1) begin
               knn_set_3_inst_digitrec_knn_set_3_regbank_r0 <= in1_din_wire_2;
            end
            else begin
               if (knn_set_3_if_1_wen0_wire == 1'b1) begin
                  knn_set_3_inst_digitrec_knn_set_3_regbank_r0 <= 6'd50;
               end
               else begin
                  if (knn_set_0_if_0_wen0_wire == 1'b1) begin
                     knn_set_3_inst_digitrec_knn_set_3_regbank_r0 <= 6'd00;
                  end
               end
            end
         end

         // resource: knn_set[2]  instance: knn_set_2_inst
         assign knn_set_2_if_2_dout_wire = knn_set_2_inst_digitrec_knn_set_2_regbank_r0;

         // resource: knn_set[2]  instance: knn_set_2_inst
         always @(posedge clk)
          begin :write_digitrec_knn_set_2_regbank_r0
            if (knn_set_2_if_3_wen0_wire == 1'b1) begin
               knn_set_2_inst_digitrec_knn_set_2_regbank_r0 <= in1_din_wire_1;
            end
            else begin
               if (knn_set_2_if_1_wen0_wire == 1'b1) begin
                  knn_set_2_inst_digitrec_knn_set_2_regbank_r0 <= 6'd50;
               end
               else begin
                  if (knn_set_0_if_0_wen0_wire == 1'b1) begin
                     knn_set_2_inst_digitrec_knn_set_2_regbank_r0 <= 6'd00;
                  end
               end
            end
         end

         // resource: knn_set[1]  instance: knn_set_1_inst
         assign knn_set_1_if_2_dout_wire = knn_set_1_inst_digitrec_knn_set_1_regbank_r0;

         // resource: knn_set[1]  instance: knn_set_1_inst
         always @(posedge clk)
          begin :write_digitrec_knn_set_1_regbank_r0
            if (knn_set_1_if_3_wen0_wire == 1'b1) begin
               knn_set_1_inst_digitrec_knn_set_1_regbank_r0 <= in1_din_wire_0;
            end
            else begin
               if (knn_set_1_if_1_wen0_wire == 1'b1) begin
                  knn_set_1_inst_digitrec_knn_set_1_regbank_r0 <= 6'd50;
               end
               else begin
                  if (knn_set_0_if_0_wen0_wire == 1'b1) begin
                     knn_set_1_inst_digitrec_knn_set_1_regbank_r0 <= 6'd00;
                  end
               end
            end
         end

         // resource: knn_set[0]  instance: knn_set_0_inst
         assign knn_set_0_if_2_dout_wire = knn_set_0_inst_digitrec_knn_set_0_regbank_r0;

         // resource: knn_set[0]  instance: knn_set_0_inst
         always @(posedge clk)
          begin :write_digitrec_knn_set_0_regbank_r0
            if (knn_set_0_if_3_wen0_wire == 1'b1) begin
               knn_set_0_inst_digitrec_knn_set_0_regbank_r0 <= in1_din_wire;
            end
            else begin
               if (knn_set_0_if_1_wen0_wire == 1'b1) begin
                  knn_set_0_inst_digitrec_knn_set_0_regbank_r0 <= 6'd50;
               end
               else begin
                  if (knn_set_0_if_0_wen0_wire == 1'b1) begin
                     knn_set_0_inst_digitrec_knn_set_0_regbank_r0 <= 6'd00;
                  end
               end
            end
         end

         assign mem_req_valid_o = 1'd0;

         // resource: regr_4b
         always @(posedge clk)
          begin :drive_core_resp_data_o
            if (rst == 1'b0) begin
               core_resp_data_o_slice2 <= 4'd00;
            end
            else begin
               case (global_state) 

                  5'd25: begin
                     if (digitrec_Lti10s5_4_71_out1) begin
                     end
                     else begin
                        core_resp_data_o_slice2 <= s_reg_54;
                     end
                  end
                  
               endcase

            end
         end

         // resource: regr_5b
         always @(posedge clk)
          begin :drive_core_resp_rd_o
            if (rst == 1'b0) begin
               core_resp_rd_o <= core_cmd_inst_rd_i;
            end
            else begin
               case (global_state) 

                  5'd25: begin
                     if (digitrec_Lti10s5_4_71_out1) begin
                     end
                     else begin
                        core_resp_rd_o <= s_reg_29;
                     end
                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i
         // resource: regr_1b
         always @(posedge clk)
          begin :drive_core_resp_valid_o
            if (rst == 1'b0) begin
               core_resp_valid_o <= 1'd0;
            end
            else begin
               case (global_state) 

                  5'd25: begin
                     if (digitrec_Lti10s5_4_71_out1) begin
                     end
                     else begin
                        core_resp_valid_o <= 1'd1;
                     end
                  end
                  
                  5'd26: begin
                     if (core_resp_ready_i) begin
                        core_resp_valid_o <= 1'd0;
                     end
                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i
         // resource: regr_1b
         always @(posedge clk)
          begin :drive_core_cmd_ready_o
            if (rst == 1'b0) begin
               core_cmd_ready_o <= 1'd0;
            end
            else begin
               case (global_state) 

                  5'd00, 5'd28: begin
                     core_cmd_ready_o <= 1'd1;
                  end
                  
                  5'd02: begin
                     core_cmd_ready_o <= 1'd0;
                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i
         // resource: regr_1b
         always @(posedge clk)
          begin :drive_cc_busy_o
            if (rst == 1'b0) begin
               cc_busy_o <= 1'd0;
            end
            else begin
               case (global_state) 

                  5'd00, 5'd01, 5'd28: begin
                     if (core_cmd_valid_i) begin
                        cc_busy_o <= 1'd1;
                     end
                  end
                  
                  5'd26: begin
                     if (core_resp_ready_i) begin
                        cc_busy_o <= 1'd0;
                     end
                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i
         always @(gs_ctrl0)
          begin :drive_knn_set_0_if_0_wen0_wire
            if (gs_ctrl0) begin
               knn_set_0_if_0_wen0_wire = 1'b1;
            end
            else begin
               knn_set_0_if_0_wen0_wire = 1'b0;
            end
         end

         // resource: mux_1bx2i
         always @(gs_ctrl1 or digitrec_Not_1U_2_4_3_out1)
          begin :drive_knn_set_0_if_1_wen0_wire
            if (gs_ctrl1) begin
               knn_set_0_if_1_wen0_wire = digitrec_Not_1U_2_4_3_out1;
            end
            else begin
               knn_set_0_if_1_wen0_wire = 1'b0;
            end
         end

         // resource: mux_1bx2i
         always @(gs_ctrl2 or digitrec_LessThan_1U_24_4_24_out1)
          begin :drive_knn_set_0_if_3_wen0_wire
            if (gs_ctrl2) begin
               if (digitrec_LessThan_1U_24_4_24_out1) begin
                  knn_set_0_if_3_wen0_wire = 1'b1;
               end
               else begin
                  knn_set_0_if_3_wen0_wire = 1'b0;
               end
            end
            else begin
               knn_set_0_if_3_wen0_wire = 1'b0;
            end
         end

         assign in1_din_wire = digitrec_gen000001_4_19_out1;

         // resource: mux_1bx2i
         always @(gs_ctrl1 or digitrec_Eqi1u4_4_2_out1)
          begin :drive_knn_set_1_if_1_wen0_wire
            if (gs_ctrl1) begin
               knn_set_1_if_1_wen0_wire = digitrec_Eqi1u4_4_2_out1;
            end
            else begin
               knn_set_1_if_1_wen0_wire = 1'b0;
            end
         end

         // resource: mux_1bx2i
         always @(gs_ctrl2 or digitrec_LessThan_1U_24_4_25_out1)
          begin :drive_knn_set_1_if_3_wen0_wire
            if (gs_ctrl2) begin
               if (digitrec_LessThan_1U_24_4_25_out1) begin
                  knn_set_1_if_3_wen0_wire = 1'b1;
               end
               else begin
                  knn_set_1_if_3_wen0_wire = 1'b0;
               end
            end
            else begin
               knn_set_1_if_3_wen0_wire = 1'b0;
            end
         end

         assign in1_din_wire_0 = digitrec_gen000001_4_20_out1;

         // resource: mux_1bx2i
         always @(gs_ctrl7 or digitrec_Eqi2u4_4_4_out1)
          begin :drive_knn_set_2_if_1_wen0_wire
            if (gs_ctrl7) begin
               knn_set_2_if_1_wen0_wire = digitrec_Eqi2u4_4_4_out1;
            end
            else begin
               knn_set_2_if_1_wen0_wire = 1'b0;
            end
         end

         // resource: mux_1bx2i
         always @(gs_ctrl2 or digitrec_LessThan_1U_24_4_26_out1)
          begin :drive_knn_set_2_if_3_wen0_wire
            if (gs_ctrl2) begin
               if (digitrec_LessThan_1U_24_4_26_out1) begin
                  knn_set_2_if_3_wen0_wire = 1'b1;
               end
               else begin
                  knn_set_2_if_3_wen0_wire = 1'b0;
               end
            end
            else begin
               knn_set_2_if_3_wen0_wire = 1'b0;
            end
         end

         assign in1_din_wire_1 = digitrec_gen000001_4_21_out1;

         // resource: mux_1bx2i
         always @(gs_ctrl10 or digitrec_Eqi3u4_4_5_out1)
          begin :drive_knn_set_3_if_1_wen0_wire
            if (gs_ctrl10) begin
               knn_set_3_if_1_wen0_wire = digitrec_Eqi3u4_4_5_out1;
            end
            else begin
               knn_set_3_if_1_wen0_wire = 1'b0;
            end
         end

         // resource: mux_1bx2i
         always @(gs_ctrl2 or digitrec_LessThan_1U_24_4_27_out1)
          begin :drive_knn_set_3_if_3_wen0_wire
            if (gs_ctrl2) begin
               if (digitrec_LessThan_1U_24_4_27_out1) begin
                  knn_set_3_if_3_wen0_wire = 1'b1;
               end
               else begin
                  knn_set_3_if_3_wen0_wire = 1'b0;
               end
            end
            else begin
               knn_set_3_if_3_wen0_wire = 1'b0;
            end
         end

         assign in1_din_wire_2 = digitrec_gen000001_4_22_out1;

         // resource: mux_1bx2i
         always @(gs_ctrl13 or digitrec_Eqi4u4_4_6_out1)
          begin :drive_knn_set_4_if_1_wen0_wire
            if (gs_ctrl13) begin
               knn_set_4_if_1_wen0_wire = digitrec_Eqi4u4_4_6_out1;
            end
            else begin
               knn_set_4_if_1_wen0_wire = 1'b0;
            end
         end

         // resource: mux_1bx2i
         always @(gs_ctrl2 or digitrec_LessThan_1U_24_4_28_out1)
          begin :drive_knn_set_4_if_3_wen0_wire
            if (gs_ctrl2) begin
               if (digitrec_LessThan_1U_24_4_28_out1) begin
                  knn_set_4_if_3_wen0_wire = 1'b1;
               end
               else begin
                  knn_set_4_if_3_wen0_wire = 1'b0;
               end
            end
            else begin
               knn_set_4_if_3_wen0_wire = 1'b0;
            end
         end

         assign in1_din_wire_3 = digitrec_gen000001_4_23_out1;

         // resource: mux_1bx2i
         always @(gs_ctrl16 or digitrec_Eqi5u4_4_7_out1)
          begin :drive_knn_set_5_if_1_wen0_wire
            if (gs_ctrl16) begin
               knn_set_5_if_1_wen0_wire = digitrec_Eqi5u4_4_7_out1;
            end
            else begin
               knn_set_5_if_1_wen0_wire = 1'b0;
            end
         end

         // resource: mux_1bx2i
         always @(gs_ctrl17 or digitrec_LessThan_1U_24_4_40_out1)
          begin :drive_knn_set_5_if_3_wen0_wire
            if (gs_ctrl17) begin
               if (digitrec_LessThan_1U_24_4_40_out1) begin
                  knn_set_5_if_3_wen0_wire = 1'b1;
               end
               else begin
                  knn_set_5_if_3_wen0_wire = 1'b0;
               end
            end
            else begin
               knn_set_5_if_3_wen0_wire = 1'b0;
            end
         end

         // resource: mux_1bx2i
         always @(gs_ctrl19 or digitrec_Eqi6u4_4_8_out1)
          begin :drive_knn_set_6_if_1_wen0_wire
            if (gs_ctrl19) begin
               knn_set_6_if_1_wen0_wire = digitrec_Eqi6u4_4_8_out1;
            end
            else begin
               knn_set_6_if_1_wen0_wire = 1'b0;
            end
         end

         // resource: mux_1bx2i
         always @(gs_ctrl17 or digitrec_LessThan_1U_24_4_41_out1)
          begin :drive_knn_set_6_if_3_wen0_wire
            if (gs_ctrl17) begin
               if (digitrec_LessThan_1U_24_4_41_out1) begin
                  knn_set_6_if_3_wen0_wire = 1'b1;
               end
               else begin
                  knn_set_6_if_3_wen0_wire = 1'b0;
               end
            end
            else begin
               knn_set_6_if_3_wen0_wire = 1'b0;
            end
         end

         // resource: mux_1bx2i
         always @(gs_ctrl22 or digitrec_Eqi7u4_4_9_out1)
          begin :drive_knn_set_7_if_1_wen0_wire
            if (gs_ctrl22) begin
               knn_set_7_if_1_wen0_wire = digitrec_Eqi7u4_4_9_out1;
            end
            else begin
               knn_set_7_if_1_wen0_wire = 1'b0;
            end
         end

         // resource: mux_1bx2i
         always @(gs_ctrl17 or digitrec_LessThan_1U_24_4_42_out1)
          begin :drive_knn_set_7_if_3_wen0_wire
            if (gs_ctrl17) begin
               if (digitrec_LessThan_1U_24_4_42_out1) begin
                  knn_set_7_if_3_wen0_wire = 1'b1;
               end
               else begin
                  knn_set_7_if_3_wen0_wire = 1'b0;
               end
            end
            else begin
               knn_set_7_if_3_wen0_wire = 1'b0;
            end
         end

         // resource: mux_1bx2i
         always @(gs_ctrl25 or digitrec_Eqi8u4_4_11_out1)
          begin :drive_knn_set_8_if_1_wen0_wire
            if (gs_ctrl25) begin
               knn_set_8_if_1_wen0_wire = digitrec_Eqi8u4_4_11_out1;
            end
            else begin
               knn_set_8_if_1_wen0_wire = 1'b0;
            end
         end

         // resource: mux_1bx2i
         always @(gs_ctrl17 or digitrec_LessThan_1U_24_4_43_out1)
          begin :drive_knn_set_8_if_3_wen0_wire
            if (gs_ctrl17) begin
               if (digitrec_LessThan_1U_24_4_43_out1) begin
                  knn_set_8_if_3_wen0_wire = 1'b1;
               end
               else begin
                  knn_set_8_if_3_wen0_wire = 1'b0;
               end
            end
            else begin
               knn_set_8_if_3_wen0_wire = 1'b0;
            end
         end

         // resource: mux_1bx2i
         always @(gs_ctrl28 or digitrec_Eqi9u4_4_13_out1)
          begin :drive_knn_set_9_if_1_wen0_wire
            if (gs_ctrl28) begin
               knn_set_9_if_1_wen0_wire = digitrec_Eqi9u4_4_13_out1;
            end
            else begin
               knn_set_9_if_1_wen0_wire = 1'b0;
            end
         end

         // resource: mux_1bx2i
         always @(gs_ctrl17 or digitrec_LessThan_1U_24_4_44_out1)
          begin :drive_knn_set_9_if_3_wen0_wire
            if (gs_ctrl17) begin
               if (digitrec_LessThan_1U_24_4_44_out1) begin
                  knn_set_9_if_3_wen0_wire = 1'b1;
               end
               else begin
                  knn_set_9_if_3_wen0_wire = 1'b0;
               end
            end
            else begin
               knn_set_9_if_3_wen0_wire = 1'b0;
            end
         end

         // resource: regr_49b
         always @(posedge clk)
          begin :drive_s_reg_28
            case (global_state) 

               5'd00, 5'd01, 5'd28: begin
                  s_reg_28 <= core_cmd_rs1_i[48:0];
               end
               
            endcase

         end

         // resource: regr_5b
         always @(posedge clk)
          begin :drive_s_reg_29
            case (global_state) 

               5'd00, 5'd01, 5'd28: begin
                  s_reg_29 <= core_cmd_inst_rd_i;
               end
               
            endcase

         end

         // resource: mux_5bx2i
         // resource: regr_5b
         always @(posedge clk)
          begin :drive_s_reg_30
            case (global_state) 

               5'd02: begin
                  s_reg_30 <= 5'd00;
               end
               
               5'd11: begin
                  s_reg_30 <= s_reg_31;
               end
               
            endcase

         end

         // resource: regr_5b
         always @(posedge clk)
          begin :drive_s_reg_31
            case (global_state) 

               5'd09: begin
                  s_reg_31 <= digitrec_Add2i1s5_4_10_out1;
               end
               
            endcase

         end

         // resource: mux_12bx2i
         // resource: regr_12b
         always @(posedge clk)
          begin :drive_s_reg_32
            case (global_state) 

               5'd10: begin
                  s_reg_32 <= 12'd0000;
               end
               
               5'd13: begin
                  s_reg_32 <= s_reg_33;
               end
               
            endcase

         end

         // resource: regr_12b
         always @(posedge clk)
          begin :drive_s_reg_33
            s_reg_33 <= digitrec_Add2i1s12_4_29_out1;
         end

         // resource: regr_5b
         always @(posedge clk)
          begin :drive_s_reg_35
            case (global_state) 

               5'd13, 5'd14: begin
                  s_reg_35 <= digitrec_Add2i1s5_4_10_out1;
               end
               
            endcase

         end

         // resource: mux_6bx2i
         // resource: regr_6b
         always @(posedge clk)
          begin :drive_s_reg_36
            case (global_state) 

               5'd14: begin
                  s_reg_36 <= 6'd50;
               end
               
               5'd16: begin
                  s_reg_36 <= digitrec_N_Mux_6_2_28_4_57_out1;
               end
               
            endcase

         end

         // resource: mux_4bx2i
         // resource: regr_4b
         always @(posedge clk)
          begin :drive_s_reg_37
            case (global_state) 

               5'd14: begin
                  s_reg_37 <= 4'd10;
               end
               
               5'd16: begin
                  s_reg_37 <= s_reg_45;
               end
               
            endcase

         end

         // resource: regr_5b
         always @(posedge clk)
          begin :drive_s_reg_41
            case (global_state) 

               5'd14, 5'd16: begin
                  s_reg_41 <= digitrec_Add2i1s5_4_10_out1;
               end
               
            endcase

         end

         // resource: regr_1b
         always @(posedge clk)
          begin :drive_s_reg_42
            s_reg_42 <= digitrec_Lti10s5_4_49_out1;
         end

         // resource: mux_4bx2i
         // resource: regr_4b
         always @(posedge clk)
          begin :drive_s_reg_43
            case (global_state) 

               5'd14: begin
                  s_reg_43 <= 4'd00;
               end
               
               5'd16: begin
                  s_reg_43 <= s_reg_41[3:0];
               end
               
            endcase

         end

         // resource: regr_1b
         always @(posedge clk)
          begin :drive_s_reg_44
            s_reg_44 <= digitrec_LessThan_1U_24_4_51_out1;
         end

         // resource: regr_4b
         always @(posedge clk)
          begin :drive_s_reg_45
            case (global_state) 

               5'd15: begin
                  s_reg_45 <= digitrec_N_Mux_4_2_27_4_52_out1;
               end
               
            endcase

         end

         // resource: regr_1b
         always @(posedge clk)
          begin :drive_s_reg_46
            s_reg_46 <= digitrec_OrReduction_1U_1_4_53_out1;
         end

         // resource: mux_4bx2i
         // resource: regr_4b
         always @(posedge clk)
          begin :drive_s_reg_49
            case (global_state) 

               5'd23: begin
                  s_reg_49 <= 4'd00;
               end
               
               5'd25: begin
                  s_reg_49 <= s_reg_54;
               end
               
            endcase

         end

         // resource: mux_32bx2i
         // resource: regr_32b
         always @(posedge clk)
          begin :drive_s_reg_50
            case (global_state) 

               5'd23: begin
                  s_reg_50 <= 32'd0000000000;
               end
               
               5'd25: begin
                  s_reg_50 <= digitrec_N_Mux_32_2_31_4_72_out1;
               end
               
            endcase

         end

         // resource: mux_5bx2i
         // resource: regr_5b
         always @(posedge clk)
          begin :drive_s_reg_51
            case (global_state) 

               5'd23: begin
                  s_reg_51 <= 5'd00;
               end
               
               5'd25: begin
                  s_reg_51 <= s_reg_52;
               end
               
            endcase

         end

         // resource: regr_5b
         always @(posedge clk)
          begin :drive_s_reg_52
            s_reg_52 <= digitrec_Add2i1s5_4_10_out1;
         end

         // resource: regr_1b
         always @(posedge clk)
          begin :drive_s_reg_53
            s_reg_53 <= digitrec_GreaterThan_1U_30_4_69_out1;
         end

         // resource: regr_4b
         always @(posedge clk)
          begin :drive_s_reg_54
            s_reg_54 <= digitrec_N_Mux_4_2_27_4_70_out1;
         end

         // resource: mux_4bx2i
         always @(gs_ctrl30 or s_reg_31[3:0])
          begin :drive_digitrec_OrReduction_1U_1_4_1_in1
            if (gs_ctrl30) begin
               digitrec_OrReduction_1U_1_4_1_in1 = s_reg_31[3:0];
            end
            else begin
               digitrec_OrReduction_1U_1_4_1_in1 = 4'd00;
            end
         end

         // resource: [0]::knn_set  instance: digitrec_OrReduction_1U_1_4_1
         assign digitrec_OrReduction_1U_1_4_1_out1 = |digitrec_OrReduction_1U_1_4_1_in1;

         // resource: [0]::knn_set  instance: digitrec_Eqi1u4_4_2
         assign digitrec_Eqi1u4_4_2_out1 = digitrec_OrReduction_1U_1_4_1_in1 == 4'd01;

         // resource: mux_1bx2i
         always @(gs_ctrl32 or s_reg_46 or digitrec_OrReduction_1U_1_4_1_out1)
          begin :drive_digitrec_Not_1U_2_4_3_in1
            if (gs_ctrl32) begin
               /* state33 */
               digitrec_Not_1U_2_4_3_in1 = s_reg_46;
            end
            else begin
               digitrec_Not_1U_2_4_3_in1 = digitrec_OrReduction_1U_1_4_1_out1;
            end
         end

         // resource: [0]::knn_set  instance: digitrec_Not_1U_2_4_3
         assign digitrec_Not_1U_2_4_3_out1 = !digitrec_Not_1U_2_4_3_in1;

         // resource: [0]::knn_set  instance: digitrec_Eqi2u4_4_4
         assign digitrec_Eqi2u4_4_4_out1 = s_reg_30[3:0] == 4'd02;

         // resource: [0]::knn_set  instance: digitrec_Eqi3u4_4_5
         assign digitrec_Eqi3u4_4_5_out1 = s_reg_30[3:0] == 4'd03;

         // resource: [0]::knn_set  instance: digitrec_Eqi4u4_4_6
         assign digitrec_Eqi4u4_4_6_out1 = s_reg_30[3:0] == 4'd04;

         // resource: [0]::knn_set  instance: digitrec_Eqi5u4_4_7
         assign digitrec_Eqi5u4_4_7_out1 = s_reg_30[3:0] == 4'd05;

         // resource: [0]::knn_set  instance: digitrec_Eqi6u4_4_8
         assign digitrec_Eqi6u4_4_8_out1 = s_reg_30[3:0] == 4'd06;

         // resource: [0]::knn_set  instance: digitrec_Eqi7u4_4_9
         assign digitrec_Eqi7u4_4_9_out1 = s_reg_30[3:0] == 4'd07;

         // resource: mux_5bx5i
         always @(gs_ctrl33 or s_reg_30 or digitrec_Lti10s5_4_47_out1 or s_reg_35 or s_reg_41 or s_reg_51)
          begin :drive_digitrec_Add2i1s5_4_10_in1
            case (gs_ctrl33) 

               3'd1: begin
                  digitrec_Add2i1s5_4_10_in1 = 5'd00;
               end
               
               3'd2: begin
                  if (digitrec_Lti10s5_4_47_out1) begin
                     digitrec_Add2i1s5_4_10_in1 = s_reg_35;
                  end
                  else begin
                     digitrec_Add2i1s5_4_10_in1 = 5'd00;
                  end
               end
               
               3'd3: begin
                  digitrec_Add2i1s5_4_10_in1 = s_reg_41;
               end
               
               3'd4: begin
                  digitrec_Add2i1s5_4_10_in1 = s_reg_51;
               end
               
               default: begin
                  digitrec_Add2i1s5_4_10_in1 = s_reg_30;
               end
               
            endcase

         end

         // resource: digitrec_Add2i1s5_4  instance: digitrec_Add2i1s5_4_10
         assign digitrec_Add2i1s5_4_10_out1 = digitrec_Add2i1s5_4_10_in1 + 5'd01;

         // resource: [0]::knn_set  instance: digitrec_Eqi8u4_4_11
         assign digitrec_Eqi8u4_4_11_out1 = s_reg_30[3:0] == 4'd08;

         // resource: digitrec_Lti10s5_4  instance: digitrec_Lti10s5_4_12
         assign digitrec_Lti10s5_4_12_out1 = s_reg_31[4] ^ s_reg_31 < 5'd10;

         // resource: [0]::knn_set  instance: digitrec_Eqi9u4_4_13
         assign digitrec_Eqi9u4_4_13_out1 = s_reg_30[3:0] == 4'd09;

         // resource: mux_11bx2i
         always @(gs_ctrl17 or s_reg_33[10:0])
          begin :drive_digitrec_ROM_1800X49_training_data_0_training_data_0_21_in1
            if (gs_ctrl17) begin
               digitrec_ROM_1800X49_training_data_0_training_data_0_21_in1 = s_reg_33[10:0];
            end
            else begin
               digitrec_ROM_1800X49_training_data_0_training_data_0_21_in1 = 11'd0000;
            end
         end

         // resource: mux_49bx2i
         always @(gs_ctrl17 or digitrec_ROM_1800X49_training_data_5_training_data_5_36_out1 or digitrec_ROM_1800X49_training_data_0_training_data_0_21_out1)
          begin :drive_digitrec_Xor_49U_32_4_14_in2
            if (gs_ctrl17) begin
               digitrec_Xor_49U_32_4_14_in2 = digitrec_ROM_1800X49_training_data_5_training_data_5_36_out1;
            end
            else begin
               digitrec_Xor_49U_32_4_14_in2 = digitrec_ROM_1800X49_training_data_0_training_data_0_21_out1;
            end
         end

         // resource: digitrec_Xor_49U_32_4  instance: digitrec_Xor_49U_32_4_14
         assign digitrec_Xor_49U_32_4_14_out1 = digitrec_Xor_49U_32_4_14_in2 ^ s_reg_28;

         // resource: mux_49bx2i
         always @(gs_ctrl17 or digitrec_ROM_1800X49_training_data_6_training_data_6_37_out1 or digitrec_ROM_1800X49_training_data_1_training_data_1_22_out1)
          begin :drive_digitrec_Xor_49U_32_4_15_in2
            if (gs_ctrl17) begin
               digitrec_Xor_49U_32_4_15_in2 = digitrec_ROM_1800X49_training_data_6_training_data_6_37_out1;
            end
            else begin
               digitrec_Xor_49U_32_4_15_in2 = digitrec_ROM_1800X49_training_data_1_training_data_1_22_out1;
            end
         end

         // resource: digitrec_Xor_49U_32_4  instance: digitrec_Xor_49U_32_4_15
         assign digitrec_Xor_49U_32_4_15_out1 = digitrec_Xor_49U_32_4_15_in2 ^ s_reg_28;

         // resource: mux_49bx2i
         always @(gs_ctrl17 or digitrec_ROM_1800X49_training_data_7_training_data_7_38_out1 or digitrec_ROM_1800X49_training_data_2_training_data_2_23_out1)
          begin :drive_digitrec_Xor_49U_32_4_16_in2
            if (gs_ctrl17) begin
               digitrec_Xor_49U_32_4_16_in2 = digitrec_ROM_1800X49_training_data_7_training_data_7_38_out1;
            end
            else begin
               digitrec_Xor_49U_32_4_16_in2 = digitrec_ROM_1800X49_training_data_2_training_data_2_23_out1;
            end
         end

         // resource: digitrec_Xor_49U_32_4  instance: digitrec_Xor_49U_32_4_16
         assign digitrec_Xor_49U_32_4_16_out1 = digitrec_Xor_49U_32_4_16_in2 ^ s_reg_28;

         // resource: mux_49bx2i
         always @(gs_ctrl17 or digitrec_ROM_1800X49_training_data_8_training_data_8_39_out1 or digitrec_ROM_1800X49_training_data_3_training_data_3_24_out1)
          begin :drive_digitrec_Xor_49U_32_4_17_in2
            if (gs_ctrl17) begin
               digitrec_Xor_49U_32_4_17_in2 = digitrec_ROM_1800X49_training_data_8_training_data_8_39_out1;
            end
            else begin
               digitrec_Xor_49U_32_4_17_in2 = digitrec_ROM_1800X49_training_data_3_training_data_3_24_out1;
            end
         end

         // resource: digitrec_Xor_49U_32_4  instance: digitrec_Xor_49U_32_4_17
         assign digitrec_Xor_49U_32_4_17_out1 = digitrec_Xor_49U_32_4_17_in2 ^ s_reg_28;

         // resource: mux_49bx2i
         always @(gs_ctrl17 or digitrec_ROM_1800X49_training_data_9_training_data_9_40_out1 or digitrec_ROM_1800X49_training_data_4_training_data_4_25_out1)
          begin :drive_digitrec_Xor_49U_32_4_18_in2
            if (gs_ctrl17) begin
               digitrec_Xor_49U_32_4_18_in2 = digitrec_ROM_1800X49_training_data_9_training_data_9_40_out1;
            end
            else begin
               digitrec_Xor_49U_32_4_18_in2 = digitrec_ROM_1800X49_training_data_4_training_data_4_25_out1;
            end
         end

         // resource: digitrec_Xor_49U_32_4  instance: digitrec_Xor_49U_32_4_18
         assign digitrec_Xor_49U_32_4_18_out1 = digitrec_Xor_49U_32_4_18_in2 ^ s_reg_28;

         assign digitrec_gen000001_4_19_in48 = digitrec_Xor_49U_32_4_14_out1[1];

         assign digitrec_gen000001_4_19_in47 = digitrec_Xor_49U_32_4_14_out1[2];

         assign digitrec_gen000001_4_19_in46 = digitrec_Xor_49U_32_4_14_out1[3];

         assign digitrec_gen000001_4_19_in45 = digitrec_Xor_49U_32_4_14_out1[4];

         assign digitrec_gen000001_4_19_in44 = digitrec_Xor_49U_32_4_14_out1[5];

         assign digitrec_gen000001_4_19_in43 = digitrec_Xor_49U_32_4_14_out1[6];

         assign digitrec_gen000001_4_19_in42 = digitrec_Xor_49U_32_4_14_out1[7];

         assign digitrec_gen000001_4_19_in41 = digitrec_Xor_49U_32_4_14_out1[8];

         assign digitrec_gen000001_4_19_in40 = digitrec_Xor_49U_32_4_14_out1[9];

         assign digitrec_gen000001_4_19_in39 = digitrec_Xor_49U_32_4_14_out1[10];

         assign digitrec_gen000001_4_19_in38 = digitrec_Xor_49U_32_4_14_out1[11];

         assign digitrec_gen000001_4_19_in37 = digitrec_Xor_49U_32_4_14_out1[12];

         assign digitrec_gen000001_4_19_in36 = digitrec_Xor_49U_32_4_14_out1[13];

         assign digitrec_gen000001_4_19_in35 = digitrec_Xor_49U_32_4_14_out1[14];

         assign digitrec_gen000001_4_19_in34 = digitrec_Xor_49U_32_4_14_out1[15];

         assign digitrec_gen000001_4_19_in33 = digitrec_Xor_49U_32_4_14_out1[16];

         assign digitrec_gen000001_4_19_in32 = digitrec_Xor_49U_32_4_14_out1[17];

         assign digitrec_gen000001_4_19_in31 = digitrec_Xor_49U_32_4_14_out1[18];

         assign digitrec_gen000001_4_19_in30 = digitrec_Xor_49U_32_4_14_out1[19];

         assign digitrec_gen000001_4_19_in29 = digitrec_Xor_49U_32_4_14_out1[20];

         assign digitrec_gen000001_4_19_in28 = digitrec_Xor_49U_32_4_14_out1[21];

         assign digitrec_gen000001_4_19_in27 = digitrec_Xor_49U_32_4_14_out1[22];

         assign digitrec_gen000001_4_19_in26 = digitrec_Xor_49U_32_4_14_out1[23];

         assign digitrec_gen000001_4_19_in25 = digitrec_Xor_49U_32_4_14_out1[24];

         assign digitrec_gen000001_4_19_in24 = digitrec_Xor_49U_32_4_14_out1[25];

         assign digitrec_gen000001_4_19_in23 = digitrec_Xor_49U_32_4_14_out1[26];

         assign digitrec_gen000001_4_19_in22 = digitrec_Xor_49U_32_4_14_out1[27];

         assign digitrec_gen000001_4_19_in21 = digitrec_Xor_49U_32_4_14_out1[28];

         assign digitrec_gen000001_4_19_in20 = digitrec_Xor_49U_32_4_14_out1[29];

         assign digitrec_gen000001_4_19_in19 = digitrec_Xor_49U_32_4_14_out1[30];

         assign digitrec_gen000001_4_19_in18 = digitrec_Xor_49U_32_4_14_out1[31];

         assign digitrec_gen000001_4_19_in17 = digitrec_Xor_49U_32_4_14_out1[32];

         assign digitrec_gen000001_4_19_in16 = digitrec_Xor_49U_32_4_14_out1[33];

         assign digitrec_gen000001_4_19_in15 = digitrec_Xor_49U_32_4_14_out1[34];

         assign digitrec_gen000001_4_19_in14 = digitrec_Xor_49U_32_4_14_out1[35];

         assign digitrec_gen000001_4_19_in13 = digitrec_Xor_49U_32_4_14_out1[36];

         assign digitrec_gen000001_4_19_in12 = digitrec_Xor_49U_32_4_14_out1[37];

         assign digitrec_gen000001_4_19_in11 = digitrec_Xor_49U_32_4_14_out1[38];

         assign digitrec_gen000001_4_19_in10 = digitrec_Xor_49U_32_4_14_out1[39];

         assign digitrec_gen000001_4_19_in9 = digitrec_Xor_49U_32_4_14_out1[40];

         assign digitrec_gen000001_4_19_in8 = digitrec_Xor_49U_32_4_14_out1[41];

         assign digitrec_gen000001_4_19_in7 = digitrec_Xor_49U_32_4_14_out1[42];

         assign digitrec_gen000001_4_19_in6 = digitrec_Xor_49U_32_4_14_out1[43];

         assign digitrec_gen000001_4_19_in5 = digitrec_Xor_49U_32_4_14_out1[44];

         assign digitrec_gen000001_4_19_in4 = digitrec_Xor_49U_32_4_14_out1[45];

         assign digitrec_gen000001_4_19_in3 = digitrec_Xor_49U_32_4_14_out1[46];

         assign digitrec_gen000001_4_19_in2 = digitrec_Xor_49U_32_4_14_out1[47];

         assign digitrec_gen000001_4_19_in1 = digitrec_Xor_49U_32_4_14_out1[48];

         // resource: digitrec_gen000001_4  instance: digitrec_gen000001_4_19
         assign digitrec_gen000001_4_19_out1 = {5'b00000, digitrec_Xor_49U_32_4_14_out1[0]} + {5'b00000, digitrec_gen000001_4_19_in48} + {5'b00000, digitrec_gen000001_4_19_in47} + {5'b00000, digitrec_gen000001_4_19_in46} + {5'b00000, digitrec_gen000001_4_19_in45} + {5'b00000, digitrec_gen000001_4_19_in44} + {5'b00000, digitrec_gen000001_4_19_in43} + {5'b00000, digitrec_gen000001_4_19_in42} + {5'b00000
             , digitrec_gen000001_4_19_in41} + {5'b00000, digitrec_gen000001_4_19_in40} + {5'b00000, digitrec_gen000001_4_19_in39} + {5'b00000, digitrec_gen000001_4_19_in38} + {5'b00000, digitrec_gen000001_4_19_in37} + {5'b00000, digitrec_gen000001_4_19_in36} + {5'b00000, digitrec_gen000001_4_19_in35} + {5'b00000, digitrec_gen000001_4_19_in34} + {5'b00000, digitrec_gen000001_4_19_in33} + {5'b00000, digitrec_gen000001_4_19_in32} + {5'b00000, digitrec_gen000001_4_19_in31} + {5'b00000
             , digitrec_gen000001_4_19_in30} + {5'b00000, digitrec_gen000001_4_19_in29} + {5'b00000, digitrec_gen000001_4_19_in28} + {5'b00000, digitrec_gen000001_4_19_in27} + {5'b00000, digitrec_gen000001_4_19_in26} + {5'b00000, digitrec_gen000001_4_19_in25} + {5'b00000, digitrec_gen000001_4_19_in24} + {5'b00000, digitrec_gen000001_4_19_in23} + {5'b00000, digitrec_gen000001_4_19_in22} + {5'b00000, digitrec_gen000001_4_19_in21} + {5'b00000, digitrec_gen000001_4_19_in20} + {5'b00000
             , digitrec_gen000001_4_19_in19} + {5'b00000, digitrec_gen000001_4_19_in18} + {5'b00000, digitrec_gen000001_4_19_in17} + {5'b00000, digitrec_gen000001_4_19_in16} + {5'b00000, digitrec_gen000001_4_19_in15} + {5'b00000, digitrec_gen000001_4_19_in14} + {5'b00000, digitrec_gen000001_4_19_in13} + {5'b00000, digitrec_gen000001_4_19_in12} + {5'b00000, digitrec_gen000001_4_19_in11} + {5'b00000, digitrec_gen000001_4_19_in10} + {5'b00000, digitrec_gen000001_4_19_in9} + {5'b00000
             , digitrec_gen000001_4_19_in8} + {5'b00000, digitrec_gen000001_4_19_in7} + {5'b00000, digitrec_gen000001_4_19_in6} + {5'b00000, digitrec_gen000001_4_19_in5} + {5'b00000, digitrec_gen000001_4_19_in4} + {5'b00000, digitrec_gen000001_4_19_in3} + {5'b00000, digitrec_gen000001_4_19_in2} + {5'b00000, digitrec_gen000001_4_19_in1};

         assign digitrec_gen000001_4_20_in48 = digitrec_Xor_49U_32_4_15_out1[1];

         assign digitrec_gen000001_4_20_in47 = digitrec_Xor_49U_32_4_15_out1[2];

         assign digitrec_gen000001_4_20_in46 = digitrec_Xor_49U_32_4_15_out1[3];

         assign digitrec_gen000001_4_20_in45 = digitrec_Xor_49U_32_4_15_out1[4];

         assign digitrec_gen000001_4_20_in44 = digitrec_Xor_49U_32_4_15_out1[5];

         assign digitrec_gen000001_4_20_in43 = digitrec_Xor_49U_32_4_15_out1[6];

         assign digitrec_gen000001_4_20_in42 = digitrec_Xor_49U_32_4_15_out1[7];

         assign digitrec_gen000001_4_20_in41 = digitrec_Xor_49U_32_4_15_out1[8];

         assign digitrec_gen000001_4_20_in40 = digitrec_Xor_49U_32_4_15_out1[9];

         assign digitrec_gen000001_4_20_in39 = digitrec_Xor_49U_32_4_15_out1[10];

         assign digitrec_gen000001_4_20_in38 = digitrec_Xor_49U_32_4_15_out1[11];

         assign digitrec_gen000001_4_20_in37 = digitrec_Xor_49U_32_4_15_out1[12];

         assign digitrec_gen000001_4_20_in36 = digitrec_Xor_49U_32_4_15_out1[13];

         assign digitrec_gen000001_4_20_in35 = digitrec_Xor_49U_32_4_15_out1[14];

         assign digitrec_gen000001_4_20_in34 = digitrec_Xor_49U_32_4_15_out1[15];

         assign digitrec_gen000001_4_20_in33 = digitrec_Xor_49U_32_4_15_out1[16];

         assign digitrec_gen000001_4_20_in32 = digitrec_Xor_49U_32_4_15_out1[17];

         assign digitrec_gen000001_4_20_in31 = digitrec_Xor_49U_32_4_15_out1[18];

         assign digitrec_gen000001_4_20_in30 = digitrec_Xor_49U_32_4_15_out1[19];

         assign digitrec_gen000001_4_20_in29 = digitrec_Xor_49U_32_4_15_out1[20];

         assign digitrec_gen000001_4_20_in28 = digitrec_Xor_49U_32_4_15_out1[21];

         assign digitrec_gen000001_4_20_in27 = digitrec_Xor_49U_32_4_15_out1[22];

         assign digitrec_gen000001_4_20_in26 = digitrec_Xor_49U_32_4_15_out1[23];

         assign digitrec_gen000001_4_20_in25 = digitrec_Xor_49U_32_4_15_out1[24];

         assign digitrec_gen000001_4_20_in24 = digitrec_Xor_49U_32_4_15_out1[25];

         assign digitrec_gen000001_4_20_in23 = digitrec_Xor_49U_32_4_15_out1[26];

         assign digitrec_gen000001_4_20_in22 = digitrec_Xor_49U_32_4_15_out1[27];

         assign digitrec_gen000001_4_20_in21 = digitrec_Xor_49U_32_4_15_out1[28];

         assign digitrec_gen000001_4_20_in20 = digitrec_Xor_49U_32_4_15_out1[29];

         assign digitrec_gen000001_4_20_in19 = digitrec_Xor_49U_32_4_15_out1[30];

         assign digitrec_gen000001_4_20_in18 = digitrec_Xor_49U_32_4_15_out1[31];

         assign digitrec_gen000001_4_20_in17 = digitrec_Xor_49U_32_4_15_out1[32];

         assign digitrec_gen000001_4_20_in16 = digitrec_Xor_49U_32_4_15_out1[33];

         assign digitrec_gen000001_4_20_in15 = digitrec_Xor_49U_32_4_15_out1[34];

         assign digitrec_gen000001_4_20_in14 = digitrec_Xor_49U_32_4_15_out1[35];

         assign digitrec_gen000001_4_20_in13 = digitrec_Xor_49U_32_4_15_out1[36];

         assign digitrec_gen000001_4_20_in12 = digitrec_Xor_49U_32_4_15_out1[37];

         assign digitrec_gen000001_4_20_in11 = digitrec_Xor_49U_32_4_15_out1[38];

         assign digitrec_gen000001_4_20_in10 = digitrec_Xor_49U_32_4_15_out1[39];

         assign digitrec_gen000001_4_20_in9 = digitrec_Xor_49U_32_4_15_out1[40];

         assign digitrec_gen000001_4_20_in8 = digitrec_Xor_49U_32_4_15_out1[41];

         assign digitrec_gen000001_4_20_in7 = digitrec_Xor_49U_32_4_15_out1[42];

         assign digitrec_gen000001_4_20_in6 = digitrec_Xor_49U_32_4_15_out1[43];

         assign digitrec_gen000001_4_20_in5 = digitrec_Xor_49U_32_4_15_out1[44];

         assign digitrec_gen000001_4_20_in4 = digitrec_Xor_49U_32_4_15_out1[45];

         assign digitrec_gen000001_4_20_in3 = digitrec_Xor_49U_32_4_15_out1[46];

         assign digitrec_gen000001_4_20_in2 = digitrec_Xor_49U_32_4_15_out1[47];

         assign digitrec_gen000001_4_20_in1 = digitrec_Xor_49U_32_4_15_out1[48];

         // resource: digitrec_gen000001_4  instance: digitrec_gen000001_4_20
         assign digitrec_gen000001_4_20_out1 = {5'b00000, digitrec_Xor_49U_32_4_15_out1[0]} + {5'b00000, digitrec_gen000001_4_20_in48} + {5'b00000, digitrec_gen000001_4_20_in47} + {5'b00000, digitrec_gen000001_4_20_in46} + {5'b00000, digitrec_gen000001_4_20_in45} + {5'b00000, digitrec_gen000001_4_20_in44} + {5'b00000, digitrec_gen000001_4_20_in43} + {5'b00000, digitrec_gen000001_4_20_in42} + {5'b00000
             , digitrec_gen000001_4_20_in41} + {5'b00000, digitrec_gen000001_4_20_in40} + {5'b00000, digitrec_gen000001_4_20_in39} + {5'b00000, digitrec_gen000001_4_20_in38} + {5'b00000, digitrec_gen000001_4_20_in37} + {5'b00000, digitrec_gen000001_4_20_in36} + {5'b00000, digitrec_gen000001_4_20_in35} + {5'b00000, digitrec_gen000001_4_20_in34} + {5'b00000, digitrec_gen000001_4_20_in33} + {5'b00000, digitrec_gen000001_4_20_in32} + {5'b00000, digitrec_gen000001_4_20_in31} + {5'b00000
             , digitrec_gen000001_4_20_in30} + {5'b00000, digitrec_gen000001_4_20_in29} + {5'b00000, digitrec_gen000001_4_20_in28} + {5'b00000, digitrec_gen000001_4_20_in27} + {5'b00000, digitrec_gen000001_4_20_in26} + {5'b00000, digitrec_gen000001_4_20_in25} + {5'b00000, digitrec_gen000001_4_20_in24} + {5'b00000, digitrec_gen000001_4_20_in23} + {5'b00000, digitrec_gen000001_4_20_in22} + {5'b00000, digitrec_gen000001_4_20_in21} + {5'b00000, digitrec_gen000001_4_20_in20} + {5'b00000
             , digitrec_gen000001_4_20_in19} + {5'b00000, digitrec_gen000001_4_20_in18} + {5'b00000, digitrec_gen000001_4_20_in17} + {5'b00000, digitrec_gen000001_4_20_in16} + {5'b00000, digitrec_gen000001_4_20_in15} + {5'b00000, digitrec_gen000001_4_20_in14} + {5'b00000, digitrec_gen000001_4_20_in13} + {5'b00000, digitrec_gen000001_4_20_in12} + {5'b00000, digitrec_gen000001_4_20_in11} + {5'b00000, digitrec_gen000001_4_20_in10} + {5'b00000, digitrec_gen000001_4_20_in9} + {5'b00000
             , digitrec_gen000001_4_20_in8} + {5'b00000, digitrec_gen000001_4_20_in7} + {5'b00000, digitrec_gen000001_4_20_in6} + {5'b00000, digitrec_gen000001_4_20_in5} + {5'b00000, digitrec_gen000001_4_20_in4} + {5'b00000, digitrec_gen000001_4_20_in3} + {5'b00000, digitrec_gen000001_4_20_in2} + {5'b00000, digitrec_gen000001_4_20_in1};

         assign digitrec_gen000001_4_21_in48 = digitrec_Xor_49U_32_4_16_out1[1];

         assign digitrec_gen000001_4_21_in47 = digitrec_Xor_49U_32_4_16_out1[2];

         assign digitrec_gen000001_4_21_in46 = digitrec_Xor_49U_32_4_16_out1[3];

         assign digitrec_gen000001_4_21_in45 = digitrec_Xor_49U_32_4_16_out1[4];

         assign digitrec_gen000001_4_21_in44 = digitrec_Xor_49U_32_4_16_out1[5];

         assign digitrec_gen000001_4_21_in43 = digitrec_Xor_49U_32_4_16_out1[6];

         assign digitrec_gen000001_4_21_in42 = digitrec_Xor_49U_32_4_16_out1[7];

         assign digitrec_gen000001_4_21_in41 = digitrec_Xor_49U_32_4_16_out1[8];

         assign digitrec_gen000001_4_21_in40 = digitrec_Xor_49U_32_4_16_out1[9];

         assign digitrec_gen000001_4_21_in39 = digitrec_Xor_49U_32_4_16_out1[10];

         assign digitrec_gen000001_4_21_in38 = digitrec_Xor_49U_32_4_16_out1[11];

         assign digitrec_gen000001_4_21_in37 = digitrec_Xor_49U_32_4_16_out1[12];

         assign digitrec_gen000001_4_21_in36 = digitrec_Xor_49U_32_4_16_out1[13];

         assign digitrec_gen000001_4_21_in35 = digitrec_Xor_49U_32_4_16_out1[14];

         assign digitrec_gen000001_4_21_in34 = digitrec_Xor_49U_32_4_16_out1[15];

         assign digitrec_gen000001_4_21_in33 = digitrec_Xor_49U_32_4_16_out1[16];

         assign digitrec_gen000001_4_21_in32 = digitrec_Xor_49U_32_4_16_out1[17];

         assign digitrec_gen000001_4_21_in31 = digitrec_Xor_49U_32_4_16_out1[18];

         assign digitrec_gen000001_4_21_in30 = digitrec_Xor_49U_32_4_16_out1[19];

         assign digitrec_gen000001_4_21_in29 = digitrec_Xor_49U_32_4_16_out1[20];

         assign digitrec_gen000001_4_21_in28 = digitrec_Xor_49U_32_4_16_out1[21];

         assign digitrec_gen000001_4_21_in27 = digitrec_Xor_49U_32_4_16_out1[22];

         assign digitrec_gen000001_4_21_in26 = digitrec_Xor_49U_32_4_16_out1[23];

         assign digitrec_gen000001_4_21_in25 = digitrec_Xor_49U_32_4_16_out1[24];

         assign digitrec_gen000001_4_21_in24 = digitrec_Xor_49U_32_4_16_out1[25];

         assign digitrec_gen000001_4_21_in23 = digitrec_Xor_49U_32_4_16_out1[26];

         assign digitrec_gen000001_4_21_in22 = digitrec_Xor_49U_32_4_16_out1[27];

         assign digitrec_gen000001_4_21_in21 = digitrec_Xor_49U_32_4_16_out1[28];

         assign digitrec_gen000001_4_21_in20 = digitrec_Xor_49U_32_4_16_out1[29];

         assign digitrec_gen000001_4_21_in19 = digitrec_Xor_49U_32_4_16_out1[30];

         assign digitrec_gen000001_4_21_in18 = digitrec_Xor_49U_32_4_16_out1[31];

         assign digitrec_gen000001_4_21_in17 = digitrec_Xor_49U_32_4_16_out1[32];

         assign digitrec_gen000001_4_21_in16 = digitrec_Xor_49U_32_4_16_out1[33];

         assign digitrec_gen000001_4_21_in15 = digitrec_Xor_49U_32_4_16_out1[34];

         assign digitrec_gen000001_4_21_in14 = digitrec_Xor_49U_32_4_16_out1[35];

         assign digitrec_gen000001_4_21_in13 = digitrec_Xor_49U_32_4_16_out1[36];

         assign digitrec_gen000001_4_21_in12 = digitrec_Xor_49U_32_4_16_out1[37];

         assign digitrec_gen000001_4_21_in11 = digitrec_Xor_49U_32_4_16_out1[38];

         assign digitrec_gen000001_4_21_in10 = digitrec_Xor_49U_32_4_16_out1[39];

         assign digitrec_gen000001_4_21_in9 = digitrec_Xor_49U_32_4_16_out1[40];

         assign digitrec_gen000001_4_21_in8 = digitrec_Xor_49U_32_4_16_out1[41];

         assign digitrec_gen000001_4_21_in7 = digitrec_Xor_49U_32_4_16_out1[42];

         assign digitrec_gen000001_4_21_in6 = digitrec_Xor_49U_32_4_16_out1[43];

         assign digitrec_gen000001_4_21_in5 = digitrec_Xor_49U_32_4_16_out1[44];

         assign digitrec_gen000001_4_21_in4 = digitrec_Xor_49U_32_4_16_out1[45];

         assign digitrec_gen000001_4_21_in3 = digitrec_Xor_49U_32_4_16_out1[46];

         assign digitrec_gen000001_4_21_in2 = digitrec_Xor_49U_32_4_16_out1[47];

         assign digitrec_gen000001_4_21_in1 = digitrec_Xor_49U_32_4_16_out1[48];

         // resource: digitrec_gen000001_4  instance: digitrec_gen000001_4_21
         assign digitrec_gen000001_4_21_out1 = {5'b00000, digitrec_Xor_49U_32_4_16_out1[0]} + {5'b00000, digitrec_gen000001_4_21_in48} + {5'b00000, digitrec_gen000001_4_21_in47} + {5'b00000, digitrec_gen000001_4_21_in46} + {5'b00000, digitrec_gen000001_4_21_in45} + {5'b00000, digitrec_gen000001_4_21_in44} + {5'b00000, digitrec_gen000001_4_21_in43} + {5'b00000, digitrec_gen000001_4_21_in42} + {5'b00000
             , digitrec_gen000001_4_21_in41} + {5'b00000, digitrec_gen000001_4_21_in40} + {5'b00000, digitrec_gen000001_4_21_in39} + {5'b00000, digitrec_gen000001_4_21_in38} + {5'b00000, digitrec_gen000001_4_21_in37} + {5'b00000, digitrec_gen000001_4_21_in36} + {5'b00000, digitrec_gen000001_4_21_in35} + {5'b00000, digitrec_gen000001_4_21_in34} + {5'b00000, digitrec_gen000001_4_21_in33} + {5'b00000, digitrec_gen000001_4_21_in32} + {5'b00000, digitrec_gen000001_4_21_in31} + {5'b00000
             , digitrec_gen000001_4_21_in30} + {5'b00000, digitrec_gen000001_4_21_in29} + {5'b00000, digitrec_gen000001_4_21_in28} + {5'b00000, digitrec_gen000001_4_21_in27} + {5'b00000, digitrec_gen000001_4_21_in26} + {5'b00000, digitrec_gen000001_4_21_in25} + {5'b00000, digitrec_gen000001_4_21_in24} + {5'b00000, digitrec_gen000001_4_21_in23} + {5'b00000, digitrec_gen000001_4_21_in22} + {5'b00000, digitrec_gen000001_4_21_in21} + {5'b00000, digitrec_gen000001_4_21_in20} + {5'b00000
             , digitrec_gen000001_4_21_in19} + {5'b00000, digitrec_gen000001_4_21_in18} + {5'b00000, digitrec_gen000001_4_21_in17} + {5'b00000, digitrec_gen000001_4_21_in16} + {5'b00000, digitrec_gen000001_4_21_in15} + {5'b00000, digitrec_gen000001_4_21_in14} + {5'b00000, digitrec_gen000001_4_21_in13} + {5'b00000, digitrec_gen000001_4_21_in12} + {5'b00000, digitrec_gen000001_4_21_in11} + {5'b00000, digitrec_gen000001_4_21_in10} + {5'b00000, digitrec_gen000001_4_21_in9} + {5'b00000
             , digitrec_gen000001_4_21_in8} + {5'b00000, digitrec_gen000001_4_21_in7} + {5'b00000, digitrec_gen000001_4_21_in6} + {5'b00000, digitrec_gen000001_4_21_in5} + {5'b00000, digitrec_gen000001_4_21_in4} + {5'b00000, digitrec_gen000001_4_21_in3} + {5'b00000, digitrec_gen000001_4_21_in2} + {5'b00000, digitrec_gen000001_4_21_in1};

         assign digitrec_gen000001_4_22_in48 = digitrec_Xor_49U_32_4_17_out1[1];

         assign digitrec_gen000001_4_22_in47 = digitrec_Xor_49U_32_4_17_out1[2];

         assign digitrec_gen000001_4_22_in46 = digitrec_Xor_49U_32_4_17_out1[3];

         assign digitrec_gen000001_4_22_in45 = digitrec_Xor_49U_32_4_17_out1[4];

         assign digitrec_gen000001_4_22_in44 = digitrec_Xor_49U_32_4_17_out1[5];

         assign digitrec_gen000001_4_22_in43 = digitrec_Xor_49U_32_4_17_out1[6];

         assign digitrec_gen000001_4_22_in42 = digitrec_Xor_49U_32_4_17_out1[7];

         assign digitrec_gen000001_4_22_in41 = digitrec_Xor_49U_32_4_17_out1[8];

         assign digitrec_gen000001_4_22_in40 = digitrec_Xor_49U_32_4_17_out1[9];

         assign digitrec_gen000001_4_22_in39 = digitrec_Xor_49U_32_4_17_out1[10];

         assign digitrec_gen000001_4_22_in38 = digitrec_Xor_49U_32_4_17_out1[11];

         assign digitrec_gen000001_4_22_in37 = digitrec_Xor_49U_32_4_17_out1[12];

         assign digitrec_gen000001_4_22_in36 = digitrec_Xor_49U_32_4_17_out1[13];

         assign digitrec_gen000001_4_22_in35 = digitrec_Xor_49U_32_4_17_out1[14];

         assign digitrec_gen000001_4_22_in34 = digitrec_Xor_49U_32_4_17_out1[15];

         assign digitrec_gen000001_4_22_in33 = digitrec_Xor_49U_32_4_17_out1[16];

         assign digitrec_gen000001_4_22_in32 = digitrec_Xor_49U_32_4_17_out1[17];

         assign digitrec_gen000001_4_22_in31 = digitrec_Xor_49U_32_4_17_out1[18];

         assign digitrec_gen000001_4_22_in30 = digitrec_Xor_49U_32_4_17_out1[19];

         assign digitrec_gen000001_4_22_in29 = digitrec_Xor_49U_32_4_17_out1[20];

         assign digitrec_gen000001_4_22_in28 = digitrec_Xor_49U_32_4_17_out1[21];

         assign digitrec_gen000001_4_22_in27 = digitrec_Xor_49U_32_4_17_out1[22];

         assign digitrec_gen000001_4_22_in26 = digitrec_Xor_49U_32_4_17_out1[23];

         assign digitrec_gen000001_4_22_in25 = digitrec_Xor_49U_32_4_17_out1[24];

         assign digitrec_gen000001_4_22_in24 = digitrec_Xor_49U_32_4_17_out1[25];

         assign digitrec_gen000001_4_22_in23 = digitrec_Xor_49U_32_4_17_out1[26];

         assign digitrec_gen000001_4_22_in22 = digitrec_Xor_49U_32_4_17_out1[27];

         assign digitrec_gen000001_4_22_in21 = digitrec_Xor_49U_32_4_17_out1[28];

         assign digitrec_gen000001_4_22_in20 = digitrec_Xor_49U_32_4_17_out1[29];

         assign digitrec_gen000001_4_22_in19 = digitrec_Xor_49U_32_4_17_out1[30];

         assign digitrec_gen000001_4_22_in18 = digitrec_Xor_49U_32_4_17_out1[31];

         assign digitrec_gen000001_4_22_in17 = digitrec_Xor_49U_32_4_17_out1[32];

         assign digitrec_gen000001_4_22_in16 = digitrec_Xor_49U_32_4_17_out1[33];

         assign digitrec_gen000001_4_22_in15 = digitrec_Xor_49U_32_4_17_out1[34];

         assign digitrec_gen000001_4_22_in14 = digitrec_Xor_49U_32_4_17_out1[35];

         assign digitrec_gen000001_4_22_in13 = digitrec_Xor_49U_32_4_17_out1[36];

         assign digitrec_gen000001_4_22_in12 = digitrec_Xor_49U_32_4_17_out1[37];

         assign digitrec_gen000001_4_22_in11 = digitrec_Xor_49U_32_4_17_out1[38];

         assign digitrec_gen000001_4_22_in10 = digitrec_Xor_49U_32_4_17_out1[39];

         assign digitrec_gen000001_4_22_in9 = digitrec_Xor_49U_32_4_17_out1[40];

         assign digitrec_gen000001_4_22_in8 = digitrec_Xor_49U_32_4_17_out1[41];

         assign digitrec_gen000001_4_22_in7 = digitrec_Xor_49U_32_4_17_out1[42];

         assign digitrec_gen000001_4_22_in6 = digitrec_Xor_49U_32_4_17_out1[43];

         assign digitrec_gen000001_4_22_in5 = digitrec_Xor_49U_32_4_17_out1[44];

         assign digitrec_gen000001_4_22_in4 = digitrec_Xor_49U_32_4_17_out1[45];

         assign digitrec_gen000001_4_22_in3 = digitrec_Xor_49U_32_4_17_out1[46];

         assign digitrec_gen000001_4_22_in2 = digitrec_Xor_49U_32_4_17_out1[47];

         assign digitrec_gen000001_4_22_in1 = digitrec_Xor_49U_32_4_17_out1[48];

         // resource: digitrec_gen000001_4  instance: digitrec_gen000001_4_22
         assign digitrec_gen000001_4_22_out1 = {5'b00000, digitrec_Xor_49U_32_4_17_out1[0]} + {5'b00000, digitrec_gen000001_4_22_in48} + {5'b00000, digitrec_gen000001_4_22_in47} + {5'b00000, digitrec_gen000001_4_22_in46} + {5'b00000, digitrec_gen000001_4_22_in45} + {5'b00000, digitrec_gen000001_4_22_in44} + {5'b00000, digitrec_gen000001_4_22_in43} + {5'b00000, digitrec_gen000001_4_22_in42} + {5'b00000
             , digitrec_gen000001_4_22_in41} + {5'b00000, digitrec_gen000001_4_22_in40} + {5'b00000, digitrec_gen000001_4_22_in39} + {5'b00000, digitrec_gen000001_4_22_in38} + {5'b00000, digitrec_gen000001_4_22_in37} + {5'b00000, digitrec_gen000001_4_22_in36} + {5'b00000, digitrec_gen000001_4_22_in35} + {5'b00000, digitrec_gen000001_4_22_in34} + {5'b00000, digitrec_gen000001_4_22_in33} + {5'b00000, digitrec_gen000001_4_22_in32} + {5'b00000, digitrec_gen000001_4_22_in31} + {5'b00000
             , digitrec_gen000001_4_22_in30} + {5'b00000, digitrec_gen000001_4_22_in29} + {5'b00000, digitrec_gen000001_4_22_in28} + {5'b00000, digitrec_gen000001_4_22_in27} + {5'b00000, digitrec_gen000001_4_22_in26} + {5'b00000, digitrec_gen000001_4_22_in25} + {5'b00000, digitrec_gen000001_4_22_in24} + {5'b00000, digitrec_gen000001_4_22_in23} + {5'b00000, digitrec_gen000001_4_22_in22} + {5'b00000, digitrec_gen000001_4_22_in21} + {5'b00000, digitrec_gen000001_4_22_in20} + {5'b00000
             , digitrec_gen000001_4_22_in19} + {5'b00000, digitrec_gen000001_4_22_in18} + {5'b00000, digitrec_gen000001_4_22_in17} + {5'b00000, digitrec_gen000001_4_22_in16} + {5'b00000, digitrec_gen000001_4_22_in15} + {5'b00000, digitrec_gen000001_4_22_in14} + {5'b00000, digitrec_gen000001_4_22_in13} + {5'b00000, digitrec_gen000001_4_22_in12} + {5'b00000, digitrec_gen000001_4_22_in11} + {5'b00000, digitrec_gen000001_4_22_in10} + {5'b00000, digitrec_gen000001_4_22_in9} + {5'b00000
             , digitrec_gen000001_4_22_in8} + {5'b00000, digitrec_gen000001_4_22_in7} + {5'b00000, digitrec_gen000001_4_22_in6} + {5'b00000, digitrec_gen000001_4_22_in5} + {5'b00000, digitrec_gen000001_4_22_in4} + {5'b00000, digitrec_gen000001_4_22_in3} + {5'b00000, digitrec_gen000001_4_22_in2} + {5'b00000, digitrec_gen000001_4_22_in1};

         assign digitrec_gen000001_4_23_in48 = digitrec_Xor_49U_32_4_18_out1[1];

         assign digitrec_gen000001_4_23_in47 = digitrec_Xor_49U_32_4_18_out1[2];

         assign digitrec_gen000001_4_23_in46 = digitrec_Xor_49U_32_4_18_out1[3];

         assign digitrec_gen000001_4_23_in45 = digitrec_Xor_49U_32_4_18_out1[4];

         assign digitrec_gen000001_4_23_in44 = digitrec_Xor_49U_32_4_18_out1[5];

         assign digitrec_gen000001_4_23_in43 = digitrec_Xor_49U_32_4_18_out1[6];

         assign digitrec_gen000001_4_23_in42 = digitrec_Xor_49U_32_4_18_out1[7];

         assign digitrec_gen000001_4_23_in41 = digitrec_Xor_49U_32_4_18_out1[8];

         assign digitrec_gen000001_4_23_in40 = digitrec_Xor_49U_32_4_18_out1[9];

         assign digitrec_gen000001_4_23_in39 = digitrec_Xor_49U_32_4_18_out1[10];

         assign digitrec_gen000001_4_23_in38 = digitrec_Xor_49U_32_4_18_out1[11];

         assign digitrec_gen000001_4_23_in37 = digitrec_Xor_49U_32_4_18_out1[12];

         assign digitrec_gen000001_4_23_in36 = digitrec_Xor_49U_32_4_18_out1[13];

         assign digitrec_gen000001_4_23_in35 = digitrec_Xor_49U_32_4_18_out1[14];

         assign digitrec_gen000001_4_23_in34 = digitrec_Xor_49U_32_4_18_out1[15];

         assign digitrec_gen000001_4_23_in33 = digitrec_Xor_49U_32_4_18_out1[16];

         assign digitrec_gen000001_4_23_in32 = digitrec_Xor_49U_32_4_18_out1[17];

         assign digitrec_gen000001_4_23_in31 = digitrec_Xor_49U_32_4_18_out1[18];

         assign digitrec_gen000001_4_23_in30 = digitrec_Xor_49U_32_4_18_out1[19];

         assign digitrec_gen000001_4_23_in29 = digitrec_Xor_49U_32_4_18_out1[20];

         assign digitrec_gen000001_4_23_in28 = digitrec_Xor_49U_32_4_18_out1[21];

         assign digitrec_gen000001_4_23_in27 = digitrec_Xor_49U_32_4_18_out1[22];

         assign digitrec_gen000001_4_23_in26 = digitrec_Xor_49U_32_4_18_out1[23];

         assign digitrec_gen000001_4_23_in25 = digitrec_Xor_49U_32_4_18_out1[24];

         assign digitrec_gen000001_4_23_in24 = digitrec_Xor_49U_32_4_18_out1[25];

         assign digitrec_gen000001_4_23_in23 = digitrec_Xor_49U_32_4_18_out1[26];

         assign digitrec_gen000001_4_23_in22 = digitrec_Xor_49U_32_4_18_out1[27];

         assign digitrec_gen000001_4_23_in21 = digitrec_Xor_49U_32_4_18_out1[28];

         assign digitrec_gen000001_4_23_in20 = digitrec_Xor_49U_32_4_18_out1[29];

         assign digitrec_gen000001_4_23_in19 = digitrec_Xor_49U_32_4_18_out1[30];

         assign digitrec_gen000001_4_23_in18 = digitrec_Xor_49U_32_4_18_out1[31];

         assign digitrec_gen000001_4_23_in17 = digitrec_Xor_49U_32_4_18_out1[32];

         assign digitrec_gen000001_4_23_in16 = digitrec_Xor_49U_32_4_18_out1[33];

         assign digitrec_gen000001_4_23_in15 = digitrec_Xor_49U_32_4_18_out1[34];

         assign digitrec_gen000001_4_23_in14 = digitrec_Xor_49U_32_4_18_out1[35];

         assign digitrec_gen000001_4_23_in13 = digitrec_Xor_49U_32_4_18_out1[36];

         assign digitrec_gen000001_4_23_in12 = digitrec_Xor_49U_32_4_18_out1[37];

         assign digitrec_gen000001_4_23_in11 = digitrec_Xor_49U_32_4_18_out1[38];

         assign digitrec_gen000001_4_23_in10 = digitrec_Xor_49U_32_4_18_out1[39];

         assign digitrec_gen000001_4_23_in9 = digitrec_Xor_49U_32_4_18_out1[40];

         assign digitrec_gen000001_4_23_in8 = digitrec_Xor_49U_32_4_18_out1[41];

         assign digitrec_gen000001_4_23_in7 = digitrec_Xor_49U_32_4_18_out1[42];

         assign digitrec_gen000001_4_23_in6 = digitrec_Xor_49U_32_4_18_out1[43];

         assign digitrec_gen000001_4_23_in5 = digitrec_Xor_49U_32_4_18_out1[44];

         assign digitrec_gen000001_4_23_in4 = digitrec_Xor_49U_32_4_18_out1[45];

         assign digitrec_gen000001_4_23_in3 = digitrec_Xor_49U_32_4_18_out1[46];

         assign digitrec_gen000001_4_23_in2 = digitrec_Xor_49U_32_4_18_out1[47];

         assign digitrec_gen000001_4_23_in1 = digitrec_Xor_49U_32_4_18_out1[48];

         // resource: digitrec_gen000001_4  instance: digitrec_gen000001_4_23
         assign digitrec_gen000001_4_23_out1 = {5'b00000, digitrec_Xor_49U_32_4_18_out1[0]} + {5'b00000, digitrec_gen000001_4_23_in48} + {5'b00000, digitrec_gen000001_4_23_in47} + {5'b00000, digitrec_gen000001_4_23_in46} + {5'b00000, digitrec_gen000001_4_23_in45} + {5'b00000, digitrec_gen000001_4_23_in44} + {5'b00000, digitrec_gen000001_4_23_in43} + {5'b00000, digitrec_gen000001_4_23_in42} + {5'b00000
             , digitrec_gen000001_4_23_in41} + {5'b00000, digitrec_gen000001_4_23_in40} + {5'b00000, digitrec_gen000001_4_23_in39} + {5'b00000, digitrec_gen000001_4_23_in38} + {5'b00000, digitrec_gen000001_4_23_in37} + {5'b00000, digitrec_gen000001_4_23_in36} + {5'b00000, digitrec_gen000001_4_23_in35} + {5'b00000, digitrec_gen000001_4_23_in34} + {5'b00000, digitrec_gen000001_4_23_in33} + {5'b00000, digitrec_gen000001_4_23_in32} + {5'b00000, digitrec_gen000001_4_23_in31} + {5'b00000
             , digitrec_gen000001_4_23_in30} + {5'b00000, digitrec_gen000001_4_23_in29} + {5'b00000, digitrec_gen000001_4_23_in28} + {5'b00000, digitrec_gen000001_4_23_in27} + {5'b00000, digitrec_gen000001_4_23_in26} + {5'b00000, digitrec_gen000001_4_23_in25} + {5'b00000, digitrec_gen000001_4_23_in24} + {5'b00000, digitrec_gen000001_4_23_in23} + {5'b00000, digitrec_gen000001_4_23_in22} + {5'b00000, digitrec_gen000001_4_23_in21} + {5'b00000, digitrec_gen000001_4_23_in20} + {5'b00000
             , digitrec_gen000001_4_23_in19} + {5'b00000, digitrec_gen000001_4_23_in18} + {5'b00000, digitrec_gen000001_4_23_in17} + {5'b00000, digitrec_gen000001_4_23_in16} + {5'b00000, digitrec_gen000001_4_23_in15} + {5'b00000, digitrec_gen000001_4_23_in14} + {5'b00000, digitrec_gen000001_4_23_in13} + {5'b00000, digitrec_gen000001_4_23_in12} + {5'b00000, digitrec_gen000001_4_23_in11} + {5'b00000, digitrec_gen000001_4_23_in10} + {5'b00000, digitrec_gen000001_4_23_in9} + {5'b00000
             , digitrec_gen000001_4_23_in8} + {5'b00000, digitrec_gen000001_4_23_in7} + {5'b00000, digitrec_gen000001_4_23_in6} + {5'b00000, digitrec_gen000001_4_23_in5} + {5'b00000, digitrec_gen000001_4_23_in4} + {5'b00000, digitrec_gen000001_4_23_in3} + {5'b00000, digitrec_gen000001_4_23_in2} + {5'b00000, digitrec_gen000001_4_23_in1};

         // resource: digitrec_LessThan_1U_24_4  instance: digitrec_LessThan_1U_24_4_24
         assign digitrec_LessThan_1U_24_4_24_out1 = digitrec_gen000001_4_19_out1 < knn_set_0_if_2_dout_wire;

         // resource: digitrec_LessThan_1U_24_4  instance: digitrec_LessThan_1U_24_4_25
         assign digitrec_LessThan_1U_24_4_25_out1 = digitrec_gen000001_4_20_out1 < knn_set_1_if_2_dout_wire;

         // resource: digitrec_LessThan_1U_24_4  instance: digitrec_LessThan_1U_24_4_26
         assign digitrec_LessThan_1U_24_4_26_out1 = digitrec_gen000001_4_21_out1 < knn_set_2_if_2_dout_wire;

         // resource: digitrec_LessThan_1U_24_4  instance: digitrec_LessThan_1U_24_4_27
         assign digitrec_LessThan_1U_24_4_27_out1 = digitrec_gen000001_4_22_out1 < knn_set_3_if_2_dout_wire;

         // resource: digitrec_LessThan_1U_24_4  instance: digitrec_LessThan_1U_24_4_28
         assign digitrec_LessThan_1U_24_4_28_out1 = digitrec_gen000001_4_23_out1 < knn_set_4_if_2_dout_wire;

         // resource: digitrec_Add2i1s12_4  instance: digitrec_Add2i1s12_4_29
         assign digitrec_Add2i1s12_4_29_out1 = s_reg_32 + 12'd0001;

         assign digitrec_ROM_1800X49_training_data_5_training_data_5_36_in1 = s_reg_32[10:0];

         // resource: digitrec_LessThan_1U_24_4  instance: digitrec_LessThan_1U_24_4_40
         assign digitrec_LessThan_1U_24_4_40_out1 = digitrec_gen000001_4_19_out1 < knn_set_5_if_2_dout_wire;

         // resource: digitrec_LessThan_1U_24_4  instance: digitrec_LessThan_1U_24_4_41
         assign digitrec_LessThan_1U_24_4_41_out1 = digitrec_gen000001_4_20_out1 < knn_set_6_if_2_dout_wire;

         // resource: digitrec_LessThan_1U_24_4  instance: digitrec_LessThan_1U_24_4_42
         assign digitrec_LessThan_1U_24_4_42_out1 = digitrec_gen000001_4_21_out1 < knn_set_7_if_2_dout_wire;

         // resource: digitrec_LessThan_1U_24_4  instance: digitrec_LessThan_1U_24_4_43
         assign digitrec_LessThan_1U_24_4_43_out1 = digitrec_gen000001_4_22_out1 < knn_set_8_if_2_dout_wire;

         // resource: digitrec_LessThan_1U_24_4  instance: digitrec_LessThan_1U_24_4_44
         assign digitrec_LessThan_1U_24_4_44_out1 = digitrec_gen000001_4_23_out1 < knn_set_9_if_2_dout_wire;

         // resource: digitrec_LtiLLs12_4  instance: digitrec_LtiLLs12_4_45
         assign digitrec_LtiLLs12_4_45_out1 = s_reg_33[11] ^ s_reg_33 < 12'd1800;

         // resource: digitrec_Lti10s5_4  instance: digitrec_Lti10s5_4_47
         assign digitrec_Lti10s5_4_47_out1 = s_reg_35[4] ^ s_reg_35 < 5'd10;

         // resource: mux_4bx6i
         always @(gs_ctrl44 or s_reg_35[3:0] or digitrec_N_Mux_4_2_27_4_52_out1 or s_reg_45 or s_reg_51[3:0] or s_reg_52[3:0])
          begin :drive_digitrec_RAM_10X32_2_kscore_51_in1
            case (gs_ctrl44) 

               3'd1: begin
                  digitrec_RAM_10X32_2_kscore_51_in1 = s_reg_35[3:0];
               end
               
               3'd2: begin
                  digitrec_RAM_10X32_2_kscore_51_in1 = digitrec_N_Mux_4_2_27_4_52_out1;
               end
               
               3'd3: begin
                  digitrec_RAM_10X32_2_kscore_51_in1 = s_reg_45;
               end
               
               3'd4: begin
                  digitrec_RAM_10X32_2_kscore_51_in1 = s_reg_51[3:0];
               end
               
               3'd5: begin
                  digitrec_RAM_10X32_2_kscore_51_in1 = s_reg_52[3:0];
               end
               
               default: begin
                  digitrec_RAM_10X32_2_kscore_51_in1 = 4'd00;
               end
               
            endcase

         end

         // resource: mux_32bx2i
         always @(gs_ctrl32 or digitrec_Add2i1s32_4_60_out1)
          begin :drive_digitrec_RAM_10X32_2_kscore_51_DIN
            if (gs_ctrl32) begin
               digitrec_RAM_10X32_2_kscore_51_DIN = digitrec_Add2i1s32_4_60_out1;
            end
            else begin
               digitrec_RAM_10X32_2_kscore_51_DIN = 32'd0000000000;
            end
         end

         // resource: mux_1bx2i
         always @(gs_ctrl46 or digitrec_LtiLLs12_4_45_out1 or digitrec_Lti10s5_4_47_out1 or s_reg_42 or digitrec_Lti10s5_4_71_out1)
          begin :drive_digitrec_RAM_10X32_2_kscore_51_CE
            case (gs_ctrl46) 

               3'd1: begin
                  if (digitrec_LtiLLs12_4_45_out1) begin
                     digitrec_RAM_10X32_2_kscore_51_CE = 1'b0;
                  end
                  else begin
                     digitrec_RAM_10X32_2_kscore_51_CE = 1'b1;
                  end
               end
               
               3'd2: begin
                  if (digitrec_Lti10s5_4_47_out1) begin
                     digitrec_RAM_10X32_2_kscore_51_CE = 1'b1;
                  end
                  else begin
                     digitrec_RAM_10X32_2_kscore_51_CE = 1'b0;
                  end
               end
               
               3'd3: begin
                  digitrec_RAM_10X32_2_kscore_51_CE = 1'b1;
               end
               
               3'd4: begin
                  if (s_reg_42) begin
                     digitrec_RAM_10X32_2_kscore_51_CE = 1'b0;
                  end
                  else begin
                     digitrec_RAM_10X32_2_kscore_51_CE = 1'b1;
                  end
               end
               
               3'd5: begin
                  if (digitrec_Lti10s5_4_71_out1) begin
                     digitrec_RAM_10X32_2_kscore_51_CE = 1'b1;
                  end
                  else begin
                     digitrec_RAM_10X32_2_kscore_51_CE = 1'b0;
                  end
               end
               
               default: begin
                  digitrec_RAM_10X32_2_kscore_51_CE = 1'b0;
               end
               
            endcase

         end

         // resource: mux_1bx2i
         always @(gs_ctrl47 or digitrec_LtiLLs12_4_45_out1 or digitrec_Lti10s5_4_47_out1 or s_reg_42)
          begin :drive_digitrec_RAM_10X32_2_kscore_51_RW
            case (gs_ctrl47) 

               2'd1: begin
                  if (digitrec_LtiLLs12_4_45_out1) begin
                     digitrec_RAM_10X32_2_kscore_51_RW = 1'b0;
                  end
                  else begin
                     digitrec_RAM_10X32_2_kscore_51_RW = 1'b1;
                  end
               end
               
               2'd2: begin
                  if (digitrec_Lti10s5_4_47_out1) begin
                     digitrec_RAM_10X32_2_kscore_51_RW = 1'b1;
                  end
                  else begin
                     digitrec_RAM_10X32_2_kscore_51_RW = 1'b0;
                  end
               end
               
               2'd3: begin
                  if (s_reg_42) begin
                     digitrec_RAM_10X32_2_kscore_51_RW = 1'b0;
                  end
                  else begin
                     digitrec_RAM_10X32_2_kscore_51_RW = 1'b1;
                  end
               end
               
               default: begin
                  digitrec_RAM_10X32_2_kscore_51_RW = 1'b0;
               end
               
            endcase

         end

         // resource: digitrec_Lti10s5_4  instance: digitrec_Lti10s5_4_49
         assign digitrec_Lti10s5_4_49_out1 = s_reg_41[4] ^ s_reg_41 < 5'd10;

         // resource: [0]::[0]::knn_set.knn_vote
         always @(s_reg_40 or knn_set_0_if_2_dout_wire or knn_set_1_if_2_dout_wire or knn_set_2_if_2_dout_wire or knn_set_3_if_2_dout_wire or knn_set_4_if_2_dout_wire or knn_set_5_if_2_dout_wire or knn_set_6_if_2_dout_wire or knn_set_7_if_2_dout_wire or knn_set_8_if_2_dout_wire or knn_set_9_if_2_dout_wire)
          begin :digitrec_N_Mux_6_9_33_4_50
            case (s_reg_40) 

               4'd00: begin
                  digitrec_N_Mux_6_9_33_4_50_out1 = knn_set_0_if_2_dout_wire;
               end
               
               4'd01: begin
                  digitrec_N_Mux_6_9_33_4_50_out1 = knn_set_1_if_2_dout_wire;
               end
               
               4'd02: begin
                  digitrec_N_Mux_6_9_33_4_50_out1 = knn_set_2_if_2_dout_wire;
               end
               
               4'd03: begin
                  digitrec_N_Mux_6_9_33_4_50_out1 = knn_set_3_if_2_dout_wire;
               end
               
               4'd04: begin
                  digitrec_N_Mux_6_9_33_4_50_out1 = knn_set_4_if_2_dout_wire;
               end
               
               4'd05: begin
                  digitrec_N_Mux_6_9_33_4_50_out1 = knn_set_5_if_2_dout_wire;
               end
               
               4'd06: begin
                  digitrec_N_Mux_6_9_33_4_50_out1 = knn_set_6_if_2_dout_wire;
               end
               
               4'd07: begin
                  digitrec_N_Mux_6_9_33_4_50_out1 = knn_set_7_if_2_dout_wire;
               end
               
               4'd08: begin
                  digitrec_N_Mux_6_9_33_4_50_out1 = knn_set_8_if_2_dout_wire;
               end
               
               4'd09: begin
                  digitrec_N_Mux_6_9_33_4_50_out1 = knn_set_9_if_2_dout_wire;
               end
               
            endcase

         end

         // resource: digitrec_LessThan_1U_24_4  instance: digitrec_LessThan_1U_24_4_51
         assign digitrec_LessThan_1U_24_4_51_out1 = digitrec_N_Mux_6_9_33_4_50_out1 < s_reg_36;

         // resource: digitrec_N_Mux_4_2_27_4
         always @(digitrec_LessThan_1U_24_4_51_out1 or s_reg_39[3:0] or s_reg_37)
          begin :digitrec_N_Mux_4_2_27_4_52
            if (digitrec_LessThan_1U_24_4_51_out1) begin
               digitrec_N_Mux_4_2_27_4_52_out1 = s_reg_39[3:0];
            end
            else begin
               digitrec_N_Mux_4_2_27_4_52_out1 = s_reg_37;
            end
         end

         // resource: [0]::knn_set  instance: digitrec_OrReduction_1U_1_4_53
         assign digitrec_OrReduction_1U_1_4_53_out1 = |digitrec_N_Mux_4_2_27_4_52_out1;

         // resource: [0]::[0]::knn_set.knn_vote
         always @(s_reg_43 or knn_set_0_if_2_dout_wire or knn_set_1_if_2_dout_wire or knn_set_2_if_2_dout_wire or knn_set_3_if_2_dout_wire or knn_set_4_if_2_dout_wire or knn_set_5_if_2_dout_wire or knn_set_6_if_2_dout_wire or knn_set_7_if_2_dout_wire or knn_set_8_if_2_dout_wire or knn_set_9_if_2_dout_wire)
          begin :digitrec_N_Mux_6_9_33_4_56
            case (s_reg_43) 

               4'd00: begin
                  digitrec_N_Mux_6_9_33_4_56_out1 = knn_set_0_if_2_dout_wire;
               end
               
               4'd01: begin
                  digitrec_N_Mux_6_9_33_4_56_out1 = knn_set_1_if_2_dout_wire;
               end
               
               4'd02: begin
                  digitrec_N_Mux_6_9_33_4_56_out1 = knn_set_2_if_2_dout_wire;
               end
               
               4'd03: begin
                  digitrec_N_Mux_6_9_33_4_56_out1 = knn_set_3_if_2_dout_wire;
               end
               
               4'd04: begin
                  digitrec_N_Mux_6_9_33_4_56_out1 = knn_set_4_if_2_dout_wire;
               end
               
               4'd05: begin
                  digitrec_N_Mux_6_9_33_4_56_out1 = knn_set_5_if_2_dout_wire;
               end
               
               4'd06: begin
                  digitrec_N_Mux_6_9_33_4_56_out1 = knn_set_6_if_2_dout_wire;
               end
               
               4'd07: begin
                  digitrec_N_Mux_6_9_33_4_56_out1 = knn_set_7_if_2_dout_wire;
               end
               
               4'd08: begin
                  digitrec_N_Mux_6_9_33_4_56_out1 = knn_set_8_if_2_dout_wire;
               end
               
               4'd09: begin
                  digitrec_N_Mux_6_9_33_4_56_out1 = knn_set_9_if_2_dout_wire;
               end
               
            endcase

         end

         // resource: digitrec_N_Mux_6_2_28_4
         always @(s_reg_44 or digitrec_N_Mux_6_9_33_4_56_out1 or s_reg_36)
          begin :digitrec_N_Mux_6_2_28_4_57
            if (s_reg_44) begin
               digitrec_N_Mux_6_2_28_4_57_out1 = digitrec_N_Mux_6_9_33_4_56_out1;
            end
            else begin
               digitrec_N_Mux_6_2_28_4_57_out1 = s_reg_36;
            end
         end

         // resource: digitrec_Add2i1s32_4  instance: digitrec_Add2i1s32_4_60
         assign digitrec_Add2i1s32_4_60_out1 = digitrec_RAM_10X32_2_kscore_51_out1 + 32'd0000000001;

         // resource: digitrec_GreaterThan_1U_30_4  instance: digitrec_GreaterThan_1U_30_4_69
         assign digitrec_GreaterThan_1U_30_4_69_out1 = digitrec_RAM_10X32_2_kscore_51_out1[31] ^ (s_reg_50[31] ^ digitrec_RAM_10X32_2_kscore_51_out1 > s_reg_50);

         // resource: digitrec_N_Mux_4_2_27_4
         always @(digitrec_GreaterThan_1U_30_4_69_out1 or s_reg_51[3:0] or s_reg_49)
          begin :digitrec_N_Mux_4_2_27_4_70
            if (digitrec_GreaterThan_1U_30_4_69_out1) begin
               digitrec_N_Mux_4_2_27_4_70_out1 = s_reg_51[3:0];
            end
            else begin
               digitrec_N_Mux_4_2_27_4_70_out1 = s_reg_49;
            end
         end

         // resource: digitrec_Lti10s5_4  instance: digitrec_Lti10s5_4_71
         assign digitrec_Lti10s5_4_71_out1 = s_reg_52[4] ^ s_reg_52 < 5'd10;

         // resource: digitrec_N_Mux_32_2_31_4
         always @(s_reg_53 or digitrec_RAM_10X32_2_kscore_51_out1 or s_reg_50)
          begin :digitrec_N_Mux_32_2_31_4_72
            if (s_reg_53) begin
               digitrec_N_Mux_32_2_31_4_72_out1 = digitrec_RAM_10X32_2_kscore_51_out1;
            end
            else begin
               digitrec_N_Mux_32_2_31_4_72_out1 = s_reg_50;
            end
         end

         // resource: mux_5bx2i
         // resource: regr_5b
         always @(posedge clk)
          begin :drive_sreg_1
            case (global_state) 

               5'd14: begin
                  if (digitrec_Lti10s5_4_47_out1) begin
                  end
                  else begin
                     sreg_1 <= 5'd00;
                  end
               end
               
               5'd16: begin
                  if (s_reg_42) begin
                     sreg_1 <= s_reg_41;
                  end
               end
               
            endcase

         end

         // resource: regr_5b
         always @(posedge clk)
          begin :drive_global_state
            if (rst == 1'b0) begin
               global_state <= 5'd00;
            end
            else begin
               global_state <= global_state_next;
            end
         end

         // resource: mux_5bx9i
         always @(global_state or core_cmd_valid_i or digitrec_Lti10s5_4_12_out1 or digitrec_LtiLLs12_4_45_out1 or digitrec_Lti10s5_4_47_out1 or s_reg_42 or digitrec_Lti10s5_4_71_out1 or core_resp_ready_i)
          begin :drive_global_state_next
            case (global_state) 

               5'd00, 5'd01, 5'd28: begin
                  if (core_cmd_valid_i) begin
                     global_state_next = 5'd02;
                  end
                  else begin
                     global_state_next = 5'd01;
                  end
               end
               
               5'd02, 5'd11: begin
                  global_state_next = 5'd03;
               end
               
               5'd10: begin
                  if (digitrec_Lti10s5_4_12_out1) begin
                     global_state_next = global_state + 5'd01;
                  end
                  else begin
                     global_state_next = 5'd12;
                  end
               end
               
               5'd13: begin
                  if (digitrec_LtiLLs12_4_45_out1) begin
                     global_state_next = 5'd12;
                  end
                  else begin
                     global_state_next = global_state + 5'd01;
                  end
               end
               
               5'd14: begin
                  if (digitrec_Lti10s5_4_47_out1) begin
                     global_state_next = 5'd14;
                  end
                  else begin
                     global_state_next = global_state + 5'd01;
                  end
               end
               
               5'd16: begin
                  if (s_reg_42) begin
                     global_state_next = 5'd15;
                  end
                  else begin
                     global_state_next = global_state + 5'd01;
                  end
               end
               
               5'd25: begin
                  if (digitrec_Lti10s5_4_71_out1) begin
                     global_state_next = 5'd24;
                  end
                  else begin
                     global_state_next = global_state + 5'd01;
                  end
               end
               
               5'd26: begin
                  if (core_resp_ready_i) begin
                     global_state_next = global_state + 5'd01;
                  end
                  else begin
                     global_state_next = 5'd26;
                  end
               end
               
               default: begin
                  global_state_next = global_state + 5'd01;
               end
               
            endcase

         end

         // resource: mux_1bx2i
         // resource: regr_1b
         always @(posedge clk)
          begin :drive_gs_ctrl0
            if (rst == 1'b0) begin
               gs_ctrl0 <= 1'b1;
            end
            else begin
               case (global_state_next) 

                  5'd00, 5'd28: begin
                     gs_ctrl0 <= 1'b1;
                  end
                  
                  default: begin
                     gs_ctrl0 <= 1'b0;
                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i
         // resource: regr_1b
         always @(posedge clk)
          begin :drive_gs_ctrl1
            if (rst == 1'b0) begin
               gs_ctrl1 <= 1'b0;
            end
            else begin
               case (global_state_next) 

                  5'd02, 5'd11: begin
                     gs_ctrl1 <= 1'b1;
                  end
                  
                  default: begin
                     gs_ctrl1 <= 1'b0;
                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i
         // resource: regr_1b
         always @(posedge clk)
          begin :drive_gs_ctrl2
            if (rst == 1'b0) begin
               gs_ctrl2 <= 1'b0;
            end
            else begin
               case (global_state_next) 

                  5'd12: begin
                     gs_ctrl2 <= 1'b1;
                  end
                  
                  default: begin
                     gs_ctrl2 <= 1'b0;
                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i
         // resource: regr_1b
         always @(posedge clk)
          begin :drive_gs_ctrl7
            if (rst == 1'b0) begin
               gs_ctrl7 <= 1'b0;
            end
            else begin
               case (global_state_next) 

                  5'd03: begin
                     gs_ctrl7 <= 1'b1;
                  end
                  
                  default: begin
                     gs_ctrl7 <= 1'b0;
                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i
         // resource: regr_1b
         always @(posedge clk)
          begin :drive_gs_ctrl10
            if (rst == 1'b0) begin
               gs_ctrl10 <= 1'b0;
            end
            else begin
               case (global_state_next) 

                  5'd04: begin
                     gs_ctrl10 <= 1'b1;
                  end
                  
                  default: begin
                     gs_ctrl10 <= 1'b0;
                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i
         // resource: regr_1b
         always @(posedge clk)
          begin :drive_gs_ctrl13
            if (rst == 1'b0) begin
               gs_ctrl13 <= 1'b0;
            end
            else begin
               case (global_state_next) 

                  5'd05: begin
                     gs_ctrl13 <= 1'b1;
                  end
                  
                  default: begin
                     gs_ctrl13 <= 1'b0;
                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i
         // resource: regr_1b
         always @(posedge clk)
          begin :drive_gs_ctrl16
            if (rst == 1'b0) begin
               gs_ctrl16 <= 1'b0;
            end
            else begin
               case (global_state_next) 

                  5'd06: begin
                     gs_ctrl16 <= 1'b1;
                  end
                  
                  default: begin
                     gs_ctrl16 <= 1'b0;
                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i
         // resource: regr_1b
         always @(posedge clk)
          begin :drive_gs_ctrl17
            if (rst == 1'b0) begin
               gs_ctrl17 <= 1'b0;
            end
            else begin
               case (global_state_next) 

                  5'd13: begin
                     gs_ctrl17 <= 1'b1;
                  end
                  
                  default: begin
                     gs_ctrl17 <= 1'b0;
                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i
         // resource: regr_1b
         always @(posedge clk)
          begin :drive_gs_ctrl19
            if (rst == 1'b0) begin
               gs_ctrl19 <= 1'b0;
            end
            else begin
               case (global_state_next) 

                  5'd07: begin
                     gs_ctrl19 <= 1'b1;
                  end
                  
                  default: begin
                     gs_ctrl19 <= 1'b0;
                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i
         // resource: regr_1b
         always @(posedge clk)
          begin :drive_gs_ctrl22
            if (rst == 1'b0) begin
               gs_ctrl22 <= 1'b0;
            end
            else begin
               case (global_state_next) 

                  5'd08: begin
                     gs_ctrl22 <= 1'b1;
                  end
                  
                  default: begin
                     gs_ctrl22 <= 1'b0;
                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i
         // resource: regr_1b
         always @(posedge clk)
          begin :drive_gs_ctrl25
            if (rst == 1'b0) begin
               gs_ctrl25 <= 1'b0;
            end
            else begin
               case (global_state_next) 

                  5'd09: begin
                     gs_ctrl25 <= 1'b1;
                  end
                  
                  default: begin
                     gs_ctrl25 <= 1'b0;
                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i
         // resource: regr_1b
         always @(posedge clk)
          begin :drive_gs_ctrl28
            if (rst == 1'b0) begin
               gs_ctrl28 <= 1'b0;
            end
            else begin
               case (global_state_next) 

                  5'd10: begin
                     gs_ctrl28 <= 1'b1;
                  end
                  
                  default: begin
                     gs_ctrl28 <= 1'b0;
                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i
         // resource: regr_1b
         always @(posedge clk)
          begin :drive_gs_ctrl30
            if (rst == 1'b0) begin
               gs_ctrl30 <= 1'b0;
            end
            else begin
               case (global_state_next) 

                  5'd11: begin
                     gs_ctrl30 <= 1'b1;
                  end
                  
                  default: begin
                     gs_ctrl30 <= 1'b0;
                  end
                  
               endcase

            end
         end

         // resource: mux_1bx2i
         // resource: regr_1b
         always @(posedge clk)
          begin :drive_gs_ctrl32
            if (rst == 1'b0) begin
               gs_ctrl32 <= 1'b0;
            end
            else begin
               case (global_state_next) 

                  5'd16: begin
                     gs_ctrl32 <= 1'b1;
                  end
                  
                  default: begin
                     gs_ctrl32 <= 1'b0;
                  end
                  
               endcase

            end
         end

         // resource: mux_3bx5i
         // resource: regr_3b
         always @(posedge clk)
          begin :drive_gs_ctrl33
            if (rst == 1'b0) begin
               gs_ctrl33 <= 3'd0;
            end
            else begin
               case (global_state_next) 

                  5'd13: begin
                     gs_ctrl33 <= 3'd1;
                  end
                  
                  5'd14: begin
                     gs_ctrl33 <= 3'd2;
                  end
                  
                  5'd16: begin
                     gs_ctrl33 <= 3'd3;
                  end
                  
                  5'd24: begin
                     gs_ctrl33 <= 3'd4;
                  end
                  
                  default: begin
                     gs_ctrl33 <= 3'd0;
                  end
                  
               endcase

            end
         end

         // resource: mux_3bx6i
         // resource: regr_3b
         always @(posedge clk)
          begin :drive_gs_ctrl44
            if (rst == 1'b0) begin
               gs_ctrl44 <= 3'd0;
            end
            else begin
               case (global_state_next) 

                  5'd14: begin
                     gs_ctrl44 <= 3'd1;
                  end
                  
                  5'd15: begin
                     gs_ctrl44 <= 3'd2;
                  end
                  
                  5'd16: begin
                     gs_ctrl44 <= 3'd3;
                  end
                  
                  5'd24: begin
                     gs_ctrl44 <= 3'd4;
                  end
                  
                  5'd25: begin
                     gs_ctrl44 <= 3'd5;
                  end
                  
                  default: begin
                     gs_ctrl44 <= 3'd0;
                  end
                  
               endcase

            end
         end

         // resource: mux_3bx6i
         // resource: regr_3b
         always @(posedge clk)
          begin :drive_gs_ctrl46
            if (rst == 1'b0) begin
               gs_ctrl46 <= 3'd0;
            end
            else begin
               case (global_state_next) 

                  5'd13: begin
                     gs_ctrl46 <= 3'd1;
                  end
                  
                  5'd14: begin
                     gs_ctrl46 <= 3'd2;
                  end
                  
                  5'd15, 5'd23, 5'd24: begin
                     gs_ctrl46 <= 3'd3;
                  end
                  
                  5'd16: begin
                     gs_ctrl46 <= 3'd4;
                  end
                  
                  5'd25: begin
                     gs_ctrl46 <= 3'd5;
                  end
                  
                  default: begin
                     gs_ctrl46 <= 3'd0;
                  end
                  
               endcase

            end
         end

         // resource: mux_2bx4i
         // resource: regr_2b
         always @(posedge clk)
          begin :drive_gs_ctrl47
            if (rst == 1'b0) begin
               gs_ctrl47 <= 2'd0;
            end
            else begin
               case (global_state_next) 

                  5'd13: begin
                     gs_ctrl47 <= 2'd1;
                  end
                  
                  5'd14: begin
                     gs_ctrl47 <= 2'd2;
                  end
                  
                  5'd16: begin
                     gs_ctrl47 <= 2'd3;
                  end
                  
                  default: begin
                     gs_ctrl47 <= 2'd0;
                  end
                  
               endcase

            end
         end

         assign s_reg_39 = sreg_1;

         assign s_reg_40 = sreg_1[3:0];

         assign core_resp_data_o = {60'b000000000000000000000000000000000000000000000000000000000000, core_resp_data_o_slice2};

         assign mem_req_addr_o = 40'd0000000000000;

         assign mem_req_tag_o = 10'd0000;

         assign mem_req_cmd_o = 5'd00;

         assign mem_req_typ_o = 3'd0;

         assign mem_req_phys_o = 1'd1;

         assign mem_req_data_o = 64'd00000000000000000000;

         assign cc_interrupt_o = 1'd0;


endmodule

