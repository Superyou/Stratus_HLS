<?xml version="1.0"?>
<source_file>
    <module>
        <name>cynw::cynw_one_shot</name>
        <id>37</id>
        <source_path>/opt/cadence/STRATUS152/share/stratus/include/cynw_comm_util.h</source_path>
        <source_line>1203</source_line>
        <source_column>7</source_column>
        <inline_module/>
        <port>
            <name>clk</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>clk</rtl_port_name>
            <clock/>
        </port>
        <port>
            <name>rst</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>rst</rtl_port_name>
        </port>
        <port>
            <name>active</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>active</rtl_port_name>
        </port>
        <signal>
            <name>m_trig_req</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_trig_req</rtl_port_name>
        </signal>
        <signal>
            <name>m_prev_trig_req</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_prev_trig_req</rtl_port_name>
        </signal>
        <signal>
            <name>m_next_trig_req</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_next_trig_req</rtl_port_name>
        </signal>
        <signal>
            <name>m_next_trig_req_reg</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_next_trig_req_reg</rtl_port_name>
        </signal>
        <signal>
            <name>m_stalling</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_stalling</rtl_port_name>
        </signal>
    </module>
    <module>
        <name>vv_add</name>
        <id>709</id>
        <source_path>vv_add.h</source_path>
        <source_line>10</source_line>
        <source_column>1</source_column>
        <port>
            <name>clk</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>clk</rtl_port_name>
            <clock>pos</clock>
        </port>
        <port>
            <name>rst</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>rst</rtl_port_name>
        </port>
        <port>
            <name>cc_busy_o</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>cc_busy_o</rtl_port_name>
        </port>
        <port>
            <name>cc_interrupt_o</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>cc_interrupt_o</rtl_port_name>
        </port>
        <port>
            <name>cc_status_i</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>cc_status_i</rtl_port_name>
        </port>
        <port>
            <name>cc_exception_i</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>cc_exception_i</rtl_port_name>
        </port>
        <port>
            <name>cc_host_id_i</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>cc_host_id_i</rtl_port_name>
        </port>
        <port>
            <name>core_cmd_ready_o</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>core_cmd_ready_o</rtl_port_name>
        </port>
        <port>
            <name>core_cmd_valid_i</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>core_cmd_valid_i</rtl_port_name>
        </port>
        <port>
            <name>core_cmd_inst_funct_i</name>
            <direction>in</direction>
            <datatype W="7">sc_uint</datatype>
            <rtl_port_name>core_cmd_inst_funct_i</rtl_port_name>
        </port>
        <port>
            <name>core_cmd_inst_rs1_i</name>
            <direction>in</direction>
            <datatype W="5">sc_uint</datatype>
            <rtl_port_name>core_cmd_inst_rs1_i</rtl_port_name>
        </port>
        <port>
            <name>core_cmd_inst_rs2_i</name>
            <direction>in</direction>
            <datatype W="5">sc_uint</datatype>
            <rtl_port_name>core_cmd_inst_rs2_i</rtl_port_name>
        </port>
        <port>
            <name>core_cmd_inst_xd_i</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>core_cmd_inst_xd_i</rtl_port_name>
        </port>
        <port>
            <name>core_cmd_inst_xs1_i</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>core_cmd_inst_xs1_i</rtl_port_name>
        </port>
        <port>
            <name>core_cmd_inst_xs2_i</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>core_cmd_inst_xs2_i</rtl_port_name>
        </port>
        <port>
            <name>core_cmd_inst_rd_i</name>
            <direction>in</direction>
            <datatype W="5">sc_uint</datatype>
            <rtl_port_name>core_cmd_inst_rd_i</rtl_port_name>
        </port>
        <port>
            <name>core_cmd_inst_opcode_i</name>
            <direction>in</direction>
            <datatype W="7">sc_uint</datatype>
            <rtl_port_name>core_cmd_inst_opcode_i</rtl_port_name>
        </port>
        <port>
            <name>core_cmd_rs1_i</name>
            <direction>in</direction>
            <datatype W="64">sc_uint</datatype>
            <rtl_port_name>core_cmd_rs1_i</rtl_port_name>
        </port>
        <port>
            <name>core_cmd_rs2_i</name>
            <direction>in</direction>
            <datatype W="64">sc_uint</datatype>
            <rtl_port_name>core_cmd_rs2_i</rtl_port_name>
        </port>
        <port>
            <name>core_resp_ready_i</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>core_resp_ready_i</rtl_port_name>
        </port>
        <port>
            <name>core_resp_valid_o</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>core_resp_valid_o</rtl_port_name>
        </port>
        <port>
            <name>core_resp_rd_o</name>
            <direction>out</direction>
            <datatype W="5">sc_uint</datatype>
            <rtl_port_name>core_resp_rd_o</rtl_port_name>
        </port>
        <port>
            <name>core_resp_data_o</name>
            <direction>out</direction>
            <datatype W="64">sc_uint</datatype>
            <rtl_port_name>core_resp_data_o</rtl_port_name>
        </port>
        <port>
            <name>mem_req_ready_i</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>mem_req_ready_i</rtl_port_name>
        </port>
        <port>
            <name>mem_req_valid_o</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>mem_req_valid_o</rtl_port_name>
        </port>
        <port>
            <name>mem_req_addr_o</name>
            <direction>out</direction>
            <datatype W="40">sc_uint</datatype>
            <rtl_port_name>mem_req_addr_o</rtl_port_name>
        </port>
        <port>
            <name>mem_req_tag_o</name>
            <direction>out</direction>
            <datatype W="10">sc_uint</datatype>
            <rtl_port_name>mem_req_tag_o</rtl_port_name>
        </port>
        <port>
            <name>mem_req_cmd_o</name>
            <direction>out</direction>
            <datatype W="5">sc_uint</datatype>
            <rtl_port_name>mem_req_cmd_o</rtl_port_name>
        </port>
        <port>
            <name>mem_req_typ_o</name>
            <direction>out</direction>
            <datatype W="3">sc_uint</datatype>
            <rtl_port_name>mem_req_typ_o</rtl_port_name>
        </port>
        <port>
            <name>mem_req_phys_o</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>mem_req_phys_o</rtl_port_name>
        </port>
        <port>
            <name>mem_req_data_o</name>
            <direction>out</direction>
            <datatype W="64">sc_uint</datatype>
            <rtl_port_name>mem_req_data_o</rtl_port_name>
        </port>
        <port>
            <name>mem_resp_valid_i</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>mem_resp_valid_i</rtl_port_name>
        </port>
        <port>
            <name>mem_resp_addr_i</name>
            <direction>in</direction>
            <datatype W="40">sc_uint</datatype>
            <rtl_port_name>mem_resp_addr_i</rtl_port_name>
        </port>
        <port>
            <name>mem_resp_tag_i</name>
            <direction>in</direction>
            <datatype W="10">sc_uint</datatype>
            <rtl_port_name>mem_resp_tag_i</rtl_port_name>
        </port>
        <port>
            <name>mem_resp_cmd_i</name>
            <direction>in</direction>
            <datatype W="5">sc_uint</datatype>
            <rtl_port_name>mem_resp_cmd_i</rtl_port_name>
        </port>
        <port>
            <name>mem_resp_typ_i</name>
            <direction>in</direction>
            <datatype W="3">sc_uint</datatype>
            <rtl_port_name>mem_resp_typ_i</rtl_port_name>
        </port>
        <port>
            <name>mem_resp_data_i</name>
            <direction>in</direction>
            <datatype W="64">sc_uint</datatype>
            <rtl_port_name>mem_resp_data_i</rtl_port_name>
        </port>
        <port>
            <name>mem_resp_has_data_i</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>mem_resp_has_data_i</rtl_port_name>
        </port>
        <port>
            <name>mem_resp_data_word_bypass_i</name>
            <direction>in</direction>
            <datatype W="64">sc_uint</datatype>
            <rtl_port_name>mem_resp_data_word_bypass_i</rtl_port_name>
        </port>
        <port>
            <name>mem_resp_store_data_i</name>
            <direction>in</direction>
            <datatype W="64">sc_uint</datatype>
            <rtl_port_name>mem_resp_store_data_i</rtl_port_name>
        </port>
        <port>
            <name>mem_resp_nack_i</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>mem_resp_nack_i</rtl_port_name>
        </port>
        <port>
            <name>mem_resp_replay_i</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>mem_resp_replay_i</rtl_port_name>
        </port>
    </module>
    <module>
        <name>cynw::cynw_sync_in_tlm</name>
        <id>3465</id>
        <source_path>/opt/cadence/STRATUS152/share/stratus/include/cynw_comm_util.h</source_path>
        <source_line>2054</source_line>
        <source_column>1</source_column>
        <inline_module/>
        <port>
            <name>m_input</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>m_input</rtl_port_name>
        </port>
    </module>
	<exit_status>0</exit_status>
</source_file>
